{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onValueChanged"},{"kind":"text","text":"("},{"kind":"externalParam","text":"disableActions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":" = false, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"valueChangedCallback"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation","preciseIdentifier":"s:6Motion14ValueAnimationC","text":"ValueAnimation"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">."},{"kind":"typeIdentifier","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback","preciseIdentifier":"s:6Motion14ValueAnimationC0B15ChangedCallbacka","text":"ValueChangedCallback"},{"kind":"text","text":"?)"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"codeListing","syntax":null,"code":["let animation = ...","animation.onValueChanged(disableActions: true) { newValue in","   \/\/ do something with new value","   \/\/ i.e.","   layer.position = newValue","}"]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Be careful of to not introducee retain cycles on this animation when capturing it or "},{"type":"codeVoice","code":"self"},{"type":"text","text":" inside the block."},{"type":"text","text":" "},{"type":"text","text":"i.e. a common thing might be to check state related to "},{"type":"codeVoice","code":"animation.toValue"},{"type":"text","text":" and if you do this without capturing the animation as "},{"type":"codeVoice","code":"weak"},{"type":"text","text":" or "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":", you’ll introduce a retain cycle."},{"type":"text","text":" "},{"type":"text","text":"This method is guaranteed to be called on the main thread, and will be called until the animation has resolved or is deallocated."}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/motion\/valueanimation\/onvaluechanged(disableactions:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Call this to register a "},{"type":"codeVoice","code":"ValueChangedCallback"},{"type":"text","text":" block that will be called anytime "},{"type":"codeVoice","code":"value"},{"type":"text","text":" changes from "},{"type":"codeVoice","code":"tick"},{"type":"text","text":" or if explicitly specified via "},{"type":"codeVoice","code":"postValueChanged"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"When called, it will give the new value that "},{"type":"codeVoice","code":"value"},{"type":"text","text":" has animated to (since the last invocation)."},{"type":"text","text":" "},{"type":"text","text":"If you’re animating "},{"type":"codeVoice","code":"CALayer"},{"type":"text","text":" objects from the block, you may supply "},{"type":"codeVoice","code":"true"},{"type":"text","text":" for "},{"type":"codeVoice","code":"disableActions"},{"type":"text","text":" to automatically have this wrapped in a "},{"type":"codeVoice","code":"CATransaction"},{"type":"text","text":" that disables implicit animations for the layer."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onValueChanged"},{"kind":"text","text":"("},{"kind":"externalParam","text":"disableActions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ValueAnimation","preciseIdentifier":"s:6Motion14ValueAnimationC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"ValueChangedCallback","preciseIdentifier":"s:6Motion14ValueAnimationC0B15ChangedCallbacka"},{"kind":"text","text":"?)"}],"title":"onValueChanged(disableActions:_:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:6Motion14ValueAnimationC02onB7Changed14disableActions_ySb_yxcSgtF","modules":[{"name":"Motion"}]},"hierarchy":{"paths":[["doc:\/\/Motion\/documentation\/Motion","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation"]]},"references":{"doc://Motion/documentation/Motion/ValueAnimation":{"role":"symbol","title":"ValueAnimation","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueAnimation"}],"abstract":[{"type":"text","text":"This class provides the ability to animate changes to values ("},{"type":"codeVoice","code":"Value"},{"type":"text","text":") over time."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValueAnimation"}],"url":"\/documentation\/motion\/valueanimation"},"doc://Motion/documentation/Motion/ValueAnimation/ValueChangedCallback":{"role":"symbol","title":"ValueAnimation.ValueChangedCallback","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueChangedCallback"}],"abstract":[{"type":"text","text":"A block to be called when "},{"type":"codeVoice","code":"value"},{"type":"text","text":" changes."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValueChangedCallback"}],"url":"\/documentation\/motion\/valueanimation\/valuechangedcallback"},"doc://Motion/documentation/Motion":{"role":"collection","title":"Motion","abstract":[],"identifier":"doc:\/\/Motion\/documentation\/Motion","kind":"symbol","type":"topic","url":"\/documentation\/motion"},"doc://Motion/documentation/Motion/ValueAnimation/onValueChanged(disableActions:_:)":{"role":"symbol","title":"onValueChanged(disableActions:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onValueChanged"},{"kind":"text","text":"("},{"kind":"externalParam","text":"disableActions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ValueAnimation","preciseIdentifier":"s:6Motion14ValueAnimationC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"ValueChangedCallback","preciseIdentifier":"s:6Motion14ValueAnimationC0B15ChangedCallbacka"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Call this to register a "},{"type":"codeVoice","code":"ValueChangedCallback"},{"type":"text","text":" block that will be called anytime "},{"type":"codeVoice","code":"value"},{"type":"text","text":" changes from "},{"type":"codeVoice","code":"tick"},{"type":"text","text":" or if explicitly specified via "},{"type":"codeVoice","code":"postValueChanged"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"When called, it will give the new value that "},{"type":"codeVoice","code":"value"},{"type":"text","text":" has animated to (since the last invocation)."},{"type":"text","text":" "},{"type":"text","text":"If you’re animating "},{"type":"codeVoice","code":"CALayer"},{"type":"text","text":" objects from the block, you may supply "},{"type":"codeVoice","code":"true"},{"type":"text","text":" for "},{"type":"codeVoice","code":"disableActions"},{"type":"text","text":" to automatically have this wrapped in a "},{"type":"codeVoice","code":"CATransaction"},{"type":"text","text":" that disables implicit animations for the layer."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)","kind":"symbol","type":"topic","url":"\/documentation\/motion\/valueanimation\/onvaluechanged(disableactions:_:)"}}}