{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/motion\/animation\/init(environment:)","title":"init(environment: AnimationEnvironment)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/motion\/animation\/completion","title":"var completion: (() -> Void)?","type":"property"},{"path":"\/documentation\/motion\/animation\/enabled","title":"var enabled: Bool","type":"property"},{"path":"\/documentation\/motion\/animation\/enableddidchange","title":"var enabledDidChange: (Bool) -> Void","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/motion\/animation\/hasresolved()","title":"func hasResolved() -> Bool","type":"method"},{"path":"\/documentation\/motion\/animation\/start()","title":"func start()","type":"method"},{"path":"\/documentation\/motion\/animation\/stop(resolveimmediately:postvaluechanged:)","title":"func stop(resolveImmediately: Bool, postValueChanged: Bool)","type":"method"},{"path":"\/documentation\/motion\/animation\/tick(frame:)","title":"func tick(frame: AnimationFrame)","type":"method"}],"path":"\/documentation\/motion\/animation","title":"Animation","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/motion\/animationgroup\/hasresolved()","title":"func hasResolved() -> Bool","type":"method"},{"path":"\/documentation\/motion\/animationgroup\/start()","title":"func start()","type":"method"},{"path":"\/documentation\/motion\/animationgroup\/stop(resolveimmediately:postvaluechanged:)","title":"func stop(resolveImmediately: Bool, postValueChanged: Bool)","type":"method"},{"path":"\/documentation\/motion\/animationgroup\/tick(frame:)","title":"func tick(frame: AnimationFrame)","type":"method"}],"path":"\/documentation\/motion\/animationgroup","title":"AnimationGroup","type":"class"},{"path":"\/documentation\/motion\/animator","title":"Animator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/motion\/basicanimation\/init(easingfunction:environment:)","title":"init(easingFunction: EasingFunction<Value.SIMDType>, environment: AnimationEnvironment)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/motion\/basicanimation\/duration","title":"var duration: CFTimeInterval","type":"property"},{"path":"\/documentation\/motion\/basicanimation\/easingfunction","title":"var easingFunction: EasingFunction<Value.SIMDType>","type":"property"},{"path":"\/documentation\/motion\/basicanimation\/fromvalue","title":"var fromValue: Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/motion\/basicanimation\/hasresolved()","title":"func hasResolved() -> Bool","type":"method"},{"path":"\/documentation\/motion\/basicanimation\/reset(postvaluechanged:)","title":"func reset(postValueChanged: Bool)","type":"method"},{"path":"\/documentation\/motion\/basicanimation\/start()","title":"func start()","type":"method"},{"path":"\/documentation\/motion\/basicanimation\/stop(resolveimmediately:postvaluechanged:)","title":"func stop(resolveImmediately: Bool, postValueChanged: Bool)","type":"method"},{"path":"\/documentation\/motion\/basicanimation\/tick(frame:)","title":"func tick(frame: AnimationFrame)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/motion\/basicanimation\/keyframeanimation(forframerate:)","title":"func keyframeAnimation(forFramerate: Int?) -> CAKeyframeAnimation","type":"method"},{"path":"\/documentation\/motion\/basicanimation\/populatekeyframeanimationdata(dt:values:keytimes:)","title":"func populateKeyframeAnimationData(dt: TimeInterval, values: inout [AnyObject], keyTimes: inout [NSNumber]) -> TimeInterval","type":"method"}],"path":"\/documentation\/motion\/basicanimation\/cakeyframeanimationemittable-implementations","title":"CAKeyframeAnimationEmittable Implementations","type":"symbol"}],"path":"\/documentation\/motion\/basicanimation","title":"BasicAnimation","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/motion\/decayanimation\/init(initialvalue:decayconstant:environment:)","title":"init(initialValue: Value, decayConstant: Value.SIMDType.Scalar, environment: AnimationEnvironment)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/motion\/decayanimation\/decayconstant","title":"var decayConstant: Value.SIMDType.Scalar","type":"property"},{"path":"\/documentation\/motion\/decayanimation\/roundingfactor","title":"var roundingFactor: Value.SIMDType.Scalar","type":"property"},{"path":"\/documentation\/motion\/decayanimation\/tovalue","title":"var toValue: Value","type":"property"},{"path":"\/documentation\/motion\/decayanimation\/velocity","title":"var velocity: Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/motion\/decayanimation\/hasresolved()","title":"func hasResolved() -> Bool","type":"method"},{"path":"\/documentation\/motion\/decayanimation\/stop(resolveimmediately:postvaluechanged:)","title":"func stop(resolveImmediately: Bool, postValueChanged: Bool)","type":"method"},{"path":"\/documentation\/motion\/decayanimation\/tick(frame:)","title":"func tick(frame: AnimationFrame)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/motion\/decayanimation\/keyframeanimation(forframerate:)","title":"func keyframeAnimation(forFramerate: Int?) -> CAKeyframeAnimation","type":"method"},{"path":"\/documentation\/motion\/decayanimation\/populatekeyframeanimationdata(dt:values:keytimes:)","title":"func populateKeyframeAnimationData(dt: TimeInterval, values: inout [AnyObject], keyTimes: inout [NSNumber]) -> TimeInterval","type":"method"}],"path":"\/documentation\/motion\/decayanimation\/cakeyframeanimationemittable-implementations","title":"CAKeyframeAnimationEmittable Implementations","type":"symbol"}],"path":"\/documentation\/motion\/decayanimation","title":"DecayAnimation","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/motion\/defaultanimationenvironment\/shared","title":"static var shared: AnimationEnvironment","type":"property"}],"path":"\/documentation\/motion\/defaultanimationenvironment","title":"DefaultAnimationEnvironment","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/motion\/springanimation\/init(initialvalue:environment:)","title":"init(initialValue: Value, environment: AnimationEnvironment)","type":"init"},{"path":"\/documentation\/motion\/springanimation\/init(initialvalue:response:dampingratio:environment:)","title":"convenience init(initialValue: Value, response: Value.SIMDType.Scalar, dampingRatio: Value.SIMDType.Scalar, environment: AnimationEnvironment)","type":"init"},{"path":"\/documentation\/motion\/springanimation\/init(initialvalue:stiffness:damping:environment:)","title":"convenience init(initialValue: Value, stiffness: Value.SIMDType.Scalar, damping: Value.SIMDType.Scalar, environment: AnimationEnvironment)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/motion\/springanimation\/clampingrange","title":"var clampingRange: ClosedRange<Value>?","type":"property"},{"path":"\/documentation\/motion\/springanimation\/damping","title":"var damping: Value.SIMDType.Scalar","type":"property"},{"path":"\/documentation\/motion\/springanimation\/dampingratio","title":"var dampingRatio: Value.SIMDType.Scalar","type":"property"},{"path":"\/documentation\/motion\/springanimation\/resolvesuponreachingtovalue","title":"var resolvesUponReachingToValue: Bool","type":"property"},{"path":"\/documentation\/motion\/springanimation\/response","title":"var response: Value.SIMDType.Scalar","type":"property"},{"path":"\/documentation\/motion\/springanimation\/stiffness","title":"var stiffness: Value.SIMDType.Scalar","type":"property"},{"path":"\/documentation\/motion\/springanimation\/velocity","title":"var velocity: Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/motion\/springanimation\/configure(response:dampingratio:)","title":"func configure(response: Value.SIMDType.Scalar, dampingRatio: Value.SIMDType.Scalar)","type":"method"},{"path":"\/documentation\/motion\/springanimation\/configure(stiffness:damping:)","title":"func configure(stiffness: Value.SIMDType.Scalar, damping: Value.SIMDType.Scalar)","type":"method"},{"path":"\/documentation\/motion\/springanimation\/hasresolved()","title":"func hasResolved() -> Bool","type":"method"},{"path":"\/documentation\/motion\/springanimation\/stop(resolveimmediately:postvaluechanged:)","title":"func stop(resolveImmediately: Bool, postValueChanged: Bool)","type":"method"},{"path":"\/documentation\/motion\/springanimation\/tick(frame:)","title":"func tick(frame: AnimationFrame)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/motion\/springanimation\/keyframeanimation(forframerate:)","title":"func keyframeAnimation(forFramerate: Int?) -> CAKeyframeAnimation","type":"method"},{"path":"\/documentation\/motion\/springanimation\/populatekeyframeanimationdata(dt:values:keytimes:)","title":"func populateKeyframeAnimationData(dt: TimeInterval, values: inout [AnyObject], keyTimes: inout [NSNumber]) -> TimeInterval","type":"method"}],"path":"\/documentation\/motion\/springanimation\/cakeyframeanimationemittable-implementations","title":"CAKeyframeAnimationEmittable Implementations","type":"symbol"}],"path":"\/documentation\/motion\/springanimation","title":"SpringAnimation","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/motion\/valueanimation\/resolvingepsilon","title":"var resolvingEpsilon: Value.SIMDType.EpsilonType","type":"property"},{"path":"\/documentation\/motion\/valueanimation\/tovalue","title":"var toValue: Value","type":"property"},{"path":"\/documentation\/motion\/valueanimation\/value","title":"var value: Value","type":"property"},{"path":"\/documentation\/motion\/valueanimation\/velocity","title":"var velocity: Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/motion\/valueanimation\/onvaluechanged(disableactions:_:)","title":"func onValueChanged(disableActions: Bool, ValueAnimation<Value>.ValueChangedCallback?)","type":"method"},{"path":"\/documentation\/motion\/valueanimation\/stop(resolveimmediately:postvaluechanged:)","title":"func stop(resolveImmediately: Bool, postValueChanged: Bool)","type":"method"},{"path":"\/documentation\/motion\/valueanimation\/updatevalue(to:postvaluechanged:)","title":"func updateValue(to: Value, postValueChanged: Bool)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/motion\/valueanimation\/valuechangedcallback","title":"ValueAnimation.ValueChangedCallback","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/motion\/valueanimation\/supportsvelocity","title":"class var supportsVelocity: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/motion\/valueanimation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/motion\/valueanimation\/==(_:_:)","title":"static func == (ValueAnimation<Value>, ValueAnimation<Value>) -> Bool","type":"op"}],"path":"\/documentation\/motion\/valueanimation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/motion\/valueanimation\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/motion\/valueanimation\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/motion\/valueanimation","title":"ValueAnimation","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/motion\/animationenvironmentproxy\/animator","title":"var animator: Animator","type":"property"}],"title":"AnimationEnvironmentProxy Implementations","type":"groupMarker"}],"path":"\/documentation\/motion\/animationenvironment\/animator","title":"var animator: Animator","type":"property"},{"children":[{"children":[{"path":"\/documentation\/motion\/animationenvironmentproxy\/displayid","title":"var displayID: CGDirectDisplayID?","type":"property"}],"title":"AnimationEnvironmentProxy Implementations","type":"groupMarker"}],"path":"\/documentation\/motion\/animationenvironment\/displayid","title":"var displayID: CGDirectDisplayID?","type":"property"},{"children":[{"children":[{"path":"\/documentation\/motion\/animationenvironmentproxy\/preferredframespersecond","title":"var preferredFramesPerSecond: Int","type":"property"}],"title":"AnimationEnvironmentProxy Implementations","type":"groupMarker"}],"path":"\/documentation\/motion\/animationenvironment\/preferredframespersecond","title":"var preferredFramesPerSecond: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/motion\/animationenvironment\/default","title":"static var `default`: AnimationEnvironment","type":"property"}],"path":"\/documentation\/motion\/animationenvironment","title":"AnimationEnvironment","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/motion\/animationenvironmentproxy\/proxiedanimationenvironment","title":"var proxiedAnimationEnvironment: AnimationEnvironment","type":"property"}],"path":"\/documentation\/motion\/animationenvironmentproxy","title":"AnimationEnvironmentProxy","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/motion\/cakeyframeanimationemittable\/keyframeanimation(forframerate:)-9i7fl","title":"func keyframeAnimation(forFramerate: Int?) -> CAKeyframeAnimation","type":"method"}],"title":"CAKeyframeAnimationEmittable Implementations","type":"groupMarker"}],"path":"\/documentation\/motion\/cakeyframeanimationemittable\/keyframeanimation(forframerate:)-9l4to","title":"func keyframeAnimation(forFramerate: Int?) -> CAKeyframeAnimation","type":"method"},{"path":"\/documentation\/motion\/cakeyframeanimationemittable\/populatekeyframeanimationdata(dt:values:keytimes:)","title":"func populateKeyframeAnimationData(dt: TimeInterval, values: inout [AnyObject], keyTimes: inout [NSNumber]) -> TimeInterval","type":"method"}],"path":"\/documentation\/motion\/cakeyframeanimationemittable","title":"CAKeyframeAnimationEmittable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/motion\/cakeyframeanimationvalueconvertible\/tokeyframevalue()","title":"func toKeyframeValue() -> AnyObject","type":"method"}],"path":"\/documentation\/motion\/cakeyframeanimationvalueconvertible","title":"CAKeyframeAnimationValueConvertible","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/motion\/equatableenough\/epsilontype","title":"EpsilonType","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/motion\/equatableenough\/isapproximatelyequal(to:epsilon:)-626x6","title":"func isApproximatelyEqual(to: Self, epsilon: Self) -> Bool","type":"method"}],"title":"EquatableEnough Implementations","type":"groupMarker"},{"children":[{"path":"\/documentation\/motion\/supportedsimd\/isapproximatelyequal(to:epsilon:)","title":"func isApproximatelyEqual(to: Self, epsilon: Self.Scalar) -> Bool","type":"method"}],"title":"SupportedSIMD Implementations","type":"groupMarker"}],"path":"\/documentation\/motion\/equatableenough\/isapproximatelyequal(to:epsilon:)-9tvx5","title":"func isApproximatelyEqual(to: Self, epsilon: Self.EpsilonType) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/motion\/equatableenough\/epsilon-2wsxb","title":"static var epsilon: Self.Scalar","type":"property"},{"path":"\/documentation\/motion\/equatableenough\/epsilon-7tu03","title":"static var epsilon: Self","type":"property"},{"path":"\/documentation\/motion\/equatableenough\/epsilon-8u628","title":"static var epsilon: Double","type":"property"}],"path":"\/documentation\/motion\/equatableenough","title":"EquatableEnough","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/motion\/floatingpointinitializable\/init(_:)-8h6ky","title":"init(Float)","type":"init"},{"path":"\/documentation\/motion\/floatingpointinitializable\/init(_:)-pp7q","title":"init(Double)","type":"init"}],"path":"\/documentation\/motion\/floatingpointinitializable","title":"FloatingPointInitializable","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/motion\/simdrepresentable\/simdtype","title":"SIMDType","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/motion\/simdrepresentable\/init(_:)-570oy","title":"init(Self.SIMDType)","type":"init"}],"title":"SIMDRepresentable Implementations","type":"groupMarker"}],"path":"\/documentation\/motion\/simdrepresentable\/init(_:)-23al6","title":"init(Self.SIMDType)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/motion\/simdrepresentable\/simdrepresentation()-97uc3","title":"func simdRepresentation() -> Self","type":"method"}],"title":"SIMDRepresentable Implementations","type":"groupMarker"}],"path":"\/documentation\/motion\/simdrepresentable\/simdrepresentation()-47m9q","title":"func simdRepresentation() -> Self.SIMDType","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/motion\/simdrepresentable\/zero","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/motion\/simdrepresentable","title":"SIMDRepresentable","type":"protocol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/motion\/supportedsimd\/_(_:_:)","title":"static func < (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/motion\/supportedsimd","title":"SupportedSIMD","type":"protocol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/motion\/supportedscalar\/cos(_:)","title":"static func cos(Self) -> Self","type":"method"},{"path":"\/documentation\/motion\/supportedscalar\/exp(_:)","title":"static func exp(Self) -> Self","type":"method"},{"path":"\/documentation\/motion\/supportedscalar\/log(_:)","title":"static func log(Self) -> Self","type":"method"},{"path":"\/documentation\/motion\/supportedscalar\/pow(_:_:)","title":"static func pow(Self, Int) -> Self","type":"method"},{"path":"\/documentation\/motion\/supportedscalar\/sin(_:)","title":"static func sin(Self) -> Self","type":"method"}],"path":"\/documentation\/motion\/supportedscalar","title":"SupportedScalar","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/motion\/animationframe\/init(_:)","title":"init(CFTimeInterval)","type":"init"},{"path":"\/documentation\/motion\/animationframe\/init(timestamp:targettimestamp:)","title":"init(timestamp: CFTimeInterval, targetTimestamp: CFTimeInterval?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/motion\/animationframe\/duration","title":"var duration: CFTimeInterval","type":"property"},{"path":"\/documentation\/motion\/animationframe\/targettimestamp","title":"var targetTimestamp: CFTimeInterval","type":"property"},{"path":"\/documentation\/motion\/animationframe\/timestamp","title":"let timestamp: CFTimeInterval","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/motion\/animationframe\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/motion\/animationframe\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/motion\/animationframe","title":"AnimationFrame","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/motion\/bezier\/init(x1:y1:x2:y2:)","title":"init(x1: Scalar, y1: Scalar, x2: Scalar, y2: Scalar)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/motion\/bezier\/x1","title":"let x1: Scalar","type":"property"},{"path":"\/documentation\/motion\/bezier\/x2","title":"let x2: Scalar","type":"property"},{"path":"\/documentation\/motion\/bezier\/y1","title":"let y1: Scalar","type":"property"},{"path":"\/documentation\/motion\/bezier\/y2","title":"let y2: Scalar","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/motion\/bezier\/evaluatecurvex(t:)","title":"func evaluateCurveX(t: Scalar) -> Scalar","type":"method"},{"path":"\/documentation\/motion\/bezier\/evaluatecurvey(t:)","title":"func evaluateCurveY(t: Scalar) -> Scalar","type":"method"},{"path":"\/documentation\/motion\/bezier\/solve(x:epsilon:)","title":"func solve(x: Scalar, epsilon: Scalar) -> Scalar","type":"method"},{"path":"\/documentation\/motion\/bezier\/solve(y:epsilon:)","title":"func solve(y: Scalar, epsilon: Scalar) -> Scalar","type":"method"},{"path":"\/documentation\/motion\/bezier\/solvefort(x:epsilon:)","title":"func solveForT(x: Scalar, epsilon: Scalar) -> Scalar","type":"method"},{"path":"\/documentation\/motion\/bezier\/solvefort(y:epsilon:)","title":"func solveForT(y: Scalar, epsilon: Scalar) -> Scalar","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/motion\/bezier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/motion\/bezier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/motion\/bezier","title":"Bezier","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/motion\/decayfunction\/init(decayconstant:)","title":"init(decayConstant: Value.SIMDType.Scalar)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/motion\/decayfunction\/decayconstant","title":"var decayConstant: Value.SIMDType.Scalar","type":"property"},{"path":"\/documentation\/motion\/decayfunction\/one_ln_decayconstant_1000","title":"var one_ln_decayConstant_1000: Value.SIMDType.Scalar","type":"property"},{"path":"\/documentation\/motion\/decayfunction\/roundingfactor","title":"var roundingFactor: Value.SIMDType.Scalar","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/motion\/decayfunction\/round(_:tonearest:)-68oas","title":"func round(Value, toNearest: Value.SIMDType.Scalar) -> Value","type":"method"},{"path":"\/documentation\/motion\/decayfunction\/round(_:tonearest:)-9eb1t","title":"func round(Value.SIMDType, toNearest: Value.SIMDType.Scalar) -> Value.SIMDType","type":"method"},{"path":"\/documentation\/motion\/decayfunction\/roundsimd(_:tonearest:)","title":"func roundSIMD<SIMDType>(SIMDType, toNearest: SIMDType.Scalar) -> SIMDType","type":"method"},{"path":"\/documentation\/motion\/decayfunction\/solve(dt:x0:velocity:)-816gf","title":"func solve(dt: Value.SIMDType.Scalar, x0: Value, velocity: inout Value) -> Value","type":"method"},{"path":"\/documentation\/motion\/decayfunction\/solve(dt:x0:velocity:)-8qnqq","title":"func solve(dt: Value.SIMDType.Scalar, x0: Value.SIMDType, velocity: inout Value.SIMDType) -> Value.SIMDType","type":"method"},{"path":"\/documentation\/motion\/decayfunction\/solvesimd(dt:x0:velocity:)","title":"func solveSIMD(dt: Value.SIMDType.Scalar, x0: Value.SIMDType, velocity: inout Value.SIMDType) -> Value.SIMDType","type":"method"},{"path":"\/documentation\/motion\/decayfunction\/solvetovalue(value:velocity:)-1h37q","title":"func solveToValue(value: Value.SIMDType, velocity: Value.SIMDType) -> Value.SIMDType","type":"method"},{"path":"\/documentation\/motion\/decayfunction\/solvetovalue(value:velocity:)-4t610","title":"func solveToValue(value: Value, velocity: Value) -> Value","type":"method"},{"path":"\/documentation\/motion\/decayfunction\/solvetovaluesimd(value:velocity:decayconstant:roundingfactor:)","title":"func solveToValueSIMD<SIMDType>(value: SIMDType, velocity: SIMDType, decayConstant: SIMDType.Scalar, roundingFactor: SIMDType.Scalar) -> SIMDType","type":"method"},{"path":"\/documentation\/motion\/decayfunction\/solvevelocity(value:tovalue:)-1qi17","title":"func solveVelocity(value: Value, toValue: Value) -> Value","type":"method"},{"path":"\/documentation\/motion\/decayfunction\/solvevelocity(value:tovalue:)-2zw49","title":"func solveVelocity(value: Value.SIMDType, toValue: Value.SIMDType) -> Value.SIMDType","type":"method"},{"path":"\/documentation\/motion\/decayfunction\/solvevelocitysimd(value:tovalue:decayconstant:)","title":"func solveVelocitySIMD<SIMDType>(value: SIMDType, toValue: SIMDType, decayConstant: SIMDType.Scalar) -> SIMDType","type":"method"}],"path":"\/documentation\/motion\/decayfunction","title":"DecayFunction","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/motion\/easingfunction\/init(bezier:)","title":"init(bezier: Bezier<Value.SIMDType.Scalar>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/motion\/easingfunction\/bezier","title":"let bezier: Bezier<Value.SIMDType.Scalar>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/motion\/easingfunction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/motion\/easingfunction\/solveinterpolatedvalue(_:fraction:)-2ielp","title":"func solveInterpolatedValue(ClosedRange<Value.SIMDType>, fraction: Value.SIMDType.Scalar) -> Value.SIMDType","type":"method"},{"path":"\/documentation\/motion\/easingfunction\/solveinterpolatedvalue(_:fraction:)-5aer1","title":"func solveInterpolatedValue(ClosedRange<Value>, fraction: Value.SIMDType.Scalar) -> Value","type":"method"},{"path":"\/documentation\/motion\/easingfunction\/solveinterpolatedvaluesimd(_:fraction:)","title":"func solveInterpolatedValueSIMD<SIMDType>(ClosedRange<SIMDType>, fraction: SIMDType.Scalar) -> SIMDType","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/motion\/easingfunction\/easein","title":"static var easeIn: EasingFunction<Value>","type":"property"},{"path":"\/documentation\/motion\/easingfunction\/easeinout","title":"static var easeInOut: EasingFunction<Value>","type":"property"},{"path":"\/documentation\/motion\/easingfunction\/easeout","title":"static var easeOut: EasingFunction<Value>","type":"property"},{"path":"\/documentation\/motion\/easingfunction\/linear","title":"static var linear: EasingFunction<Value>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/motion\/easingfunction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/motion\/easingfunction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/motion\/easingfunction","title":"EasingFunction","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/motion\/springfunction\/init(response:dampingratio:)","title":"init(response: Value.SIMDType.Scalar, dampingRatio: Value.SIMDType.Scalar)","type":"init"},{"path":"\/documentation\/motion\/springfunction\/init(stiffness:damping:)","title":"init(stiffness: Value.SIMDType.Scalar, damping: Value.SIMDType.Scalar)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/motion\/springfunction\/damping","title":"var damping: Value.SIMDType.Scalar","type":"property"},{"path":"\/documentation\/motion\/springfunction\/dampingratio","title":"var dampingRatio: Value.SIMDType.Scalar","type":"property"},{"path":"\/documentation\/motion\/springfunction\/response","title":"var response: Value.SIMDType.Scalar","type":"property"},{"path":"\/documentation\/motion\/springfunction\/stiffness","title":"var stiffness: Value.SIMDType.Scalar","type":"property"},{"path":"\/documentation\/motion\/springfunction\/w0","title":"var w0: Value.SIMDType.Scalar","type":"property"},{"path":"\/documentation\/motion\/springfunction\/wd","title":"var wD: Value.SIMDType.Scalar","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/motion\/springfunction\/configure(response:dampingratio:)","title":"func configure(response: Value.SIMDType.Scalar, dampingRatio: Value.SIMDType.Scalar)","type":"method"},{"path":"\/documentation\/motion\/springfunction\/configure(stiffness:damping:)","title":"func configure(stiffness: Value.SIMDType.Scalar, damping: Value.SIMDType.Scalar)","type":"method"},{"path":"\/documentation\/motion\/springfunction\/solve(dt:x0:velocity:)-6ic5c","title":"func solve(dt: Value.SIMDType.Scalar, x0: Value.SIMDType, velocity: inout Value.SIMDType) -> Value.SIMDType","type":"method"},{"path":"\/documentation\/motion\/springfunction\/solve(dt:x0:velocity:)-rt6m","title":"func solve(dt: Value.SIMDType.Scalar, x0: Value, velocity: inout Value) -> Value","type":"method"},{"path":"\/documentation\/motion\/springfunction\/solvesimd(dt:x0:velocity:)","title":"func solveSIMD(dt: Value.SIMDType.Scalar, x0: Value.SIMDType, velocity: inout Value.SIMDType) -> Value.SIMDType","type":"method"}],"path":"\/documentation\/motion\/springfunction","title":"SpringFunction","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/motion\/uiscrollviewdecayconstant","title":"let UIScrollViewDecayConstant: Double","type":"var"},{"path":"\/documentation\/motion\/uiscrollviewrubberbandingconstant","title":"let UIScrollViewRubberBandingConstant: Double","type":"var"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/motion\/cadisableactions(_:)","title":"func CADisableActions(() -> Void)","type":"func"},{"path":"\/documentation\/motion\/mabs(_:)","title":"func mabs<SIMDType>(SIMDType) -> SIMDType","type":"func"},{"path":"\/documentation\/motion\/rubberband(_:coefficient:boundssize:contentsize:)","title":"func rubberband<Value>(Value, coefficient: Value, boundsSize: Value, contentSize: Value) -> Value","type":"func"}],"path":"\/documentation\/motion","title":"Motion","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}