{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueAnimation"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/Motion\/documentation\/Motion\/SIMDRepresentable","preciseIdentifier":"s:6Motion17SIMDRepresentableP","text":"SIMDRepresentable"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The interesting part of this is the ability to have animations on the value performed simultaneously using "},{"type":"codeVoice","code":"simd"},{"type":"text","text":" registers."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"i.e. a "},{"type":"codeVoice","code":"CGRect"},{"type":"text","text":" thatâ€™s animating will have all of its values animated simultaneously (vs. each value being animated sequentially), which should be more performant."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is normally accomplished by setting an initial state for the animation ("},{"type":"codeVoice","code":"value"},{"type":"text","text":") and then setting a target ("},{"type":"codeVoice","code":"toValue"},{"type":"text","text":") to animate to."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This class, when ticked, will change a value and emit changes to that value via "},{"type":"codeVoice","code":"onValueChanged"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"If you wish to update the value manually, you may also do so via "},{"type":"codeVoice","code":"updateValue(to:postValueChanged:)"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When resolved, this class will optionally call the "},{"type":"codeVoice","code":"completionBlock"},{"type":"text","text":"."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The base implementation of this class is not meant to be used on its own, rather subclasses provided are to be used."}]}],"type":"aside","name":"Note"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This class is "},{"type":"strong","inlineContent":[{"type":"text","text":"not"}]},{"type":"text","text":" thread-safe. It is meant to be run on the "},{"type":"strong","inlineContent":[{"type":"text","text":"main thread"}]},{"type":"text","text":" only (much like any AppKit \/ UIKit operations should be main threaded)."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/motion\/valueanimation"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/Animation"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/BasicAnimation","doc:\/\/Motion\/documentation\/Motion\/DecayAnimation","doc:\/\/Motion\/documentation\/Motion\/SpringAnimation"],"kind":"relationships","title":"Inherited By","type":"inheritedBy"},{"identifiers":["doc:\/\/Motion\/SQ","doc:\/\/Motion\/SH"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This class provides the ability to animate changes to values ("},{"type":"codeVoice","code":"Value"},{"type":"text","text":") over time."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueAnimation"}],"title":"ValueAnimation","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:6Motion14ValueAnimationC","modules":[{"name":"Motion"}],"navigatorTitle":[{"kind":"identifier","text":"ValueAnimation"}]},"hierarchy":{"paths":[["doc:\/\/Motion\/documentation\/Motion"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/resolvingEpsilon","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/toValue","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/value","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/velocity"]},{"title":"Instance Methods","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/stop(resolveImmediately:postValueChanged:)","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/updateValue(to:postValueChanged:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback"]},{"title":"Type Properties","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/supportsVelocity"]},{"title":"Default Implementations","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Equatable-Implementations","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Hashable-Implementations"],"generated":true}],"references":{"doc://Motion/documentation/Motion/SpringAnimation":{"role":"symbol","title":"SpringAnimation","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SpringAnimation"}],"abstract":[{"type":"text","text":"This class provides the ability to animate "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" using a physically-modeled spring."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/SpringAnimation","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SpringAnimation"}],"url":"\/documentation\/motion\/springanimation"},"doc://Motion/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/Motion\/SQ"},"doc://Motion/documentation/Motion/ValueAnimation/resolvingEpsilon":{"role":"symbol","title":"resolvingEpsilon","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolvingEpsilon"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SIMDType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"EpsilonType"}],"abstract":[{"type":"text","text":"The default tolerance level for an animation to be considered finished."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/resolvingEpsilon","kind":"symbol","type":"topic","url":"\/documentation\/motion\/valueanimation\/resolvingepsilon"},"doc://Motion/documentation/Motion/SIMDRepresentable":{"role":"symbol","title":"SIMDRepresentable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SIMDRepresentable"}],"abstract":[{"type":"text","text":"A protocol that defines how something that can be represented \/ stored in a "},{"type":"codeVoice","code":"SIMD"},{"type":"text","text":" type as well as instantiated from said "},{"type":"codeVoice","code":"SIMD"},{"type":"text","text":" type."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/SIMDRepresentable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SIMDRepresentable"}],"url":"\/documentation\/motion\/simdrepresentable"},"doc://Motion/documentation/Motion/ValueAnimation":{"role":"symbol","title":"ValueAnimation","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueAnimation"}],"abstract":[{"type":"text","text":"This class provides the ability to animate changes to values ("},{"type":"codeVoice","code":"Value"},{"type":"text","text":") over time."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValueAnimation"}],"url":"\/documentation\/motion\/valueanimation"},"doc://Motion/documentation/Motion/ValueAnimation/value":{"role":"symbol","title":"value","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"}],"abstract":[],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/value","kind":"symbol","type":"topic","url":"\/documentation\/motion\/valueanimation\/value"},"doc://Motion/documentation/Motion/DecayAnimation":{"role":"symbol","title":"DecayAnimation","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DecayAnimation"}],"abstract":[{"type":"text","text":"This class provides the ability to animate types that conform to "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" based on decay functions."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/DecayAnimation","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DecayAnimation"}],"url":"\/documentation\/motion\/decayanimation"},"doc://Motion/documentation/Motion/ValueAnimation/stop(resolveImmediately:postValueChanged:)":{"role":"symbol","title":"stop(resolveImmediately:postValueChanged:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stop"},{"kind":"text","text":"("},{"kind":"externalParam","text":"resolveImmediately"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"postValueChanged"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Stops the animation immediately and preserves the last set "},{"type":"codeVoice","code":"value"},{"type":"text","text":". This is unlike CoreAnimation where the model and presentation layers get get mismatched."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/stop(resolveImmediately:postValueChanged:)","kind":"symbol","type":"topic","url":"\/documentation\/motion\/valueanimation\/stop(resolveimmediately:postvaluechanged:)"},"doc://Motion/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/Motion\/SH"},"doc://Motion/documentation/Motion/ValueAnimation/updateValue(to:postValueChanged:)":{"role":"symbol","title":"updateValue(to:postValueChanged:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateValue"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"postValueChanged"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Updates "},{"type":"codeVoice","code":"value"},{"type":"text","text":" to the supplied value and optionally invokes "},{"type":"codeVoice","code":"onValueChanged"},{"type":"text","text":"."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/updateValue(to:postValueChanged:)","kind":"symbol","type":"topic","url":"\/documentation\/motion\/valueanimation\/updatevalue(to:postvaluechanged:)"},"doc://Motion/documentation/Motion/ValueAnimation/onValueChanged(disableActions:_:)":{"role":"symbol","title":"onValueChanged(disableActions:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onValueChanged"},{"kind":"text","text":"("},{"kind":"externalParam","text":"disableActions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ValueAnimation","preciseIdentifier":"s:6Motion14ValueAnimationC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"ValueChangedCallback","preciseIdentifier":"s:6Motion14ValueAnimationC0B15ChangedCallbacka"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Call this to register a "},{"type":"codeVoice","code":"ValueChangedCallback"},{"type":"text","text":" block that will be called anytime "},{"type":"codeVoice","code":"value"},{"type":"text","text":" changes from "},{"type":"codeVoice","code":"tick"},{"type":"text","text":" or if explicitly specified via "},{"type":"codeVoice","code":"postValueChanged"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"When called, it will give the new value that "},{"type":"codeVoice","code":"value"},{"type":"text","text":" has animated to (since the last invocation)."},{"type":"text","text":" "},{"type":"text","text":"If youâ€™re animating "},{"type":"codeVoice","code":"CALayer"},{"type":"text","text":" objects from the block, you may supply "},{"type":"codeVoice","code":"true"},{"type":"text","text":" for "},{"type":"codeVoice","code":"disableActions"},{"type":"text","text":" to automatically have this wrapped in a "},{"type":"codeVoice","code":"CATransaction"},{"type":"text","text":" that disables implicit animations for the layer."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)","kind":"symbol","type":"topic","url":"\/documentation\/motion\/valueanimation\/onvaluechanged(disableactions:_:)"},"doc://Motion/documentation/Motion":{"role":"collection","title":"Motion","abstract":[{"type":"image","identifier":"Motion-Logo-Rendered"}],"identifier":"doc:\/\/Motion\/documentation\/Motion","kind":"symbol","type":"topic","url":"\/documentation\/motion"},"doc://Motion/documentation/Motion/ValueAnimation/toValue":{"role":"symbol","title":"toValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"toValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"}],"abstract":[{"type":"text","text":"The target value to animate towards."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/toValue","kind":"symbol","type":"topic","url":"\/documentation\/motion\/valueanimation\/tovalue"},"doc://Motion/documentation/Motion/ValueAnimation/velocity":{"role":"symbol","title":"velocity","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"velocity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"}],"abstract":[{"type":"text","text":"The velocity of the animation. Setting this before calling "},{"type":"codeVoice","code":"start"},{"type":"text","text":" will cause the animation to be seeded with that velocity, and then the velocity may change over time."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/velocity","kind":"symbol","type":"topic","url":"\/documentation\/motion\/valueanimation\/velocity"},"doc://Motion/documentation/Motion/Animation":{"role":"symbol","title":"Animation","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Animation"}],"abstract":[{"type":"text","text":"This class acts as the base class for all animations within "},{"type":"codeVoice","code":"Motion"},{"type":"text","text":". It doesnâ€™t do much, other than serve as a base class for all animations to inherit from and implement."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/Animation","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Animation"}],"url":"\/documentation\/motion\/animation"},"doc://Motion/documentation/Motion/ValueAnimation/Hashable-Implementations":{"role":"collectionGroup","title":"Hashable Implementations","abstract":[],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Hashable-Implementations","kind":"article","type":"topic","url":"\/documentation\/motion\/valueanimation\/hashable-implementations"},"doc://Motion/documentation/Motion/ValueAnimation/ValueChangedCallback":{"role":"symbol","title":"ValueAnimation.ValueChangedCallback","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueChangedCallback"}],"abstract":[{"type":"text","text":"A block to be called when "},{"type":"codeVoice","code":"value"},{"type":"text","text":" changes."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValueChangedCallback"}],"url":"\/documentation\/motion\/valueanimation\/valuechangedcallback"},"doc://Motion/documentation/Motion/ValueAnimation/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","abstract":[],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Equatable-Implementations","kind":"article","type":"topic","url":"\/documentation\/motion\/valueanimation\/equatable-implementations"},"doc://Motion/documentation/Motion/BasicAnimation":{"role":"symbol","title":"BasicAnimation","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicAnimation"}],"abstract":[{"type":"text","text":"This class provides the ability to animate types that conform to "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" based on basic curves (i.e. "},{"type":"codeVoice","code":"EasingFunction.easeIn"},{"type":"text","text":", "},{"type":"codeVoice","code":"EasingFunction.easeInOut"},{"type":"text","text":", etc.)."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/BasicAnimation","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BasicAnimation"}],"url":"\/documentation\/motion\/basicanimation"},"doc://Motion/documentation/Motion/ValueAnimation/supportsVelocity":{"role":"symbol","title":"supportsVelocity","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"supportsVelocity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Returns whether or not this class supports velocity."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/supportsVelocity","kind":"symbol","type":"topic","url":"\/documentation\/motion\/valueanimation\/supportsvelocity"}}}