{"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"relationshipsSections":[{"kind":"relationships","title":"Inherits From","type":"inheritsFrom","identifiers":["doc:\/\/Motion\/documentation\/Motion\/Animation"]},{"title":"Inherited By","kind":"relationships","identifiers":["doc:\/\/Motion\/documentation\/Motion\/BasicAnimation","doc:\/\/Motion\/documentation\/Motion\/DecayAnimation","doc:\/\/Motion\/documentation\/Motion\/SpringAnimation"],"type":"inheritedBy"},{"title":"Conforms To","identifiers":["doc:\/\/Motion\/SQ","doc:\/\/Motion\/SH"],"kind":"relationships","type":"conformsTo"}],"metadata":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ValueAnimation","kind":"identifier"}],"title":"ValueAnimation","symbolKind":"class","externalID":"s:6Motion14ValueAnimationC","modules":[{"name":"Motion"}],"role":"symbol","navigatorTitle":[{"text":"ValueAnimation","kind":"identifier"}],"roleHeading":"Class"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ValueAnimation","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Motion17SIMDRepresentableP","text":"SIMDRepresentable","identifier":"doc:\/\/Motion\/documentation\/Motion\/SIMDRepresentable"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"inlineContent":[{"type":"text","text":"The interesting part of this is the ability to have animations on the value performed simultaneously using "},{"type":"codeVoice","code":"simd"},{"type":"text","text":" registers."}],"type":"paragraph"},{"inlineContent":[{"text":"i.e. a ","type":"text"},{"code":"CGRect","type":"codeVoice"},{"type":"text","text":" thatâ€™s animating will have all of its values animated simultaneously (vs. each value being animated sequentially), which should be more performant."}],"type":"paragraph"},{"inlineContent":[{"text":"This is normally accomplished by setting an initial state for the animation (","type":"text"},{"code":"value","type":"codeVoice"},{"text":") and then setting a target (","type":"text"},{"code":"toValue","type":"codeVoice"},{"text":") to animate to.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This class, when ticked, will change a value and emit changes to that value via "},{"code":"onValueChanged","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"If you wish to update the value manually, you may also do so via "},{"code":"updateValue(to:postValueChanged:)","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"When resolved, this class will optionally call the "},{"type":"codeVoice","code":"completionBlock"},{"type":"text","text":"."}],"type":"paragraph"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The base implementation of this class is not meant to be used on its own, rather subclasses provided are to be used."}]}],"name":"Note","type":"aside"},{"type":"aside","content":[{"inlineContent":[{"text":"This class is ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"not"}]},{"text":" thread-safe. It is meant to be run on the ","type":"text"},{"type":"strong","inlineContent":[{"text":"main thread","type":"text"}]},{"text":" only (much like any AppKit \/ UIKit operations should be main threaded).","type":"text"}],"type":"paragraph"}],"style":"note","name":"Note"},{"name":"See Also","content":[{"inlineContent":[{"text":"","type":"text"},{"code":"BasicAnimation","type":"codeVoice"},{"text":", ","type":"text"},{"code":"DecayAnimation","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"SpringAnimation"},{"type":"text","text":"."}],"type":"paragraph"}],"type":"aside","style":"note"}]}],"abstract":[{"type":"text","text":"This class provides the ability to animate changes to values ("},{"code":"Value","type":"codeVoice"},{"type":"text","text":") over time."}],"hierarchy":{"paths":[["doc:\/\/Motion\/documentation\/Motion"]]},"identifier":{"url":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/motion\/valueanimation"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/resolvingEpsilon","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/toValue","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/value","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/velocity"],"title":"Instance Properties"},{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/stop(resolveImmediately:postValueChanged:)","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/updateValue(to:postValueChanged:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback"],"title":"Type Aliases"},{"title":"Type Properties","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/supportsVelocity"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Equatable-Implementations","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Hashable-Implementations"]}],"references":{"doc://Motion/SH":{"type":"unresolvable","identifier":"doc:\/\/Motion\/SH","title":"Swift.Hashable"},"doc://Motion/documentation/Motion/SpringAnimation":{"url":"\/documentation\/motion\/springanimation","role":"symbol","title":"SpringAnimation","type":"topic","abstract":[{"text":"This class provides the ability to animate ","type":"text"},{"code":"Value","type":"codeVoice"},{"text":" using a physically-modeled spring.","type":"text"}],"navigatorTitle":[{"text":"SpringAnimation","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SpringAnimation"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/SpringAnimation","kind":"symbol"},"doc://Motion/documentation/Motion/SIMDRepresentable":{"title":"SIMDRepresentable","identifier":"doc:\/\/Motion\/documentation\/Motion\/SIMDRepresentable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SIMDRepresentable","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SIMDRepresentable"}],"kind":"symbol","role":"symbol","url":"\/documentation\/motion\/simdrepresentable","abstract":[{"type":"text","text":"A protocol that defines how something that can be represented \/ stored in a "},{"type":"codeVoice","code":"SIMD"},{"text":" type as well as instantiated from said ","type":"text"},{"type":"codeVoice","code":"SIMD"},{"type":"text","text":" type."}],"type":"topic"},"doc://Motion/documentation/Motion/ValueAnimation/ValueChangedCallback":{"url":"\/documentation\/motion\/valueanimation\/valuechangedcallback","role":"symbol","title":"ValueAnimation.ValueChangedCallback","type":"topic","abstract":[{"type":"text","text":"A block to be called when "},{"type":"codeVoice","code":"value"},{"type":"text","text":" changes."}],"navigatorTitle":[{"text":"ValueChangedCallback","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"ValueChangedCallback","kind":"identifier"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback","kind":"symbol"},"doc://Motion/documentation/Motion/ValueAnimation/Equatable-Implementations":{"url":"\/documentation\/motion\/valueanimation\/equatable-implementations","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Equatable-Implementations","abstract":[],"kind":"article","title":"Equatable Implementations","role":"collectionGroup","type":"topic"},"doc://Motion/documentation/Motion/DecayAnimation":{"navigatorTitle":[{"text":"DecayAnimation","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/DecayAnimation","title":"DecayAnimation","url":"\/documentation\/motion\/decayanimation","abstract":[{"text":"This class provides the ability to animate types that conform to ","type":"text"},{"code":"Value","type":"codeVoice"},{"text":" based on decay functions.","type":"text"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DecayAnimation","kind":"identifier"}],"type":"topic"},"doc://Motion/documentation/Motion/ValueAnimation/velocity":{"title":"velocity","abstract":[{"type":"text","text":"The velocity of the animation. Setting this before calling "},{"type":"codeVoice","code":"start"},{"text":" will cause the animation to be seeded with that velocity, and then the velocity may change over time.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"velocity","kind":"identifier"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"}],"url":"\/documentation\/motion\/valueanimation\/velocity","type":"topic","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/velocity"},"doc://Motion/documentation/Motion/ValueAnimation/Hashable-Implementations":{"abstract":[],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Hashable-Implementations","role":"collectionGroup","type":"topic","url":"\/documentation\/motion\/valueanimation\/hashable-implementations","kind":"article","title":"Hashable Implementations"},"doc://Motion/documentation/Motion/Animation":{"url":"\/documentation\/motion\/animation","navigatorTitle":[{"text":"Animation","kind":"identifier"}],"kind":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Animation"}],"title":"Animation","abstract":[{"type":"text","text":"This class acts as the base class for all animations within "},{"type":"codeVoice","code":"Motion"},{"text":". It doesnâ€™t do much, other than serve as a base class for all animations to inherit from and implement.","type":"text"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/Animation","role":"symbol"},"doc://Motion/documentation/Motion/ValueAnimation/onValueChanged(disableActions:_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onValueChanged","kind":"identifier"},{"text":"(","kind":"text"},{"text":"disableActions","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Motion14ValueAnimationC","text":"ValueAnimation"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Motion14ValueAnimationC0B15ChangedCallbacka","text":"ValueChangedCallback"},{"text":"?)","kind":"text"}],"abstract":[{"type":"text","text":"Call this to register a "},{"type":"codeVoice","code":"ValueChangedCallback"},{"text":" block that will be called anytime ","type":"text"},{"code":"value","type":"codeVoice"},{"text":" changes from ","type":"text"},{"code":"tick","type":"codeVoice"},{"text":" or if explicitly specified via ","type":"text"},{"type":"codeVoice","code":"postValueChanged"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"When called, it will give the new value that "},{"code":"value","type":"codeVoice"},{"text":" has animated to (since the last invocation).","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"If youâ€™re animating "},{"type":"codeVoice","code":"CALayer"},{"text":" objects from the block, you may supply ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" for "},{"type":"codeVoice","code":"disableActions"},{"type":"text","text":" to automatically have this wrapped in a "},{"type":"codeVoice","code":"CATransaction"},{"text":" that disables implicit animations for the layer.","type":"text"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)","role":"symbol","type":"topic","url":"\/documentation\/motion\/valueanimation\/onvaluechanged(disableactions:_:)","kind":"symbol","title":"onValueChanged(disableActions:_:)"},"doc://Motion/documentation/Motion/ValueAnimation/value":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"}],"abstract":[],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/value","role":"symbol","type":"topic","url":"\/documentation\/motion\/valueanimation\/value","kind":"symbol","title":"value"},"doc://Motion/documentation/Motion/ValueAnimation/toValue":{"kind":"symbol","url":"\/documentation\/motion\/valueanimation\/tovalue","title":"toValue","abstract":[{"type":"text","text":"The target value to animate towards."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/toValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"toValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"role":"symbol","type":"topic"},"doc://Motion/documentation/Motion/ValueAnimation/supportsVelocity":{"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"supportsVelocity","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/supportsVelocity","title":"supportsVelocity","role":"symbol","abstract":[{"text":"Returns whether or not this class supports velocity.","type":"text"}],"url":"\/documentation\/motion\/valueanimation\/supportsvelocity"},"doc://Motion/documentation/Motion/ValueAnimation/updateValue(to:postValueChanged:)":{"url":"\/documentation\/motion\/valueanimation\/updatevalue(to:postvaluechanged:)","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/updateValue(to:postValueChanged:)","abstract":[{"text":"Updates ","type":"text"},{"type":"codeVoice","code":"value"},{"type":"text","text":" to the supplied value and optionally invokes "},{"type":"codeVoice","code":"onValueChanged"},{"type":"text","text":"."}],"kind":"symbol","title":"updateValue(to:postValueChanged:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateValue"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"postValueChanged"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","type":"topic"},"doc://Motion/documentation/Motion/BasicAnimation":{"role":"symbol","title":"BasicAnimation","identifier":"doc:\/\/Motion\/documentation\/Motion\/BasicAnimation","navigatorTitle":[{"text":"BasicAnimation","kind":"identifier"}],"type":"topic","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicAnimation","kind":"identifier"}],"abstract":[{"text":"This class provides the ability to animate types that conform to ","type":"text"},{"code":"Value","type":"codeVoice"},{"text":" based on basic curves (i.e. ","type":"text"},{"type":"codeVoice","code":"EasingFunction.easeIn"},{"type":"text","text":", "},{"type":"codeVoice","code":"EasingFunction.easeInOut"},{"type":"text","text":", etc.)."}],"url":"\/documentation\/motion\/basicanimation"},"doc://Motion/documentation/Motion/ValueAnimation":{"url":"\/documentation\/motion\/valueanimation","type":"topic","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation","title":"ValueAnimation","role":"symbol","kind":"symbol","abstract":[{"text":"This class provides the ability to animate changes to values (","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":") over time."}],"navigatorTitle":[{"text":"ValueAnimation","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ValueAnimation","kind":"identifier"}]},"doc://Motion/documentation/Motion/ValueAnimation/stop(resolveImmediately:postValueChanged:)":{"title":"stop(resolveImmediately:postValueChanged:)","abstract":[{"type":"text","text":"Stops the animation immediately and preserves the last set "},{"type":"codeVoice","code":"value"},{"type":"text","text":". This is unlike CoreAnimation where the model and presentation layers get get mismatched."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"stop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"resolveImmediately","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"postValueChanged"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":")","kind":"text"}],"url":"\/documentation\/motion\/valueanimation\/stop(resolveimmediately:postvaluechanged:)","type":"topic","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/stop(resolveImmediately:postValueChanged:)"},"doc://Motion/documentation/Motion/ValueAnimation/resolvingEpsilon":{"kind":"symbol","url":"\/documentation\/motion\/valueanimation\/resolvingepsilon","title":"resolvingEpsilon","abstract":[{"type":"text","text":"The default tolerance level for an animation to be considered finished."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/resolvingEpsilon","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"resolvingEpsilon"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SIMDType"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"EpsilonType"}],"role":"symbol","type":"topic"},"doc://Motion/documentation/Motion":{"url":"\/documentation\/motion","role":"collection","title":"Motion","abstract":[{"type":"image","identifier":"Motion-Logo-Rendered"}],"type":"topic","identifier":"doc:\/\/Motion\/documentation\/Motion","kind":"symbol"},"doc://Motion/SQ":{"identifier":"doc:\/\/Motion\/SQ","title":"Swift.Equatable","type":"unresolvable"}}}