{"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/resolvingEpsilon","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/toValue","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/value","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/velocity"]},{"title":"Instance Methods","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/stop(resolveImmediately:postValueChanged:)","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/updateValue(to:postValueChanged:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback"]},{"title":"Type Properties","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/supportsVelocity"]},{"title":"Default Implementations","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Equatable-Implementations","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Hashable-Implementations"],"generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ValueAnimation","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:6Motion17SIMDRepresentableP","kind":"typeIdentifier","text":"SIMDRepresentable","identifier":"doc:\/\/Motion\/documentation\/Motion\/SIMDRepresentable"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The interesting part of this is the ability to have animations on the value performed simultaneously using "},{"type":"codeVoice","code":"simd"},{"text":" registers.","type":"text"}]},{"inlineContent":[{"text":"i.e. a ","type":"text"},{"type":"codeVoice","code":"CGRect"},{"type":"text","text":" that’s animating will have all of its values animated simultaneously (vs. each value being animated sequentially), which should be more performant."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is normally accomplished by setting an initial state for the animation ("},{"code":"value","type":"codeVoice"},{"type":"text","text":") and then setting a target ("},{"code":"toValue","type":"codeVoice"},{"type":"text","text":") to animate to."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This class, when ticked, will change a value and emit changes to that value via "},{"type":"codeVoice","code":"onValueChanged"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"If you wish to update the value manually, you may also do so via ","type":"text"},{"code":"updateValue(to:postValueChanged:)","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When resolved, this class will optionally call the "},{"code":"completionBlock","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"aside","name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The base implementation of this class is not meant to be used on its own, rather subclasses provided are to be used."}]}]},{"style":"note","name":"Note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"This class is "},{"type":"strong","inlineContent":[{"text":"not","type":"text"}]},{"text":" thread-safe. It is meant to be run on the ","type":"text"},{"type":"strong","inlineContent":[{"text":"main thread","type":"text"}]},{"text":" only (much like any AppKit \/ UIKit operations should be main threaded).","type":"text"}],"type":"paragraph"}]},{"style":"note","type":"aside","name":"See Also","content":[{"inlineContent":[{"text":"","type":"text"},{"code":"BasicAnimation","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"DecayAnimation"},{"type":"text","text":", "},{"code":"SpringAnimation","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}]}],"abstract":[{"type":"text","text":"This class provides the ability to animate changes to values ("},{"code":"Value","type":"codeVoice"},{"text":") over time.","type":"text"}],"metadata":{"symbolKind":"class","externalID":"s:6Motion14ValueAnimationC","roleHeading":"Class","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueAnimation"}],"navigatorTitle":[{"text":"ValueAnimation","kind":"identifier"}],"title":"ValueAnimation","role":"symbol","modules":[{"name":"Motion"}]},"identifier":{"url":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/motion\/valueanimation"]}],"kind":"symbol","sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/Motion\/documentation\/Motion"]]},"relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/Motion\/documentation\/Motion\/Animation"],"type":"inheritsFrom","kind":"relationships"},{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/BasicAnimation","doc:\/\/Motion\/documentation\/Motion\/DecayAnimation","doc:\/\/Motion\/documentation\/Motion\/SpringAnimation"],"title":"Inherited By","kind":"relationships","type":"inheritedBy"},{"type":"conformsTo","identifiers":["doc:\/\/Motion\/SQ","doc:\/\/Motion\/SH"],"kind":"relationships","title":"Conforms To"}],"references":{"doc://Motion/documentation/Motion/ValueAnimation/value":{"kind":"symbol","url":"\/documentation\/motion\/valueanimation\/value","abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"value","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}],"title":"value","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/value","type":"topic"},"doc://Motion/documentation/Motion/BasicAnimation":{"identifier":"doc:\/\/Motion\/documentation\/Motion\/BasicAnimation","type":"topic","url":"\/documentation\/motion\/basicanimation","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicAnimation","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"BasicAnimation"}],"kind":"symbol","title":"BasicAnimation","role":"symbol","abstract":[{"type":"text","text":"This class provides the ability to animate types that conform to "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" based on basic curves (i.e. "},{"type":"codeVoice","code":"EasingFunction.easeIn"},{"type":"text","text":", "},{"code":"EasingFunction.easeInOut","type":"codeVoice"},{"type":"text","text":", etc.)."}]},"doc://Motion/documentation/Motion/ValueAnimation":{"abstract":[{"type":"text","text":"This class provides the ability to animate changes to values ("},{"code":"Value","type":"codeVoice"},{"text":") over time.","type":"text"}],"title":"ValueAnimation","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValueAnimation","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/motion\/valueanimation","type":"topic","navigatorTitle":[{"text":"ValueAnimation","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation"},"doc://Motion/documentation/Motion/Animation":{"role":"symbol","type":"topic","abstract":[{"text":"This class acts as the base class for all animations within ","type":"text"},{"type":"codeVoice","code":"Motion"},{"text":". It doesn’t do much, other than serve as a base class for all animations to inherit from and implement.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Animation","kind":"identifier"}],"title":"Animation","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Animation"}],"url":"\/documentation\/motion\/animation","identifier":"doc:\/\/Motion\/documentation\/Motion\/Animation"},"doc://Motion/documentation/Motion/ValueAnimation/Equatable-Implementations":{"abstract":[],"url":"\/documentation\/motion\/valueanimation\/equatable-implementations","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Equatable-Implementations","kind":"article","role":"collectionGroup","title":"Equatable Implementations","type":"topic"},"doc://Motion/documentation/Motion/ValueAnimation/stop(resolveImmediately:postValueChanged:)":{"title":"stop(resolveImmediately:postValueChanged:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"stop"},{"kind":"text","text":"("},{"kind":"externalParam","text":"resolveImmediately"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"postValueChanged"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/stop(resolveImmediately:postValueChanged:)","kind":"symbol","url":"\/documentation\/motion\/valueanimation\/stop(resolveimmediately:postvaluechanged:)","abstract":[{"text":"Stops the animation immediately and preserves the last set ","type":"text"},{"type":"codeVoice","code":"value"},{"type":"text","text":". This is unlike CoreAnimation where the model and presentation layers get get mismatched."}],"type":"topic","role":"symbol"},"doc://Motion/documentation/Motion/ValueAnimation/toValue":{"kind":"symbol","url":"\/documentation\/motion\/valueanimation\/tovalue","abstract":[{"type":"text","text":"The target value to animate towards."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"toValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}],"title":"toValue","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/toValue","type":"topic"},"doc://Motion/SH":{"title":"Swift.Hashable","type":"unresolvable","identifier":"doc:\/\/Motion\/SH"},"doc://Motion/documentation/Motion/ValueAnimation/Hashable-Implementations":{"type":"topic","title":"Hashable Implementations","url":"\/documentation\/motion\/valueanimation\/hashable-implementations","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Hashable-Implementations","kind":"article"},"doc://Motion/documentation/Motion/SIMDRepresentable":{"abstract":[{"type":"text","text":"A protocol that defines how something that can be represented \/ stored in a "},{"type":"codeVoice","code":"SIMD"},{"type":"text","text":" type as well as instantiated from said "},{"code":"SIMD","type":"codeVoice"},{"type":"text","text":" type."}],"title":"SIMDRepresentable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SIMDRepresentable","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/motion\/simdrepresentable","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SIMDRepresentable"}],"role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/SIMDRepresentable"},"doc://Motion/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/Motion\/SQ"},"doc://Motion/documentation/Motion":{"type":"topic","url":"\/documentation\/motion","title":"Motion","role":"collection","identifier":"doc:\/\/Motion\/documentation\/Motion","kind":"symbol","abstract":[{"identifier":"Motion-Logo-Rendered","type":"image"}]},"doc://Motion/documentation/Motion/ValueAnimation/updateValue(to:postValueChanged:)":{"kind":"symbol","url":"\/documentation\/motion\/valueanimation\/updatevalue(to:postvaluechanged:)","abstract":[{"type":"text","text":"Updates "},{"code":"value","type":"codeVoice"},{"text":" to the supplied value and optionally invokes ","type":"text"},{"type":"codeVoice","code":"onValueChanged"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateValue"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"postValueChanged"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":")","kind":"text"}],"title":"updateValue(to:postValueChanged:)","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/updateValue(to:postValueChanged:)","type":"topic"},"doc://Motion/documentation/Motion/ValueAnimation/supportsVelocity":{"kind":"symbol","url":"\/documentation\/motion\/valueanimation\/supportsvelocity","abstract":[{"type":"text","text":"Returns whether or not this class supports velocity."}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"supportsVelocity","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"supportsVelocity","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/supportsVelocity","type":"topic"},"doc://Motion/documentation/Motion/ValueAnimation/resolvingEpsilon":{"abstract":[{"type":"text","text":"The default tolerance level for an animation to be considered finished."}],"title":"resolvingEpsilon","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolvingEpsilon","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"."},{"text":"SIMDType","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"EpsilonType","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/motion\/valueanimation\/resolvingepsilon","type":"topic","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/resolvingEpsilon"},"doc://Motion/documentation/Motion/ValueAnimation/ValueChangedCallback":{"abstract":[{"type":"text","text":"A block to be called when "},{"type":"codeVoice","code":"value"},{"type":"text","text":" changes."}],"title":"ValueAnimation.ValueChangedCallback","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"ValueChangedCallback","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/motion\/valueanimation\/valuechangedcallback","type":"topic","navigatorTitle":[{"text":"ValueChangedCallback","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback"},"doc://Motion/documentation/Motion/ValueAnimation/velocity":{"kind":"symbol","url":"\/documentation\/motion\/valueanimation\/velocity","abstract":[{"type":"text","text":"The velocity of the animation. Setting this before calling "},{"code":"start","type":"codeVoice"},{"type":"text","text":" will cause the animation to be seeded with that velocity, and then the velocity may change over time."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"velocity","kind":"identifier"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"}],"title":"velocity","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/velocity","type":"topic"},"doc://Motion/documentation/Motion/ValueAnimation/onValueChanged(disableActions:_:)":{"kind":"symbol","url":"\/documentation\/motion\/valueanimation\/onvaluechanged(disableactions:_:)","abstract":[{"type":"text","text":"Call this to register a "},{"type":"codeVoice","code":"ValueChangedCallback"},{"type":"text","text":" block that will be called anytime "},{"code":"value","type":"codeVoice"},{"text":" changes from ","type":"text"},{"type":"codeVoice","code":"tick"},{"type":"text","text":" or if explicitly specified via "},{"type":"codeVoice","code":"postValueChanged"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"When called, it will give the new value that ","type":"text"},{"type":"codeVoice","code":"value"},{"type":"text","text":" has animated to (since the last invocation)."},{"type":"text","text":" "},{"text":"If you’re animating ","type":"text"},{"code":"CALayer","type":"codeVoice"},{"type":"text","text":" objects from the block, you may supply "},{"code":"true","type":"codeVoice"},{"text":" for ","type":"text"},{"type":"codeVoice","code":"disableActions"},{"type":"text","text":" to automatically have this wrapped in a "},{"type":"codeVoice","code":"CATransaction"},{"text":" that disables implicit animations for the layer.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"onValueChanged"},{"text":"(","kind":"text"},{"text":"disableActions","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ValueAnimation","kind":"typeIdentifier","preciseIdentifier":"s:6Motion14ValueAnimationC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"text":">.","kind":"text"},{"text":"ValueChangedCallback","kind":"typeIdentifier","preciseIdentifier":"s:6Motion14ValueAnimationC0B15ChangedCallbacka"},{"kind":"text","text":"?)"}],"title":"onValueChanged(disableActions:_:)","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)","type":"topic"},"doc://Motion/documentation/Motion/SpringAnimation":{"abstract":[{"type":"text","text":"This class provides the ability to animate "},{"type":"codeVoice","code":"Value"},{"text":" using a physically-modeled spring.","type":"text"}],"title":"SpringAnimation","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SpringAnimation"}],"kind":"symbol","url":"\/documentation\/motion\/springanimation","type":"topic","navigatorTitle":[{"text":"SpringAnimation","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/SpringAnimation"},"doc://Motion/documentation/Motion/DecayAnimation":{"title":"DecayAnimation","type":"topic","url":"\/documentation\/motion\/decayanimation","abstract":[{"text":"This class provides the ability to animate types that conform to ","type":"text"},{"type":"codeVoice","code":"Value"},{"text":" based on decay functions.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"DecayAnimation","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"DecayAnimation","kind":"identifier"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/DecayAnimation"}}}