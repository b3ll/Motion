{"topicSections":[{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/resolvingEpsilon","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/toValue","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/value","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/velocity"],"title":"Instance Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/stop(resolveImmediately:postValueChanged:)","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/updateValue(to:postValueChanged:)"]},{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback"],"title":"Type Aliases"},{"title":"Type Properties","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/supportsVelocity"]},{"generated":true,"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Equatable-Implementations","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Hashable-Implementations"],"title":"Default Implementations"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"role":"symbol","roleHeading":"Class","modules":[{"name":"Motion"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ValueAnimation","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ValueAnimation"}],"symbolKind":"class","title":"ValueAnimation","externalID":"s:6Motion14ValueAnimationC"},"hierarchy":{"paths":[["doc:\/\/Motion\/documentation\/Motion"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/motion\/valueanimation"]}],"identifier":{"url":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValueAnimation","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:6Motion17SIMDRepresentableP","text":"SIMDRepresentable","kind":"typeIdentifier","identifier":"doc:\/\/Motion\/documentation\/Motion\/SIMDRepresentable"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"The interesting part of this is the ability to have animations on the value performed simultaneously using ","type":"text"},{"code":"simd","type":"codeVoice"},{"text":" registers.","type":"text"}]},{"inlineContent":[{"type":"text","text":"i.e. a "},{"code":"CGRect","type":"codeVoice"},{"text":" that’s animating will have all of its values animated simultaneously (vs. each value being animated sequentially), which should be more performant.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This is normally accomplished by setting an initial state for the animation ("},{"type":"codeVoice","code":"value"},{"text":") and then setting a target (","type":"text"},{"code":"toValue","type":"codeVoice"},{"type":"text","text":") to animate to."}],"type":"paragraph"},{"inlineContent":[{"text":"This class, when ticked, will change a value and emit changes to that value via ","type":"text"},{"code":"onValueChanged","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"If you wish to update the value manually, you may also do so via ","type":"text"},{"code":"updateValue(to:postValueChanged:)","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"When resolved, this class will optionally call the "},{"type":"codeVoice","code":"completionBlock"},{"type":"text","text":"."}],"type":"paragraph"},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"The base implementation of this class is not meant to be used on its own, rather subclasses provided are to be used.","type":"text"}]}],"name":"Note"},{"name":"Note","content":[{"inlineContent":[{"text":"This class is ","type":"text"},{"inlineContent":[{"type":"text","text":"not"}],"type":"strong"},{"type":"text","text":" thread-safe. It is meant to be run on the "},{"type":"strong","inlineContent":[{"text":"main thread","type":"text"}]},{"type":"text","text":" only (much like any AppKit \/ UIKit operations should be main threaded)."}],"type":"paragraph"}],"type":"aside","style":"note"},{"type":"aside","style":"note","name":"See Also","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"BasicAnimation"},{"type":"text","text":", "},{"type":"codeVoice","code":"DecayAnimation"},{"text":", ","type":"text"},{"type":"codeVoice","code":"SpringAnimation"},{"type":"text","text":"."}],"type":"paragraph"}]}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/Animation"],"type":"inheritsFrom","kind":"relationships","title":"Inherits From"},{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/BasicAnimation","doc:\/\/Motion\/documentation\/Motion\/DecayAnimation","doc:\/\/Motion\/documentation\/Motion\/SpringAnimation"],"type":"inheritedBy","title":"Inherited By","kind":"relationships"},{"kind":"relationships","identifiers":["doc:\/\/Motion\/SQ","doc:\/\/Motion\/SH"],"title":"Conforms To","type":"conformsTo"}],"sections":[],"abstract":[{"text":"This class provides the ability to animate changes to values (","type":"text"},{"type":"codeVoice","code":"Value"},{"text":") over time.","type":"text"}],"references":{"doc://Motion/documentation/Motion/ValueAnimation/toValue":{"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/toValue","title":"toValue","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/motion\/valueanimation\/tovalue","abstract":[{"type":"text","text":"The target value to animate towards."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"toValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}]},"doc://Motion/documentation/Motion/ValueAnimation/onValueChanged(disableActions:_:)":{"url":"\/documentation\/motion\/valueanimation\/onvaluechanged(disableactions:_:)","abstract":[{"text":"Call this to register a ","type":"text"},{"code":"ValueChangedCallback","type":"codeVoice"},{"text":" block that will be called anytime ","type":"text"},{"type":"codeVoice","code":"value"},{"type":"text","text":" changes from "},{"type":"codeVoice","code":"tick"},{"type":"text","text":" or if explicitly specified via "},{"type":"codeVoice","code":"postValueChanged"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"When called, it will give the new value that ","type":"text"},{"type":"codeVoice","code":"value"},{"text":" has animated to (since the last invocation).","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If you’re animating "},{"code":"CALayer","type":"codeVoice"},{"type":"text","text":" objects from the block, you may supply "},{"code":"true","type":"codeVoice"},{"type":"text","text":" for "},{"code":"disableActions","type":"codeVoice"},{"type":"text","text":" to automatically have this wrapped in a "},{"type":"codeVoice","code":"CATransaction"},{"text":" that disables implicit animations for the layer.","type":"text"}],"title":"onValueChanged(disableActions:_:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"onValueChanged"},{"text":"(","kind":"text"},{"text":"disableActions","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:6Motion14ValueAnimationC","text":"ValueAnimation"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">."},{"text":"ValueChangedCallback","kind":"typeIdentifier","preciseIdentifier":"s:6Motion14ValueAnimationC0B15ChangedCallbacka"},{"text":"?)","kind":"text"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)"},"doc://Motion/documentation/Motion/ValueAnimation/updateValue(to:postValueChanged:)":{"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/updateValue(to:postValueChanged:)","type":"topic","abstract":[{"type":"text","text":"Updates "},{"type":"codeVoice","code":"value"},{"type":"text","text":" to the supplied value and optionally invokes "},{"code":"onValueChanged","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"updateValue","kind":"identifier"},{"kind":"text","text":"("},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"postValueChanged","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":")","kind":"text"}],"role":"symbol","url":"\/documentation\/motion\/valueanimation\/updatevalue(to:postvaluechanged:)","kind":"symbol","title":"updateValue(to:postValueChanged:)"},"doc://Motion/documentation/Motion":{"identifier":"doc:\/\/Motion\/documentation\/Motion","title":"Motion","url":"\/documentation\/motion","abstract":[{"type":"image","identifier":"Motion-Logo-Rendered"}],"type":"topic","role":"collection","kind":"symbol"},"doc://Motion/documentation/Motion/ValueAnimation/supportsVelocity":{"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/supportsVelocity","type":"topic","abstract":[{"type":"text","text":"Returns whether or not this class supports velocity."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"supportsVelocity","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","url":"\/documentation\/motion\/valueanimation\/supportsvelocity","kind":"symbol","title":"supportsVelocity"},"doc://Motion/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/Motion\/SQ"},"doc://Motion/documentation/Motion/ValueAnimation/ValueChangedCallback":{"type":"topic","title":"ValueAnimation.ValueChangedCallback","role":"symbol","abstract":[{"type":"text","text":"A block to be called when "},{"type":"codeVoice","code":"value"},{"type":"text","text":" changes."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ValueChangedCallback"}],"navigatorTitle":[{"kind":"identifier","text":"ValueChangedCallback"}],"kind":"symbol","url":"\/documentation\/motion\/valueanimation\/valuechangedcallback"},"doc://Motion/documentation/Motion/ValueAnimation/value":{"title":"value","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/value","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"value","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"url":"\/documentation\/motion\/valueanimation\/value","abstract":[],"kind":"symbol","type":"topic","role":"symbol"},"doc://Motion/documentation/Motion/Animation":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Animation","kind":"identifier"}],"abstract":[{"type":"text","text":"This class acts as the base class for all animations within "},{"code":"Motion","type":"codeVoice"},{"type":"text","text":". It doesn’t do much, other than serve as a base class for all animations to inherit from and implement."}],"title":"Animation","identifier":"doc:\/\/Motion\/documentation\/Motion\/Animation","navigatorTitle":[{"kind":"identifier","text":"Animation"}],"type":"topic","kind":"symbol","url":"\/documentation\/motion\/animation","role":"symbol"},"doc://Motion/documentation/Motion/ValueAnimation/resolvingEpsilon":{"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/resolvingEpsilon","type":"topic","abstract":[{"text":"The default tolerance level for an animation to be considered finished.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"resolvingEpsilon","kind":"identifier"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SIMDType"},{"kind":"text","text":"."},{"text":"EpsilonType","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/motion\/valueanimation\/resolvingepsilon","kind":"symbol","title":"resolvingEpsilon"},"doc://Motion/documentation/Motion/ValueAnimation/Hashable-Implementations":{"type":"topic","kind":"article","abstract":[],"title":"Hashable Implementations","role":"collectionGroup","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Hashable-Implementations","url":"\/documentation\/motion\/valueanimation\/hashable-implementations"},"doc://Motion/documentation/Motion/ValueAnimation/Equatable-Implementations":{"type":"topic","title":"Equatable Implementations","kind":"article","url":"\/documentation\/motion\/valueanimation\/equatable-implementations","abstract":[],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Equatable-Implementations","role":"collectionGroup"},"doc://Motion/documentation/Motion/DecayAnimation":{"navigatorTitle":[{"kind":"identifier","text":"DecayAnimation"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DecayAnimation"}],"role":"symbol","url":"\/documentation\/motion\/decayanimation","identifier":"doc:\/\/Motion\/documentation\/Motion\/DecayAnimation","kind":"symbol","abstract":[{"type":"text","text":"This class provides the ability to animate types that conform to "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" based on decay functions."}],"title":"DecayAnimation"},"doc://Motion/documentation/Motion/ValueAnimation/velocity":{"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/velocity","type":"topic","abstract":[{"text":"The velocity of the animation. Setting this before calling ","type":"text"},{"type":"codeVoice","code":"start"},{"type":"text","text":" will cause the animation to be seeded with that velocity, and then the velocity may change over time."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"velocity"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/motion\/valueanimation\/velocity","kind":"symbol","title":"velocity"},"doc://Motion/documentation/Motion/ValueAnimation":{"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation","navigatorTitle":[{"text":"ValueAnimation","kind":"identifier"}],"title":"ValueAnimation","role":"symbol","kind":"symbol","url":"\/documentation\/motion\/valueanimation","abstract":[{"type":"text","text":"This class provides the ability to animate changes to values ("},{"type":"codeVoice","code":"Value"},{"text":") over time.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ValueAnimation","kind":"identifier"}]},"doc://Motion/documentation/Motion/SIMDRepresentable":{"navigatorTitle":[{"text":"SIMDRepresentable","kind":"identifier"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/SIMDRepresentable","type":"topic","abstract":[{"text":"A protocol that defines how something that can be represented \/ stored in a ","type":"text"},{"type":"codeVoice","code":"SIMD"},{"text":" type as well as instantiated from said ","type":"text"},{"type":"codeVoice","code":"SIMD"},{"text":" type.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SIMDRepresentable","kind":"identifier"}],"role":"symbol","url":"\/documentation\/motion\/simdrepresentable","kind":"symbol","title":"SIMDRepresentable"},"doc://Motion/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/Motion\/SH"},"doc://Motion/documentation/Motion/ValueAnimation/stop(resolveImmediately:postValueChanged:)":{"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/stop(resolveImmediately:postValueChanged:)","type":"topic","abstract":[{"text":"Stops the animation immediately and preserves the last set ","type":"text"},{"type":"codeVoice","code":"value"},{"text":". This is unlike CoreAnimation where the model and presentation layers get get mismatched.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"stop"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"resolveImmediately"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"postValueChanged","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"role":"symbol","url":"\/documentation\/motion\/valueanimation\/stop(resolveimmediately:postvaluechanged:)","kind":"symbol","title":"stop(resolveImmediately:postValueChanged:)"},"doc://Motion/documentation/Motion/SpringAnimation":{"url":"\/documentation\/motion\/springanimation","title":"SpringAnimation","identifier":"doc:\/\/Motion\/documentation\/Motion\/SpringAnimation","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SpringAnimation"}],"kind":"symbol","type":"topic","abstract":[{"text":"This class provides the ability to animate ","type":"text"},{"type":"codeVoice","code":"Value"},{"text":" using a physically-modeled spring.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SpringAnimation","kind":"identifier"}]},"doc://Motion/documentation/Motion/BasicAnimation":{"title":"BasicAnimation","abstract":[{"type":"text","text":"This class provides the ability to animate types that conform to "},{"code":"Value","type":"codeVoice"},{"text":" based on basic curves (i.e. ","type":"text"},{"code":"EasingFunction.easeIn","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"EasingFunction.easeInOut"},{"text":", etc.).","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/motion\/basicanimation","identifier":"doc:\/\/Motion\/documentation\/Motion\/BasicAnimation","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicAnimation"}],"navigatorTitle":[{"text":"BasicAnimation","kind":"identifier"}],"role":"symbol"}}}