{"abstract":[{"type":"text","text":"This class provides the ability to animate changes to values ("},{"code":"Value","type":"codeVoice"},{"text":") over time.","type":"text"}],"relationshipsSections":[{"kind":"relationships","type":"inheritsFrom","title":"Inherits From","identifiers":["doc:\/\/Motion\/documentation\/Motion\/Animation"]},{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/BasicAnimation","doc:\/\/Motion\/documentation\/Motion\/DecayAnimation","doc:\/\/Motion\/documentation\/Motion\/SpringAnimation"],"kind":"relationships","type":"inheritedBy","title":"Inherited By"},{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/Motion\/SQ","doc:\/\/Motion\/SH"],"type":"conformsTo"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/motion\/valueanimation"]}],"metadata":{"symbolKind":"class","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ValueAnimation"}],"modules":[{"name":"Motion"}],"title":"ValueAnimation","role":"symbol","externalID":"s:6Motion14ValueAnimationC","roleHeading":"Class","navigatorTitle":[{"kind":"identifier","text":"ValueAnimation"}]},"sections":[],"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/resolvingEpsilon","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/toValue","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/value","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/velocity"]},{"title":"Instance Methods","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/stop(resolveImmediately:postValueChanged:)","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/updateValue(to:postValueChanged:)"]},{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback"],"title":"Type Aliases"},{"title":"Type Properties","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/supportsVelocity"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Equatable-Implementations","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Hashable-Implementations"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ValueAnimation"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/Motion\/documentation\/Motion\/SIMDRepresentable","text":"SIMDRepresentable","preciseIdentifier":"s:6Motion17SIMDRepresentableP"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"The interesting part of this is the ability to have animations on the value performed simultaneously using ","type":"text"},{"type":"codeVoice","code":"simd"},{"text":" registers.","type":"text"}]},{"inlineContent":[{"type":"text","text":"i.e. a "},{"type":"codeVoice","code":"CGRect"},{"type":"text","text":" that’s animating will have all of its values animated simultaneously (vs. each value being animated sequentially), which should be more performant."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This is normally accomplished by setting an initial state for the animation ("},{"code":"value","type":"codeVoice"},{"text":") and then setting a target (","type":"text"},{"type":"codeVoice","code":"toValue"},{"type":"text","text":") to animate to."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This class, when ticked, will change a value and emit changes to that value via "},{"type":"codeVoice","code":"onValueChanged"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"If you wish to update the value manually, you may also do so via "},{"code":"updateValue(to:postValueChanged:)","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"When resolved, this class will optionally call the ","type":"text"},{"type":"codeVoice","code":"completionBlock"},{"text":".","type":"text"}]},{"name":"Note","type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"The base implementation of this class is not meant to be used on its own, rather subclasses provided are to be used."}],"type":"paragraph"}]},{"type":"aside","name":"Note","style":"note","content":[{"inlineContent":[{"text":"This class is ","type":"text"},{"inlineContent":[{"type":"text","text":"not"}],"type":"strong"},{"type":"text","text":" thread-safe. It is meant to be run on the "},{"inlineContent":[{"type":"text","text":"main thread"}],"type":"strong"},{"type":"text","text":" only (much like any AppKit \/ UIKit operations should be main threaded)."}],"type":"paragraph"}]},{"name":"See Also","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"BasicAnimation","type":"codeVoice"},{"type":"text","text":", "},{"code":"DecayAnimation","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"SpringAnimation"},{"type":"text","text":"."}]}],"type":"aside"}]}],"hierarchy":{"paths":[["doc:\/\/Motion\/documentation\/Motion"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation"},"kind":"symbol","references":{"doc://Motion/documentation/Motion/ValueAnimation/updateValue(to:postValueChanged:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"updateValue","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"postValueChanged","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}],"title":"updateValue(to:postValueChanged:)","abstract":[{"type":"text","text":"Updates "},{"type":"codeVoice","code":"value"},{"type":"text","text":" to the supplied value and optionally invokes "},{"type":"codeVoice","code":"onValueChanged"},{"type":"text","text":"."}],"role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/updateValue(to:postValueChanged:)","url":"\/documentation\/motion\/valueanimation\/updatevalue(to:postvaluechanged:)","kind":"symbol"},"doc://Motion/documentation/Motion/ValueAnimation/onValueChanged(disableActions:_:)":{"title":"onValueChanged(disableActions:_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"onValueChanged"},{"kind":"text","text":"("},{"kind":"externalParam","text":"disableActions"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ValueAnimation","preciseIdentifier":"s:6Motion14ValueAnimationC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"ValueChangedCallback","preciseIdentifier":"s:6Motion14ValueAnimationC0B15ChangedCallbacka"},{"text":"?)","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Call this to register a "},{"type":"codeVoice","code":"ValueChangedCallback"},{"type":"text","text":" block that will be called anytime "},{"type":"codeVoice","code":"value"},{"type":"text","text":" changes from "},{"code":"tick","type":"codeVoice"},{"type":"text","text":" or if explicitly specified via "},{"code":"postValueChanged","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"When called, it will give the new value that "},{"type":"codeVoice","code":"value"},{"text":" has animated to (since the last invocation).","type":"text"},{"type":"text","text":" "},{"text":"If you’re animating ","type":"text"},{"code":"CALayer","type":"codeVoice"},{"text":" objects from the block, you may supply ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" for ","type":"text"},{"code":"disableActions","type":"codeVoice"},{"type":"text","text":" to automatically have this wrapped in a "},{"type":"codeVoice","code":"CATransaction"},{"type":"text","text":" that disables implicit animations for the layer."}],"role":"symbol","url":"\/documentation\/motion\/valueanimation\/onvaluechanged(disableactions:_:)","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)"},"doc://Motion/SH":{"type":"unresolvable","identifier":"doc:\/\/Motion\/SH","title":"Swift.Hashable"},"doc://Motion/documentation/Motion/Animation":{"type":"topic","url":"\/documentation\/motion\/animation","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Animation","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Animation"}],"abstract":[{"text":"This class acts as the base class for all animations within ","type":"text"},{"type":"codeVoice","code":"Motion"},{"type":"text","text":". It doesn’t do much, other than serve as a base class for all animations to inherit from and implement."}],"title":"Animation","identifier":"doc:\/\/Motion\/documentation\/Motion\/Animation","kind":"symbol"},"doc://Motion/documentation/Motion/ValueAnimation/supportsVelocity":{"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"supportsVelocity"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"supportsVelocity","abstract":[{"type":"text","text":"Returns whether or not this class supports velocity."}],"role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/supportsVelocity","url":"\/documentation\/motion\/valueanimation\/supportsvelocity","kind":"symbol"},"doc://Motion/documentation/Motion/DecayAnimation":{"title":"DecayAnimation","url":"\/documentation\/motion\/decayanimation","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"DecayAnimation","kind":"identifier"}],"abstract":[{"type":"text","text":"This class provides the ability to animate types that conform to "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" based on decay functions."}],"navigatorTitle":[{"text":"DecayAnimation","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Motion\/documentation\/Motion\/DecayAnimation","kind":"symbol","role":"symbol"},"doc://Motion/documentation/Motion":{"role":"collection","kind":"symbol","type":"topic","identifier":"doc:\/\/Motion\/documentation\/Motion","abstract":[{"type":"image","identifier":"Motion-Logo-Rendered"}],"title":"Motion","url":"\/documentation\/motion"},"doc://Motion/documentation/Motion/BasicAnimation":{"type":"topic","url":"\/documentation\/motion\/basicanimation","navigatorTitle":[{"text":"BasicAnimation","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicAnimation"}],"title":"BasicAnimation","kind":"symbol","abstract":[{"text":"This class provides the ability to animate types that conform to ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" based on basic curves (i.e. "},{"code":"EasingFunction.easeIn","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"EasingFunction.easeInOut"},{"type":"text","text":", etc.)."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/BasicAnimation"},"doc://Motion/documentation/Motion/ValueAnimation/toValue":{"role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"toValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"url":"\/documentation\/motion\/valueanimation\/tovalue","title":"toValue","abstract":[{"type":"text","text":"The target value to animate towards."}],"type":"topic","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/toValue"},"doc://Motion/documentation/Motion/ValueAnimation":{"type":"topic","url":"\/documentation\/motion\/valueanimation","navigatorTitle":[{"text":"ValueAnimation","kind":"identifier"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValueAnimation","kind":"identifier"}],"title":"ValueAnimation","abstract":[{"type":"text","text":"This class provides the ability to animate changes to values ("},{"type":"codeVoice","code":"Value"},{"type":"text","text":") over time."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation","kind":"symbol"},"doc://Motion/documentation/Motion/ValueAnimation/ValueChangedCallback":{"type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"ValueChangedCallback","kind":"identifier"}],"title":"ValueAnimation.ValueChangedCallback","abstract":[{"type":"text","text":"A block to be called when "},{"code":"value","type":"codeVoice"},{"type":"text","text":" changes."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ValueChangedCallback"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback","url":"\/documentation\/motion\/valueanimation\/valuechangedcallback","kind":"symbol"},"doc://Motion/documentation/Motion/ValueAnimation/velocity":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"velocity"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"}],"title":"velocity","abstract":[{"type":"text","text":"The velocity of the animation. Setting this before calling "},{"type":"codeVoice","code":"start"},{"text":" will cause the animation to be seeded with that velocity, and then the velocity may change over time.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/velocity","url":"\/documentation\/motion\/valueanimation\/velocity","kind":"symbol"},"doc://Motion/documentation/Motion/ValueAnimation/value":{"type":"topic","title":"value","abstract":[],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/value","url":"\/documentation\/motion\/valueanimation\/value","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"value","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}]},"doc://Motion/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/Motion\/SQ","type":"unresolvable"},"doc://Motion/documentation/Motion/ValueAnimation/resolvingEpsilon":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"resolvingEpsilon","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"."},{"text":"SIMDType","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"EpsilonType","kind":"typeIdentifier"}],"title":"resolvingEpsilon","url":"\/documentation\/motion\/valueanimation\/resolvingepsilon","type":"topic","role":"symbol","abstract":[{"text":"The default tolerance level for an animation to be considered finished.","type":"text"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/resolvingEpsilon","kind":"symbol"},"doc://Motion/documentation/Motion/ValueAnimation/Hashable-Implementations":{"title":"Hashable Implementations","abstract":[],"type":"topic","role":"collectionGroup","url":"\/documentation\/motion\/valueanimation\/hashable-implementations","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Hashable-Implementations","kind":"article"},"doc://Motion/documentation/Motion/ValueAnimation/Equatable-Implementations":{"url":"\/documentation\/motion\/valueanimation\/equatable-implementations","title":"Equatable Implementations","kind":"article","type":"topic","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Equatable-Implementations"},"doc://Motion/documentation/Motion/SIMDRepresentable":{"type":"topic","url":"\/documentation\/motion\/simdrepresentable","navigatorTitle":[{"kind":"identifier","text":"SIMDRepresentable"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SIMDRepresentable","kind":"identifier"}],"title":"SIMDRepresentable","kind":"symbol","abstract":[{"text":"A protocol that defines how something that can be represented \/ stored in a ","type":"text"},{"code":"SIMD","type":"codeVoice"},{"type":"text","text":" type as well as instantiated from said "},{"type":"codeVoice","code":"SIMD"},{"type":"text","text":" type."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/SIMDRepresentable"},"doc://Motion/documentation/Motion/ValueAnimation/stop(resolveImmediately:postValueChanged:)":{"type":"topic","url":"\/documentation\/motion\/valueanimation\/stop(resolveimmediately:postvaluechanged:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"stop"},{"kind":"text","text":"("},{"kind":"externalParam","text":"resolveImmediately"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"postValueChanged","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Stops the animation immediately and preserves the last set ","type":"text"},{"type":"codeVoice","code":"value"},{"type":"text","text":". This is unlike CoreAnimation where the model and presentation layers get get mismatched."}],"title":"stop(resolveImmediately:postValueChanged:)","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/stop(resolveImmediately:postValueChanged:)","kind":"symbol"},"doc://Motion/documentation/Motion/SpringAnimation":{"navigatorTitle":[{"kind":"identifier","text":"SpringAnimation"}],"type":"topic","abstract":[{"type":"text","text":"This class provides the ability to animate "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" using a physically-modeled spring."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"SpringAnimation","kind":"identifier"}],"role":"symbol","title":"SpringAnimation","kind":"symbol","url":"\/documentation\/motion\/springanimation","identifier":"doc:\/\/Motion\/documentation\/Motion\/SpringAnimation"}}}