{"sections":[],"hierarchy":{"paths":[["doc:\/\/Motion\/documentation\/Motion"]]},"topicSections":[{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/resolvingEpsilon","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/toValue","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/value","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/velocity"],"title":"Instance Properties"},{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/stop(resolveImmediately:postValueChanged:)","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/updateValue(to:postValueChanged:)"],"title":"Instance Methods"},{"title":"Type Aliases","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback"]},{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/supportsVelocity"],"title":"Type Properties"},{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Equatable-Implementations","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Hashable-Implementations"],"generated":true,"title":"Default Implementations"}],"identifier":{"url":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This class provides the ability to animate changes to values ("},{"code":"Value","type":"codeVoice"},{"text":") over time.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/motion\/valueanimation"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ValueAnimation"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Motion17SIMDRepresentableP","identifier":"doc:\/\/Motion\/documentation\/Motion\/SIMDRepresentable","text":"SIMDRepresentable"}]}]},{"content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"inlineContent":[{"text":"The interesting part of this is the ability to have animations on the value performed simultaneously using ","type":"text"},{"type":"codeVoice","code":"simd"},{"type":"text","text":" registers."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"i.e. a "},{"type":"codeVoice","code":"CGRect"},{"type":"text","text":" thatâ€™s animating will have all of its values animated simultaneously (vs. each value being animated sequentially), which should be more performant."}]},{"type":"paragraph","inlineContent":[{"text":"This is normally accomplished by setting an initial state for the animation (","type":"text"},{"type":"codeVoice","code":"value"},{"text":") and then setting a target (","type":"text"},{"type":"codeVoice","code":"toValue"},{"text":") to animate to.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"This class, when ticked, will change a value and emit changes to that value via ","type":"text"},{"code":"onValueChanged","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"If you wish to update the value manually, you may also do so via ","type":"text"},{"type":"codeVoice","code":"updateValue(to:postValueChanged:)"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"When resolved, this class will optionally call the ","type":"text"},{"type":"codeVoice","code":"completionBlock"},{"text":".","type":"text"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The base implementation of this class is not meant to be used on its own, rather subclasses provided are to be used."}]}],"style":"note","type":"aside","name":"Note"},{"style":"note","content":[{"inlineContent":[{"text":"This class is ","type":"text"},{"type":"strong","inlineContent":[{"text":"not","type":"text"}]},{"type":"text","text":" thread-safe. It is meant to be run on the "},{"type":"strong","inlineContent":[{"type":"text","text":"main thread"}]},{"type":"text","text":" only (much like any AppKit \/ UIKit operations should be main threaded)."}],"type":"paragraph"}],"type":"aside","name":"Note"},{"style":"note","type":"aside","name":"See Also","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"BasicAnimation","type":"codeVoice"},{"type":"text","text":", "},{"code":"DecayAnimation","type":"codeVoice"},{"type":"text","text":", "},{"code":"SpringAnimation","type":"codeVoice"},{"text":".","type":"text"}]}]}],"kind":"content"}],"metadata":{"role":"symbol","title":"ValueAnimation","externalID":"s:6Motion14ValueAnimationC","symbolKind":"class","roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ValueAnimation","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ValueAnimation"}],"modules":[{"name":"Motion"}]},"kind":"symbol","relationshipsSections":[{"type":"inheritsFrom","identifiers":["doc:\/\/Motion\/documentation\/Motion\/Animation"],"title":"Inherits From","kind":"relationships"},{"type":"inheritedBy","identifiers":["doc:\/\/Motion\/documentation\/Motion\/BasicAnimation","doc:\/\/Motion\/documentation\/Motion\/DecayAnimation","doc:\/\/Motion\/documentation\/Motion\/SpringAnimation"],"kind":"relationships","title":"Inherited By"},{"identifiers":["doc:\/\/Motion\/SQ","doc:\/\/Motion\/SH"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://Motion/documentation/Motion/ValueAnimation/stop(resolveImmediately:postValueChanged:)":{"kind":"symbol","url":"\/documentation\/motion\/valueanimation\/stop(resolveimmediately:postvaluechanged:)","title":"stop(resolveImmediately:postValueChanged:)","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/stop(resolveImmediately:postValueChanged:)","type":"topic","abstract":[{"text":"Stops the animation immediately and preserves the last set ","type":"text"},{"type":"codeVoice","code":"value"},{"text":". This is unlike CoreAnimation where the model and presentation layers get get mismatched.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stop"},{"kind":"text","text":"("},{"text":"resolveImmediately","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"postValueChanged","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}]},"doc://Motion/documentation/Motion/ValueAnimation/resolvingEpsilon":{"title":"resolvingEpsilon","url":"\/documentation\/motion\/valueanimation\/resolvingepsilon","kind":"symbol","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/resolvingEpsilon","type":"topic","abstract":[{"type":"text","text":"The default tolerance level for an animation to be considered finished."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"resolvingEpsilon","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SIMDType","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"EpsilonType"}]},"doc://Motion/documentation/Motion/ValueAnimation/updateValue(to:postValueChanged:)":{"kind":"symbol","url":"\/documentation\/motion\/valueanimation\/updatevalue(to:postvaluechanged:)","title":"updateValue(to:postValueChanged:)","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/updateValue(to:postValueChanged:)","type":"topic","abstract":[{"text":"Updates ","type":"text"},{"code":"value","type":"codeVoice"},{"text":" to the supplied value and optionally invokes ","type":"text"},{"code":"onValueChanged","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"updateValue"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"postValueChanged"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}]},"doc://Motion/documentation/Motion/ValueAnimation/ValueChangedCallback":{"title":"ValueAnimation.ValueChangedCallback","url":"\/documentation\/motion\/valueanimation\/valuechangedcallback","kind":"symbol","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback","type":"topic","abstract":[{"type":"text","text":"A block to be called when "},{"code":"value","type":"codeVoice"},{"text":" changes.","type":"text"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueChangedCallback"}],"navigatorTitle":[{"kind":"identifier","text":"ValueChangedCallback"}]},"doc://Motion/documentation/Motion/ValueAnimation/velocity":{"kind":"symbol","url":"\/documentation\/motion\/valueanimation\/velocity","title":"velocity","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/velocity","type":"topic","abstract":[{"type":"text","text":"The velocity of the animation. Setting this before calling "},{"code":"start","type":"codeVoice"},{"text":" will cause the animation to be seeded with that velocity, and then the velocity may change over time.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"velocity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"}]},"doc://Motion/SQ":{"type":"unresolvable","identifier":"doc:\/\/Motion\/SQ","title":"Swift.Equatable"},"doc://Motion/documentation/Motion/ValueAnimation/toValue":{"kind":"symbol","url":"\/documentation\/motion\/valueanimation\/tovalue","title":"toValue","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/toValue","type":"topic","abstract":[{"type":"text","text":"The target value to animate towards."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"toValue","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"}]},"doc://Motion/documentation/Motion/ValueAnimation/onValueChanged(disableActions:_:)":{"type":"topic","abstract":[{"text":"Call this to register a ","type":"text"},{"type":"codeVoice","code":"ValueChangedCallback"},{"text":" block that will be called anytime ","type":"text"},{"code":"value","type":"codeVoice"},{"type":"text","text":" changes from "},{"type":"codeVoice","code":"tick"},{"text":" or if explicitly specified via ","type":"text"},{"code":"postValueChanged","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"When called, it will give the new value that "},{"type":"codeVoice","code":"value"},{"type":"text","text":" has animated to (since the last invocation)."},{"text":" ","type":"text"},{"text":"If youâ€™re animating ","type":"text"},{"code":"CALayer","type":"codeVoice"},{"text":" objects from the block, you may supply ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" for ","type":"text"},{"type":"codeVoice","code":"disableActions"},{"text":" to automatically have this wrapped in a ","type":"text"},{"type":"codeVoice","code":"CATransaction"},{"type":"text","text":" that disables implicit animations for the layer."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)","title":"onValueChanged(disableActions:_:)","kind":"symbol","url":"\/documentation\/motion\/valueanimation\/onvaluechanged(disableactions:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onValueChanged"},{"text":"(","kind":"text"},{"text":"disableActions","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"text":"ValueAnimation","kind":"typeIdentifier","preciseIdentifier":"s:6Motion14ValueAnimationC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">."},{"preciseIdentifier":"s:6Motion14ValueAnimationC0B15ChangedCallbacka","text":"ValueChangedCallback","kind":"typeIdentifier"},{"kind":"text","text":"?)"}],"role":"symbol"},"doc://Motion/documentation/Motion/SIMDRepresentable":{"url":"\/documentation\/motion\/simdrepresentable","role":"symbol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A protocol that defines how something that can be represented \/ stored in a "},{"code":"SIMD","type":"codeVoice"},{"text":" type as well as instantiated from said ","type":"text"},{"code":"SIMD","type":"codeVoice"},{"text":" type.","type":"text"}],"navigatorTitle":[{"text":"SIMDRepresentable","kind":"identifier"}],"title":"SIMDRepresentable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SIMDRepresentable"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/SIMDRepresentable"},"doc://Motion/documentation/Motion/ValueAnimation/Hashable-Implementations":{"kind":"article","url":"\/documentation\/motion\/valueanimation\/hashable-implementations","title":"Hashable Implementations","role":"collectionGroup","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Hashable-Implementations","type":"topic","abstract":[]},"doc://Motion/documentation/Motion/BasicAnimation":{"type":"topic","abstract":[{"type":"text","text":"This class provides the ability to animate types that conform to "},{"code":"Value","type":"codeVoice"},{"text":" based on basic curves (i.e. ","type":"text"},{"code":"EasingFunction.easeIn","type":"codeVoice"},{"type":"text","text":", "},{"code":"EasingFunction.easeInOut","type":"codeVoice"},{"type":"text","text":", etc.)."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/BasicAnimation","title":"BasicAnimation","navigatorTitle":[{"text":"BasicAnimation","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/motion\/basicanimation","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicAnimation","kind":"identifier"}],"role":"symbol"},"doc://Motion/documentation/Motion":{"abstract":[{"type":"image","identifier":"Motion-Logo-Rendered"}],"identifier":"doc:\/\/Motion\/documentation\/Motion","url":"\/documentation\/motion","kind":"symbol","type":"topic","role":"collection","title":"Motion"},"doc://Motion/documentation/Motion/ValueAnimation":{"title":"ValueAnimation","url":"\/documentation\/motion\/valueanimation","kind":"symbol","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation","type":"topic","abstract":[{"text":"This class provides the ability to animate changes to values (","type":"text"},{"type":"codeVoice","code":"Value"},{"type":"text","text":") over time."}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ValueAnimation","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ValueAnimation"}]},"doc://Motion/documentation/Motion/ValueAnimation/Equatable-Implementations":{"title":"Equatable Implementations","url":"\/documentation\/motion\/valueanimation\/equatable-implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Equatable-Implementations","type":"topic","abstract":[]},"doc://Motion/documentation/Motion/SpringAnimation":{"identifier":"doc:\/\/Motion\/documentation\/Motion\/SpringAnimation","type":"topic","url":"\/documentation\/motion\/springanimation","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"This class provides the ability to animate "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" using a physically-modeled spring."}],"title":"SpringAnimation","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SpringAnimation"}],"navigatorTitle":[{"kind":"identifier","text":"SpringAnimation"}]},"doc://Motion/documentation/Motion/DecayAnimation":{"identifier":"doc:\/\/Motion\/documentation\/Motion\/DecayAnimation","navigatorTitle":[{"kind":"identifier","text":"DecayAnimation"}],"type":"topic","url":"\/documentation\/motion\/decayanimation","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"DecayAnimation","kind":"identifier"}],"kind":"symbol","title":"DecayAnimation","role":"symbol","abstract":[{"text":"This class provides the ability to animate types that conform to ","type":"text"},{"type":"codeVoice","code":"Value"},{"text":" based on decay functions.","type":"text"}]},"doc://Motion/documentation/Motion/Animation":{"url":"\/documentation\/motion\/animation","identifier":"doc:\/\/Motion\/documentation\/Motion\/Animation","kind":"symbol","title":"Animation","role":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Animation","kind":"identifier"}],"navigatorTitle":[{"text":"Animation","kind":"identifier"}],"abstract":[{"type":"text","text":"This class acts as the base class for all animations within "},{"code":"Motion","type":"codeVoice"},{"type":"text","text":". It doesnâ€™t do much, other than serve as a base class for all animations to inherit from and implement."}]},"doc://Motion/documentation/Motion/ValueAnimation/supportsVelocity":{"title":"supportsVelocity","url":"\/documentation\/motion\/valueanimation\/supportsvelocity","kind":"symbol","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/supportsVelocity","type":"topic","abstract":[{"type":"text","text":"Returns whether or not this class supports velocity."}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"supportsVelocity","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://Motion/documentation/Motion/ValueAnimation/value":{"kind":"symbol","url":"\/documentation\/motion\/valueanimation\/value","title":"value","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/value","type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"value","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}]},"doc://Motion/SH":{"title":"Swift.Hashable","identifier":"doc:\/\/Motion\/SH","type":"unresolvable"}}}