{"identifier":{"url":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation","interfaceLanguage":"swift"},"metadata":{"symbolKind":"class","role":"symbol","title":"ValueAnimation","externalID":"s:6Motion14ValueAnimationC","modules":[{"name":"Motion"}],"roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ValueAnimation","kind":"identifier"}],"navigatorTitle":[{"text":"ValueAnimation","kind":"identifier"}]},"variants":[{"paths":["\/documentation\/motion\/valueanimation"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/resolvingEpsilon","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/toValue","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/value","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/velocity"]},{"title":"Instance Methods","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/stop(resolveImmediately:postValueChanged:)","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/updateValue(to:postValueChanged:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback"]},{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/supportsVelocity"],"title":"Type Properties"},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Equatable-Implementations","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Hashable-Implementations"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ValueAnimation","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"SIMDRepresentable","preciseIdentifier":"s:6Motion17SIMDRepresentableP","identifier":"doc:\/\/Motion\/documentation\/Motion\/SIMDRepresentable","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"inlineContent":[{"text":"The interesting part of this is the ability to have animations on the value performed simultaneously using ","type":"text"},{"type":"codeVoice","code":"simd"},{"text":" registers.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"i.e. a ","type":"text"},{"type":"codeVoice","code":"CGRect"},{"type":"text","text":" thatâ€™s animating will have all of its values animated simultaneously (vs. each value being animated sequentially), which should be more performant."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This is normally accomplished by setting an initial state for the animation ("},{"code":"value","type":"codeVoice"},{"type":"text","text":") and then setting a target ("},{"type":"codeVoice","code":"toValue"},{"type":"text","text":") to animate to."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This class, when ticked, will change a value and emit changes to that value via "},{"type":"codeVoice","code":"onValueChanged"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"If you wish to update the value manually, you may also do so via ","type":"text"},{"type":"codeVoice","code":"updateValue(to:postValueChanged:)"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"When resolved, this class will optionally call the "},{"code":"completionBlock","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The base implementation of this class is not meant to be used on its own, rather subclasses provided are to be used.","type":"text"}]}],"name":"Note","type":"aside","style":"note"},{"type":"aside","name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This class is "},{"type":"strong","inlineContent":[{"text":"not","type":"text"}]},{"type":"text","text":" thread-safe. It is meant to be run on the "},{"inlineContent":[{"text":"main thread","type":"text"}],"type":"strong"},{"type":"text","text":" only (much like any AppKit \/ UIKit operations should be main threaded)."}]}]},{"type":"aside","style":"note","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"BasicAnimation"},{"text":", ","type":"text"},{"code":"DecayAnimation","type":"codeVoice"},{"type":"text","text":", "},{"code":"SpringAnimation","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"name":"See Also"}]}],"hierarchy":{"paths":[["doc:\/\/Motion\/documentation\/Motion"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"abstract":[{"type":"text","text":"This class provides the ability to animate changes to values ("},{"code":"Value","type":"codeVoice"},{"type":"text","text":") over time."}],"kind":"symbol","relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/Motion\/documentation\/Motion\/Animation"],"type":"inheritsFrom","kind":"relationships"},{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/BasicAnimation","doc:\/\/Motion\/documentation\/Motion\/DecayAnimation","doc:\/\/Motion\/documentation\/Motion\/SpringAnimation"],"kind":"relationships","type":"inheritedBy","title":"Inherited By"},{"title":"Conforms To","identifiers":["doc:\/\/Motion\/SQ","doc:\/\/Motion\/SH"],"kind":"relationships","type":"conformsTo"}],"references":{"doc://Motion/documentation/Motion/ValueAnimation/value":{"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"value"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/value","abstract":[],"type":"topic","title":"value","url":"\/documentation\/motion\/valueanimation\/value"},"doc://Motion/documentation/Motion/ValueAnimation/Equatable-Implementations":{"type":"topic","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Equatable-Implementations","role":"collectionGroup","url":"\/documentation\/motion\/valueanimation\/equatable-implementations","abstract":[],"title":"Equatable Implementations","kind":"article"},"doc://Motion/documentation/Motion/ValueAnimation":{"role":"symbol","url":"\/documentation\/motion\/valueanimation","type":"topic","title":"ValueAnimation","abstract":[{"type":"text","text":"This class provides the ability to animate changes to values ("},{"code":"Value","type":"codeVoice"},{"type":"text","text":") over time."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ValueAnimation"}],"navigatorTitle":[{"text":"ValueAnimation","kind":"identifier"}]},"doc://Motion/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/Motion\/SQ"},"doc://Motion/documentation/Motion/BasicAnimation":{"kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"This class provides the ability to animate types that conform to ","type":"text"},{"type":"codeVoice","code":"Value"},{"type":"text","text":" based on basic curves (i.e. "},{"code":"EasingFunction.easeIn","type":"codeVoice"},{"text":", ","type":"text"},{"code":"EasingFunction.easeInOut","type":"codeVoice"},{"type":"text","text":", etc.)."}],"navigatorTitle":[{"text":"BasicAnimation","kind":"identifier"}],"title":"BasicAnimation","url":"\/documentation\/motion\/basicanimation","identifier":"doc:\/\/Motion\/documentation\/Motion\/BasicAnimation","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"BasicAnimation","kind":"identifier"}]},"doc://Motion/documentation/Motion/ValueAnimation/Hashable-Implementations":{"title":"Hashable Implementations","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Hashable-Implementations","abstract":[],"role":"collectionGroup","type":"topic","kind":"article","url":"\/documentation\/motion\/valueanimation\/hashable-implementations"},"doc://Motion/documentation/Motion/ValueAnimation/supportsVelocity":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"supportsVelocity"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"type":"text","text":"Returns whether or not this class supports velocity."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/supportsVelocity","type":"topic","title":"supportsVelocity","url":"\/documentation\/motion\/valueanimation\/supportsvelocity"},"doc://Motion/documentation/Motion/ValueAnimation/toValue":{"title":"toValue","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The target value to animate towards."}],"url":"\/documentation\/motion\/valueanimation\/tovalue","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/toValue","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"toValue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}]},"doc://Motion/documentation/Motion/SpringAnimation":{"type":"topic","abstract":[{"text":"This class provides the ability to animate ","type":"text"},{"code":"Value","type":"codeVoice"},{"text":" using a physically-modeled spring.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/SpringAnimation","title":"SpringAnimation","navigatorTitle":[{"kind":"identifier","text":"SpringAnimation"}],"url":"\/documentation\/motion\/springanimation","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SpringAnimation"}],"role":"symbol"},"doc://Motion/documentation/Motion/ValueAnimation/updateValue(to:postValueChanged:)":{"url":"\/documentation\/motion\/valueanimation\/updatevalue(to:postvaluechanged:)","role":"symbol","title":"updateValue(to:postValueChanged:)","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateValue"},{"kind":"text","text":"("},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"postValueChanged","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":")","kind":"text"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/updateValue(to:postValueChanged:)","abstract":[{"text":"Updates ","type":"text"},{"code":"value","type":"codeVoice"},{"type":"text","text":" to the supplied value and optionally invokes "},{"type":"codeVoice","code":"onValueChanged"},{"text":".","type":"text"}]},"doc://Motion/documentation/Motion/ValueAnimation/ValueChangedCallback":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"ValueChangedCallback","kind":"identifier"}],"abstract":[{"type":"text","text":"A block to be called when "},{"type":"codeVoice","code":"value"},{"type":"text","text":" changes."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValueChangedCallback"}],"title":"ValueAnimation.ValueChangedCallback","url":"\/documentation\/motion\/valueanimation\/valuechangedcallback"},"doc://Motion/documentation/Motion/ValueAnimation/resolvingEpsilon":{"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"resolvingEpsilon","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SIMDType"},{"kind":"text","text":"."},{"text":"EpsilonType","kind":"typeIdentifier"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/resolvingEpsilon","abstract":[{"type":"text","text":"The default tolerance level for an animation to be considered finished."}],"type":"topic","title":"resolvingEpsilon","url":"\/documentation\/motion\/valueanimation\/resolvingepsilon"},"doc://Motion/documentation/Motion/DecayAnimation":{"navigatorTitle":[{"kind":"identifier","text":"DecayAnimation"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DecayAnimation"}],"role":"symbol","kind":"symbol","title":"DecayAnimation","identifier":"doc:\/\/Motion\/documentation\/Motion\/DecayAnimation","url":"\/documentation\/motion\/decayanimation","abstract":[{"text":"This class provides the ability to animate types that conform to ","type":"text"},{"type":"codeVoice","code":"Value"},{"text":" based on decay functions.","type":"text"}],"type":"topic"},"doc://Motion/SH":{"identifier":"doc:\/\/Motion\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://Motion/documentation/Motion":{"title":"Motion","url":"\/documentation\/motion","type":"topic","kind":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion","role":"collection","abstract":[{"type":"image","identifier":"Motion-Logo-Rendered"}]},"doc://Motion/documentation/Motion/ValueAnimation/stop(resolveImmediately:postValueChanged:)":{"url":"\/documentation\/motion\/valueanimation\/stop(resolveimmediately:postvaluechanged:)","role":"symbol","title":"stop(resolveImmediately:postValueChanged:)","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"stop","kind":"identifier"},{"kind":"text","text":"("},{"text":"resolveImmediately","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"postValueChanged"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/stop(resolveImmediately:postValueChanged:)","abstract":[{"text":"Stops the animation immediately and preserves the last set ","type":"text"},{"type":"codeVoice","code":"value"},{"type":"text","text":". This is unlike CoreAnimation where the model and presentation layers get get mismatched."}]},"doc://Motion/documentation/Motion/ValueAnimation/velocity":{"url":"\/documentation\/motion\/valueanimation\/velocity","role":"symbol","title":"velocity","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"velocity","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/velocity","abstract":[{"text":"The velocity of the animation. Setting this before calling ","type":"text"},{"type":"codeVoice","code":"start"},{"type":"text","text":" will cause the animation to be seeded with that velocity, and then the velocity may change over time."}]},"doc://Motion/documentation/Motion/SIMDRepresentable":{"title":"SIMDRepresentable","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SIMDRepresentable"}],"type":"topic","abstract":[{"type":"text","text":"A protocol that defines how something that can be represented \/ stored in a "},{"type":"codeVoice","code":"SIMD"},{"text":" type as well as instantiated from said ","type":"text"},{"type":"codeVoice","code":"SIMD"},{"text":" type.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SIMDRepresentable","kind":"identifier"}],"url":"\/documentation\/motion\/simdrepresentable","identifier":"doc:\/\/Motion\/documentation\/Motion\/SIMDRepresentable"},"doc://Motion/documentation/Motion/Animation":{"navigatorTitle":[{"text":"Animation","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Animation"}],"role":"symbol","kind":"symbol","title":"Animation","identifier":"doc:\/\/Motion\/documentation\/Motion\/Animation","url":"\/documentation\/motion\/animation","type":"topic","abstract":[{"text":"This class acts as the base class for all animations within ","type":"text"},{"code":"Motion","type":"codeVoice"},{"type":"text","text":". It doesnâ€™t do much, other than serve as a base class for all animations to inherit from and implement."}]},"doc://Motion/documentation/Motion/ValueAnimation/onValueChanged(disableActions:_:)":{"abstract":[{"text":"Call this to register a ","type":"text"},{"type":"codeVoice","code":"ValueChangedCallback"},{"type":"text","text":" block that will be called anytime "},{"code":"value","type":"codeVoice"},{"text":" changes from ","type":"text"},{"code":"tick","type":"codeVoice"},{"text":" or if explicitly specified via ","type":"text"},{"code":"postValueChanged","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"When called, it will give the new value that ","type":"text"},{"type":"codeVoice","code":"value"},{"type":"text","text":" has animated to (since the last invocation)."},{"type":"text","text":" "},{"type":"text","text":"If youâ€™re animating "},{"code":"CALayer","type":"codeVoice"},{"type":"text","text":" objects from the block, you may supply "},{"code":"true","type":"codeVoice"},{"text":" for ","type":"text"},{"code":"disableActions","type":"codeVoice"},{"text":" to automatically have this wrapped in a ","type":"text"},{"type":"codeVoice","code":"CATransaction"},{"text":" that disables implicit animations for the layer.","type":"text"}],"kind":"symbol","title":"onValueChanged(disableActions:_:)","role":"symbol","url":"\/documentation\/motion\/valueanimation\/onvaluechanged(disableactions:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onValueChanged","kind":"identifier"},{"kind":"text","text":"("},{"text":"disableActions","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"text":"ValueAnimation","kind":"typeIdentifier","preciseIdentifier":"s:6Motion14ValueAnimationC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:6Motion14ValueAnimationC0B15ChangedCallbacka","text":"ValueChangedCallback","kind":"typeIdentifier"},{"kind":"text","text":"?)"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)","type":"topic"}}}