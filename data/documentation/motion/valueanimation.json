{"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/resolvingEpsilon","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/toValue","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/value","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/velocity"],"title":"Instance Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/stop(resolveImmediately:postValueChanged:)","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/updateValue(to:postValueChanged:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback"]},{"title":"Type Properties","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/supportsVelocity"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Equatable-Implementations","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Hashable-Implementations"]}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/Motion\/documentation\/Motion\/Animation"],"title":"Inherits From","type":"inheritsFrom"},{"kind":"relationships","identifiers":["doc:\/\/Motion\/documentation\/Motion\/BasicAnimation","doc:\/\/Motion\/documentation\/Motion\/DecayAnimation","doc:\/\/Motion\/documentation\/Motion\/SpringAnimation"],"title":"Inherited By","type":"inheritedBy"},{"title":"Conforms To","identifiers":["doc:\/\/Motion\/SQ","doc:\/\/Motion\/SH"],"kind":"relationships","type":"conformsTo"}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueAnimation"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"SIMDRepresentable","preciseIdentifier":"s:6Motion17SIMDRepresentableP","kind":"typeIdentifier","identifier":"doc:\/\/Motion\/documentation\/Motion\/SIMDRepresentable"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"The interesting part of this is the ability to have animations on the value performed simultaneously using ","type":"text"},{"type":"codeVoice","code":"simd"},{"text":" registers.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"i.e. a ","type":"text"},{"code":"CGRect","type":"codeVoice"},{"type":"text","text":" that’s animating will have all of its values animated simultaneously (vs. each value being animated sequentially), which should be more performant."}]},{"inlineContent":[{"type":"text","text":"This is normally accomplished by setting an initial state for the animation ("},{"code":"value","type":"codeVoice"},{"type":"text","text":") and then setting a target ("},{"code":"toValue","type":"codeVoice"},{"text":") to animate to.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This class, when ticked, will change a value and emit changes to that value via "},{"type":"codeVoice","code":"onValueChanged"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"If you wish to update the value manually, you may also do so via ","type":"text"},{"type":"codeVoice","code":"updateValue(to:postValueChanged:)"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When resolved, this class will optionally call the "},{"code":"completionBlock","type":"codeVoice"},{"text":".","type":"text"}]},{"style":"note","type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"The base implementation of this class is not meant to be used on its own, rather subclasses provided are to be used.","type":"text"}]}]},{"type":"aside","name":"Note","content":[{"inlineContent":[{"text":"This class is ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"not"}]},{"type":"text","text":" thread-safe. It is meant to be run on the "},{"type":"strong","inlineContent":[{"type":"text","text":"main thread"}]},{"text":" only (much like any AppKit \/ UIKit operations should be main threaded).","type":"text"}],"type":"paragraph"}],"style":"note"},{"type":"aside","name":"See Also","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"BasicAnimation"},{"type":"text","text":", "},{"code":"DecayAnimation","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"SpringAnimation"},{"text":".","type":"text"}]}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/motion\/valueanimation"]}],"abstract":[{"type":"text","text":"This class provides the ability to animate changes to values ("},{"type":"codeVoice","code":"Value"},{"type":"text","text":") over time."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation"},"hierarchy":{"paths":[["doc:\/\/Motion\/documentation\/Motion"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"externalID":"s:6Motion14ValueAnimationC","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueAnimation"}],"modules":[{"name":"Motion"}],"symbolKind":"class","title":"ValueAnimation","roleHeading":"Class","navigatorTitle":[{"text":"ValueAnimation","kind":"identifier"}]},"references":{"doc://Motion/SH":{"identifier":"doc:\/\/Motion\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://Motion/documentation/Motion/SIMDRepresentable":{"abstract":[{"type":"text","text":"A protocol that defines how something that can be represented \/ stored in a "},{"type":"codeVoice","code":"SIMD"},{"type":"text","text":" type as well as instantiated from said "},{"code":"SIMD","type":"codeVoice"},{"text":" type.","type":"text"}],"type":"topic","identifier":"doc:\/\/Motion\/documentation\/Motion\/SIMDRepresentable","title":"SIMDRepresentable","kind":"symbol","url":"\/documentation\/motion\/simdrepresentable","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SIMDRepresentable","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SIMDRepresentable"}]},"doc://Motion/documentation/Motion/ValueAnimation/Hashable-Implementations":{"kind":"article","title":"Hashable Implementations","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Hashable-Implementations","abstract":[],"role":"collectionGroup","type":"topic","url":"\/documentation\/motion\/valueanimation\/hashable-implementations"},"doc://Motion/documentation/Motion/ValueAnimation":{"url":"\/documentation\/motion\/valueanimation","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation","type":"topic","title":"ValueAnimation","kind":"symbol","abstract":[{"type":"text","text":"This class provides the ability to animate changes to values ("},{"code":"Value","type":"codeVoice"},{"text":") over time.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValueAnimation","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ValueAnimation"}]},"doc://Motion/documentation/Motion/ValueAnimation/onValueChanged(disableActions:_:)":{"title":"onValueChanged(disableActions:_:)","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)","type":"topic","role":"symbol","abstract":[{"text":"Call this to register a ","type":"text"},{"type":"codeVoice","code":"ValueChangedCallback"},{"type":"text","text":" block that will be called anytime "},{"code":"value","type":"codeVoice"},{"type":"text","text":" changes from "},{"type":"codeVoice","code":"tick"},{"text":" or if explicitly specified via ","type":"text"},{"code":"postValueChanged","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"When called, it will give the new value that ","type":"text"},{"code":"value","type":"codeVoice"},{"type":"text","text":" has animated to (since the last invocation)."},{"type":"text","text":" "},{"text":"If you’re animating ","type":"text"},{"type":"codeVoice","code":"CALayer"},{"text":" objects from the block, you may supply ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" for "},{"type":"codeVoice","code":"disableActions"},{"text":" to automatically have this wrapped in a ","type":"text"},{"type":"codeVoice","code":"CATransaction"},{"text":" that disables implicit animations for the layer.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onValueChanged"},{"kind":"text","text":"("},{"text":"disableActions","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"text":"ValueAnimation","kind":"typeIdentifier","preciseIdentifier":"s:6Motion14ValueAnimationC"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"ValueChangedCallback","preciseIdentifier":"s:6Motion14ValueAnimationC0B15ChangedCallbacka"},{"kind":"text","text":"?)"}],"url":"\/documentation\/motion\/valueanimation\/onvaluechanged(disableactions:_:)"},"doc://Motion/documentation/Motion/ValueAnimation/velocity":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"velocity","kind":"identifier"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"}],"abstract":[{"text":"The velocity of the animation. Setting this before calling ","type":"text"},{"code":"start","type":"codeVoice"},{"text":" will cause the animation to be seeded with that velocity, and then the velocity may change over time.","type":"text"}],"title":"velocity","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/velocity","url":"\/documentation\/motion\/valueanimation\/velocity"},"doc://Motion/documentation/Motion":{"type":"topic","abstract":[{"identifier":"Motion-Logo-Rendered","type":"image"}],"role":"collection","identifier":"doc:\/\/Motion\/documentation\/Motion","url":"\/documentation\/motion","kind":"symbol","title":"Motion"},"doc://Motion/documentation/Motion/ValueAnimation/toValue":{"url":"\/documentation\/motion\/valueanimation\/tovalue","abstract":[{"text":"The target value to animate towards.","type":"text"}],"title":"toValue","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"toValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"}],"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/toValue"},"doc://Motion/documentation/Motion/BasicAnimation":{"title":"BasicAnimation","identifier":"doc:\/\/Motion\/documentation\/Motion\/BasicAnimation","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicAnimation"}],"url":"\/documentation\/motion\/basicanimation","abstract":[{"text":"This class provides the ability to animate types that conform to ","type":"text"},{"type":"codeVoice","code":"Value"},{"text":" based on basic curves (i.e. ","type":"text"},{"type":"codeVoice","code":"EasingFunction.easeIn"},{"type":"text","text":", "},{"code":"EasingFunction.easeInOut","type":"codeVoice"},{"type":"text","text":", etc.)."}],"kind":"symbol","navigatorTitle":[{"text":"BasicAnimation","kind":"identifier"}],"role":"symbol"},"doc://Motion/documentation/Motion/ValueAnimation/supportsVelocity":{"url":"\/documentation\/motion\/valueanimation\/supportsvelocity","title":"supportsVelocity","abstract":[{"text":"Returns whether or not this class supports velocity.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/supportsVelocity","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"supportsVelocity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"role":"symbol"},"doc://Motion/documentation/Motion/Animation":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Animation"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/Animation","kind":"symbol","type":"topic","navigatorTitle":[{"text":"Animation","kind":"identifier"}],"url":"\/documentation\/motion\/animation","title":"Animation","abstract":[{"text":"This class acts as the base class for all animations within ","type":"text"},{"type":"codeVoice","code":"Motion"},{"text":". It doesn’t do much, other than serve as a base class for all animations to inherit from and implement.","type":"text"}]},"doc://Motion/documentation/Motion/ValueAnimation/value":{"url":"\/documentation\/motion\/valueanimation\/value","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/value","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"value","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}],"abstract":[],"title":"value","kind":"symbol"},"doc://Motion/documentation/Motion/SpringAnimation":{"navigatorTitle":[{"text":"SpringAnimation","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"This class provides the ability to animate "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" using a physically-modeled spring."}],"title":"SpringAnimation","identifier":"doc:\/\/Motion\/documentation\/Motion\/SpringAnimation","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SpringAnimation"}],"url":"\/documentation\/motion\/springanimation","role":"symbol"},"doc://Motion/SQ":{"identifier":"doc:\/\/Motion\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://Motion/documentation/Motion/ValueAnimation/updateValue(to:postValueChanged:)":{"kind":"symbol","url":"\/documentation\/motion\/valueanimation\/updatevalue(to:postvaluechanged:)","type":"topic","title":"updateValue(to:postValueChanged:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"updateValue","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"postValueChanged","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"abstract":[{"text":"Updates ","type":"text"},{"code":"value","type":"codeVoice"},{"type":"text","text":" to the supplied value and optionally invokes "},{"code":"onValueChanged","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/updateValue(to:postValueChanged:)"},"doc://Motion/documentation/Motion/ValueAnimation/Equatable-Implementations":{"url":"\/documentation\/motion\/valueanimation\/equatable-implementations","abstract":[],"title":"Equatable Implementations","type":"topic","role":"collectionGroup","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Equatable-Implementations","kind":"article"},"doc://Motion/documentation/Motion/ValueAnimation/stop(resolveImmediately:postValueChanged:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"stop","kind":"identifier"},{"kind":"text","text":"("},{"text":"resolveImmediately","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"postValueChanged","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"url":"\/documentation\/motion\/valueanimation\/stop(resolveimmediately:postvaluechanged:)","abstract":[{"type":"text","text":"Stops the animation immediately and preserves the last set "},{"type":"codeVoice","code":"value"},{"type":"text","text":". This is unlike CoreAnimation where the model and presentation layers get get mismatched."}],"role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/stop(resolveImmediately:postValueChanged:)","type":"topic","title":"stop(resolveImmediately:postValueChanged:)"},"doc://Motion/documentation/Motion/ValueAnimation/ValueChangedCallback":{"url":"\/documentation\/motion\/valueanimation\/valuechangedcallback","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback","type":"topic","title":"ValueAnimation.ValueChangedCallback","kind":"symbol","abstract":[{"type":"text","text":"A block to be called when "},{"type":"codeVoice","code":"value"},{"text":" changes.","type":"text"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ValueChangedCallback"}],"navigatorTitle":[{"text":"ValueChangedCallback","kind":"identifier"}]},"doc://Motion/documentation/Motion/DecayAnimation":{"kind":"symbol","url":"\/documentation\/motion\/decayanimation","title":"DecayAnimation","navigatorTitle":[{"text":"DecayAnimation","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Motion\/documentation\/Motion\/DecayAnimation","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DecayAnimation"}],"abstract":[{"text":"This class provides the ability to animate types that conform to ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" based on decay functions."}]},"doc://Motion/documentation/Motion/ValueAnimation/resolvingEpsilon":{"url":"\/documentation\/motion\/valueanimation\/resolvingepsilon","abstract":[{"text":"The default tolerance level for an animation to be considered finished.","type":"text"}],"title":"resolvingEpsilon","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"resolvingEpsilon"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SIMDType","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"EpsilonType","kind":"typeIdentifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/resolvingEpsilon","kind":"symbol"}}}