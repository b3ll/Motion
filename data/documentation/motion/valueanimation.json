{"hierarchy":{"paths":[["doc:\/\/Motion\/documentation\/Motion"]]},"kind":"symbol","sections":[],"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/resolvingEpsilon","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/toValue","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/value","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/velocity"]},{"title":"Instance Methods","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/stop(resolveImmediately:postValueChanged:)","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/updateValue(to:postValueChanged:)"]},{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback"],"title":"Type Aliases"},{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/supportsVelocity"],"title":"Type Properties"},{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Equatable-Implementations","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Hashable-Implementations"],"generated":true,"title":"Default Implementations"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValueAnimation","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/Motion\/documentation\/Motion\/SIMDRepresentable","preciseIdentifier":"s:6Motion17SIMDRepresentableP","text":"SIMDRepresentable","kind":"typeIdentifier"}]}]},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"inlineContent":[{"text":"The interesting part of this is the ability to have animations on the value performed simultaneously using ","type":"text"},{"type":"codeVoice","code":"simd"},{"text":" registers.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"i.e. a "},{"code":"CGRect","type":"codeVoice"},{"type":"text","text":" thatâ€™s animating will have all of its values animated simultaneously (vs. each value being animated sequentially), which should be more performant."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is normally accomplished by setting an initial state for the animation ("},{"type":"codeVoice","code":"value"},{"type":"text","text":") and then setting a target ("},{"code":"toValue","type":"codeVoice"},{"type":"text","text":") to animate to."}]},{"inlineContent":[{"text":"This class, when ticked, will change a value and emit changes to that value via ","type":"text"},{"type":"codeVoice","code":"onValueChanged"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"If you wish to update the value manually, you may also do so via ","type":"text"},{"type":"codeVoice","code":"updateValue(to:postValueChanged:)"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"When resolved, this class will optionally call the ","type":"text"},{"type":"codeVoice","code":"completionBlock"},{"type":"text","text":"."}],"type":"paragraph"},{"style":"note","name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The base implementation of this class is not meant to be used on its own, rather subclasses provided are to be used."}]}]},{"name":"Note","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"This class is ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"not"}]},{"text":" thread-safe. It is meant to be run on the ","type":"text"},{"inlineContent":[{"text":"main thread","type":"text"}],"type":"strong"},{"type":"text","text":" only (much like any AppKit \/ UIKit operations should be main threaded)."}]}]},{"name":"See Also","content":[{"inlineContent":[{"type":"text","text":""},{"code":"BasicAnimation","type":"codeVoice"},{"type":"text","text":", "},{"code":"DecayAnimation","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"SpringAnimation"},{"type":"text","text":"."}],"type":"paragraph"}],"type":"aside","style":"note"}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"relationshipsSections":[{"type":"inheritsFrom","identifiers":["doc:\/\/Motion\/documentation\/Motion\/Animation"],"kind":"relationships","title":"Inherits From"},{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/BasicAnimation","doc:\/\/Motion\/documentation\/Motion\/DecayAnimation","doc:\/\/Motion\/documentation\/Motion\/SpringAnimation"],"kind":"relationships","type":"inheritedBy","title":"Inherited By"},{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/Motion\/SQ","doc:\/\/Motion\/SH"],"kind":"relationships"}],"abstract":[{"type":"text","text":"This class provides the ability to animate changes to values ("},{"code":"Value","type":"codeVoice"},{"text":") over time.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation"},"metadata":{"externalID":"s:6Motion14ValueAnimationC","modules":[{"name":"Motion"}],"title":"ValueAnimation","symbolKind":"class","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ValueAnimation"}],"roleHeading":"Class","navigatorTitle":[{"text":"ValueAnimation","kind":"identifier"}]},"variants":[{"paths":["\/documentation\/motion\/valueanimation"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Motion/documentation/Motion/ValueAnimation/resolvingEpsilon":{"title":"resolvingEpsilon","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/resolvingEpsilon","kind":"symbol","url":"\/documentation\/motion\/valueanimation\/resolvingepsilon","type":"topic","abstract":[{"text":"The default tolerance level for an animation to be considered finished.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"resolvingEpsilon","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":".","kind":"text"},{"text":"SIMDType","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"EpsilonType"}],"role":"symbol"},"doc://Motion/documentation/Motion/ValueAnimation/Equatable-Implementations":{"abstract":[],"title":"Equatable Implementations","kind":"article","url":"\/documentation\/motion\/valueanimation\/equatable-implementations","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Equatable-Implementations","type":"topic","role":"collectionGroup"},"doc://Motion/documentation/Motion/SIMDRepresentable":{"role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"text":"SIMDRepresentable","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SIMDRepresentable"}],"url":"\/documentation\/motion\/simdrepresentable","title":"SIMDRepresentable","identifier":"doc:\/\/Motion\/documentation\/Motion\/SIMDRepresentable","abstract":[{"text":"A protocol that defines how something that can be represented \/ stored in a ","type":"text"},{"type":"codeVoice","code":"SIMD"},{"type":"text","text":" type as well as instantiated from said "},{"type":"codeVoice","code":"SIMD"},{"text":" type.","type":"text"}]},"doc://Motion/documentation/Motion/ValueAnimation":{"url":"\/documentation\/motion\/valueanimation","title":"ValueAnimation","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValueAnimation","kind":"identifier"}],"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ValueAnimation"}],"abstract":[{"type":"text","text":"This class provides the ability to animate changes to values ("},{"type":"codeVoice","code":"Value"},{"type":"text","text":") over time."}]},"doc://Motion/documentation/Motion/ValueAnimation/stop(resolveImmediately:postValueChanged:)":{"abstract":[{"type":"text","text":"Stops the animation immediately and preserves the last set "},{"code":"value","type":"codeVoice"},{"text":". This is unlike CoreAnimation where the model and presentation layers get get mismatched.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"stop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"resolveImmediately","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"postValueChanged"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/stop(resolveImmediately:postValueChanged:)","role":"symbol","url":"\/documentation\/motion\/valueanimation\/stop(resolveimmediately:postvaluechanged:)","kind":"symbol","type":"topic","title":"stop(resolveImmediately:postValueChanged:)"},"doc://Motion/documentation/Motion/SpringAnimation":{"abstract":[{"text":"This class provides the ability to animate ","type":"text"},{"type":"codeVoice","code":"Value"},{"text":" using a physically-modeled spring.","type":"text"}],"title":"SpringAnimation","kind":"symbol","url":"\/documentation\/motion\/springanimation","navigatorTitle":[{"text":"SpringAnimation","kind":"identifier"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/SpringAnimation","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"SpringAnimation","kind":"identifier"}]},"doc://Motion/documentation/Motion/ValueAnimation/supportsVelocity":{"title":"supportsVelocity","type":"topic","url":"\/documentation\/motion\/valueanimation\/supportsvelocity","role":"symbol","kind":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/supportsVelocity","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"supportsVelocity"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Returns whether or not this class supports velocity."}]},"doc://Motion/documentation/Motion/ValueAnimation/Hashable-Implementations":{"type":"topic","abstract":[],"kind":"article","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Hashable-Implementations","role":"collectionGroup","title":"Hashable Implementations","url":"\/documentation\/motion\/valueanimation\/hashable-implementations"},"doc://Motion/documentation/Motion/Animation":{"type":"topic","identifier":"doc:\/\/Motion\/documentation\/Motion\/Animation","abstract":[{"text":"This class acts as the base class for all animations within ","type":"text"},{"type":"codeVoice","code":"Motion"},{"type":"text","text":". It doesnâ€™t do much, other than serve as a base class for all animations to inherit from and implement."}],"url":"\/documentation\/motion\/animation","kind":"symbol","role":"symbol","title":"Animation","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Animation"}],"navigatorTitle":[{"kind":"identifier","text":"Animation"}]},"doc://Motion/documentation/Motion/ValueAnimation/updateValue(to:postValueChanged:)":{"url":"\/documentation\/motion\/valueanimation\/updatevalue(to:postvaluechanged:)","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/updateValue(to:postValueChanged:)","title":"updateValue(to:postValueChanged:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"updateValue"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"text":"postValueChanged","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Updates "},{"type":"codeVoice","code":"value"},{"type":"text","text":" to the supplied value and optionally invokes "},{"code":"onValueChanged","type":"codeVoice"},{"type":"text","text":"."}]},"doc://Motion/SH":{"identifier":"doc:\/\/Motion\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://Motion/documentation/Motion/ValueAnimation/toValue":{"abstract":[{"type":"text","text":"The target value to animate towards."}],"title":"toValue","kind":"symbol","url":"\/documentation\/motion\/valueanimation\/tovalue","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/toValue","type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"toValue","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"}]},"doc://Motion/documentation/Motion/ValueAnimation/onValueChanged(disableActions:_:)":{"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"onValueChanged","kind":"identifier"},{"text":"(","kind":"text"},{"text":"disableActions","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"ValueAnimation","kind":"typeIdentifier","preciseIdentifier":"s:6Motion14ValueAnimationC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":">.","kind":"text"},{"text":"ValueChangedCallback","kind":"typeIdentifier","preciseIdentifier":"s:6Motion14ValueAnimationC0B15ChangedCallbacka"},{"text":"?)","kind":"text"}],"url":"\/documentation\/motion\/valueanimation\/onvaluechanged(disableactions:_:)","type":"topic","title":"onValueChanged(disableActions:_:)","abstract":[{"type":"text","text":"Call this to register a "},{"type":"codeVoice","code":"ValueChangedCallback"},{"type":"text","text":" block that will be called anytime "},{"type":"codeVoice","code":"value"},{"text":" changes from ","type":"text"},{"type":"codeVoice","code":"tick"},{"type":"text","text":" or if explicitly specified via "},{"code":"postValueChanged","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"When called, it will give the new value that "},{"type":"codeVoice","code":"value"},{"text":" has animated to (since the last invocation).","type":"text"},{"type":"text","text":" "},{"text":"If youâ€™re animating ","type":"text"},{"code":"CALayer","type":"codeVoice"},{"type":"text","text":" objects from the block, you may supply "},{"code":"true","type":"codeVoice"},{"type":"text","text":" for "},{"code":"disableActions","type":"codeVoice"},{"type":"text","text":" to automatically have this wrapped in a "},{"code":"CATransaction","type":"codeVoice"},{"type":"text","text":" that disables implicit animations for the layer."}]},"doc://Motion/documentation/Motion/DecayAnimation":{"title":"DecayAnimation","identifier":"doc:\/\/Motion\/documentation\/Motion\/DecayAnimation","kind":"symbol","url":"\/documentation\/motion\/decayanimation","navigatorTitle":[{"kind":"identifier","text":"DecayAnimation"}],"type":"topic","abstract":[{"text":"This class provides the ability to animate types that conform to ","type":"text"},{"type":"codeVoice","code":"Value"},{"text":" based on decay functions.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DecayAnimation"}],"role":"symbol"},"doc://Motion/documentation/Motion/ValueAnimation/velocity":{"kind":"symbol","title":"velocity","type":"topic","url":"\/documentation\/motion\/valueanimation\/velocity","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"velocity","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}],"abstract":[{"type":"text","text":"The velocity of the animation. Setting this before calling "},{"code":"start","type":"codeVoice"},{"text":" will cause the animation to be seeded with that velocity, and then the velocity may change over time.","type":"text"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/velocity"},"doc://Motion/documentation/Motion/ValueAnimation/value":{"type":"topic","role":"symbol","url":"\/documentation\/motion\/valueanimation\/value","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"value","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/value","abstract":[],"title":"value","kind":"symbol"},"doc://Motion/documentation/Motion":{"kind":"symbol","type":"topic","url":"\/documentation\/motion","abstract":[{"type":"image","identifier":"Motion-Logo-Rendered"}],"role":"collection","identifier":"doc:\/\/Motion\/documentation\/Motion","title":"Motion"},"doc://Motion/SQ":{"identifier":"doc:\/\/Motion\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://Motion/documentation/Motion/BasicAnimation":{"title":"BasicAnimation","identifier":"doc:\/\/Motion\/documentation\/Motion\/BasicAnimation","kind":"symbol","url":"\/documentation\/motion\/basicanimation","navigatorTitle":[{"text":"BasicAnimation","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"This class provides the ability to animate types that conform to "},{"code":"Value","type":"codeVoice"},{"text":" based on basic curves (i.e. ","type":"text"},{"type":"codeVoice","code":"EasingFunction.easeIn"},{"type":"text","text":", "},{"code":"EasingFunction.easeInOut","type":"codeVoice"},{"text":", etc.).","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicAnimation"}],"role":"symbol"},"doc://Motion/documentation/Motion/ValueAnimation/ValueChangedCallback":{"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"ValueChangedCallback","kind":"identifier"}],"navigatorTitle":[{"text":"ValueChangedCallback","kind":"identifier"}],"url":"\/documentation\/motion\/valueanimation\/valuechangedcallback","type":"topic","abstract":[{"type":"text","text":"A block to be called when "},{"type":"codeVoice","code":"value"},{"text":" changes.","type":"text"}],"title":"ValueAnimation.ValueChangedCallback"}}}