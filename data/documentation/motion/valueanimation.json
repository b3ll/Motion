{"schemaVersion":{"major":0,"patch":0,"minor":3},"topicSections":[{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/resolvingEpsilon","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/toValue","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/value","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/velocity"],"title":"Instance Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/stop(resolveImmediately:postValueChanged:)","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/updateValue(to:postValueChanged:)"]},{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback"],"title":"Type Aliases"},{"title":"Type Properties","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/supportsVelocity"]},{"title":"Default Implementations","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Equatable-Implementations","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Hashable-Implementations"],"generated":true}],"abstract":[{"type":"text","text":"This class provides the ability to animate changes to values ("},{"code":"Value","type":"codeVoice"},{"text":") over time.","type":"text"}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ValueAnimation","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"SIMDRepresentable","identifier":"doc:\/\/Motion\/documentation\/Motion\/SIMDRepresentable","preciseIdentifier":"s:6Motion17SIMDRepresentableP","kind":"typeIdentifier"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"inlineContent":[{"type":"text","text":"The interesting part of this is the ability to have animations on the value performed simultaneously using "},{"code":"simd","type":"codeVoice"},{"text":" registers.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"i.e. a ","type":"text"},{"type":"codeVoice","code":"CGRect"},{"type":"text","text":" thatâ€™s animating will have all of its values animated simultaneously (vs. each value being animated sequentially), which should be more performant."}],"type":"paragraph"},{"inlineContent":[{"text":"This is normally accomplished by setting an initial state for the animation (","type":"text"},{"code":"value","type":"codeVoice"},{"type":"text","text":") and then setting a target ("},{"type":"codeVoice","code":"toValue"},{"type":"text","text":") to animate to."}],"type":"paragraph"},{"inlineContent":[{"text":"This class, when ticked, will change a value and emit changes to that value via ","type":"text"},{"type":"codeVoice","code":"onValueChanged"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"If you wish to update the value manually, you may also do so via ","type":"text"},{"type":"codeVoice","code":"updateValue(to:postValueChanged:)"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"When resolved, this class will optionally call the ","type":"text"},{"code":"completionBlock","type":"codeVoice"},{"text":".","type":"text"}]},{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"The base implementation of this class is not meant to be used on its own, rather subclasses provided are to be used.","type":"text"}]}],"style":"note","type":"aside"},{"style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"This class is ","type":"text"},{"inlineContent":[{"text":"not","type":"text"}],"type":"strong"},{"text":" thread-safe. It is meant to be run on the ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"main thread"}]},{"text":" only (much like any AppKit \/ UIKit operations should be main threaded).","type":"text"}]}],"type":"aside"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"BasicAnimation"},{"type":"text","text":", "},{"code":"DecayAnimation","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"SpringAnimation"},{"type":"text","text":"."}]}],"name":"See Also","type":"aside","style":"note"}]}],"variants":[{"paths":["\/documentation\/motion\/valueanimation"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"ValueAnimation","roleHeading":"Class","role":"symbol","modules":[{"name":"Motion"}],"navigatorTitle":[{"kind":"identifier","text":"ValueAnimation"}],"symbolKind":"class","externalID":"s:6Motion14ValueAnimationC","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueAnimation"}]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation"},"relationshipsSections":[{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/Animation"],"kind":"relationships","type":"inheritsFrom","title":"Inherits From"},{"kind":"relationships","title":"Inherited By","identifiers":["doc:\/\/Motion\/documentation\/Motion\/BasicAnimation","doc:\/\/Motion\/documentation\/Motion\/DecayAnimation","doc:\/\/Motion\/documentation\/Motion\/SpringAnimation"],"type":"inheritedBy"},{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/Motion\/SQ","doc:\/\/Motion\/SH"],"kind":"relationships"}],"hierarchy":{"paths":[["doc:\/\/Motion\/documentation\/Motion"]]},"references":{"doc://Motion/documentation/Motion/ValueAnimation/ValueChangedCallback":{"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback","abstract":[{"type":"text","text":"A block to be called when "},{"type":"codeVoice","code":"value"},{"text":" changes.","type":"text"}],"role":"symbol","url":"\/documentation\/motion\/valueanimation\/valuechangedcallback","kind":"symbol","title":"ValueAnimation.ValueChangedCallback","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValueChangedCallback","kind":"identifier"}],"navigatorTitle":[{"text":"ValueChangedCallback","kind":"identifier"}],"type":"topic"},"doc://Motion/documentation/Motion/ValueAnimation/toValue":{"title":"toValue","url":"\/documentation\/motion\/valueanimation\/tovalue","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/toValue","abstract":[{"text":"The target value to animate towards.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"toValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"}],"type":"topic"},"doc://Motion/documentation/Motion/ValueAnimation/Hashable-Implementations":{"title":"Hashable Implementations","url":"\/documentation\/motion\/valueanimation\/hashable-implementations","role":"collectionGroup","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Hashable-Implementations","abstract":[],"kind":"article","type":"topic"},"doc://Motion/documentation/Motion/ValueAnimation":{"abstract":[{"text":"This class provides the ability to animate changes to values (","type":"text"},{"type":"codeVoice","code":"Value"},{"type":"text","text":") over time."}],"role":"symbol","url":"\/documentation\/motion\/valueanimation","navigatorTitle":[{"text":"ValueAnimation","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ValueAnimation"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation","kind":"symbol","title":"ValueAnimation","type":"topic"},"doc://Motion/documentation/Motion":{"identifier":"doc:\/\/Motion\/documentation\/Motion","title":"Motion","abstract":[{"type":"image","identifier":"Motion-Logo-Rendered"}],"type":"topic","url":"\/documentation\/motion","kind":"symbol","role":"collection"},"doc://Motion/documentation/Motion/ValueAnimation/stop(resolveImmediately:postValueChanged:)":{"title":"stop(resolveImmediately:postValueChanged:)","url":"\/documentation\/motion\/valueanimation\/stop(resolveimmediately:postvaluechanged:)","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/stop(resolveImmediately:postValueChanged:)","abstract":[{"type":"text","text":"Stops the animation immediately and preserves the last set "},{"type":"codeVoice","code":"value"},{"type":"text","text":". This is unlike CoreAnimation where the model and presentation layers get get mismatched."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"stop","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"resolveImmediately"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", "},{"text":"postValueChanged","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":")"}],"type":"topic"},"doc://Motion/documentation/Motion/SpringAnimation":{"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SpringAnimation","kind":"identifier"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/SpringAnimation","role":"symbol","url":"\/documentation\/motion\/springanimation","abstract":[{"type":"text","text":"This class provides the ability to animate "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" using a physically-modeled spring."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"SpringAnimation"}],"title":"SpringAnimation"},"doc://Motion/documentation/Motion/ValueAnimation/Equatable-Implementations":{"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Equatable-Implementations","abstract":[],"role":"collectionGroup","url":"\/documentation\/motion\/valueanimation\/equatable-implementations","kind":"article","title":"Equatable Implementations","type":"topic"},"doc://Motion/SH":{"identifier":"doc:\/\/Motion\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://Motion/documentation/Motion/ValueAnimation/supportsVelocity":{"title":"supportsVelocity","url":"\/documentation\/motion\/valueanimation\/supportsvelocity","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/supportsVelocity","abstract":[{"text":"Returns whether or not this class supports velocity.","type":"text"}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"supportsVelocity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic"},"doc://Motion/documentation/Motion/ValueAnimation/value":{"type":"topic","role":"symbol","title":"value","kind":"symbol","url":"\/documentation\/motion\/valueanimation\/value","abstract":[],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/value","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"value"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}]},"doc://Motion/documentation/Motion/ValueAnimation/velocity":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"velocity","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}],"url":"\/documentation\/motion\/valueanimation\/velocity","title":"velocity","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/velocity","type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The velocity of the animation. Setting this before calling "},{"type":"codeVoice","code":"start"},{"type":"text","text":" will cause the animation to be seeded with that velocity, and then the velocity may change over time."}]},"doc://Motion/documentation/Motion/ValueAnimation/resolvingEpsilon":{"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/resolvingEpsilon","abstract":[{"text":"The default tolerance level for an animation to be considered finished.","type":"text"}],"role":"symbol","url":"\/documentation\/motion\/valueanimation\/resolvingepsilon","kind":"symbol","title":"resolvingEpsilon","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"resolvingEpsilon","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SIMDType","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"EpsilonType"}],"type":"topic"},"doc://Motion/documentation/Motion/Animation":{"title":"Animation","navigatorTitle":[{"text":"Animation","kind":"identifier"}],"abstract":[{"text":"This class acts as the base class for all animations within ","type":"text"},{"type":"codeVoice","code":"Motion"},{"type":"text","text":". It doesnâ€™t do much, other than serve as a base class for all animations to inherit from and implement."}],"type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Animation","kind":"identifier"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/Animation","url":"\/documentation\/motion\/animation"},"doc://Motion/documentation/Motion/ValueAnimation/onValueChanged(disableActions:_:)":{"title":"onValueChanged(disableActions:_:)","url":"\/documentation\/motion\/valueanimation\/onvaluechanged(disableactions:_:)","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)","abstract":[{"type":"text","text":"Call this to register a "},{"type":"codeVoice","code":"ValueChangedCallback"},{"type":"text","text":" block that will be called anytime "},{"type":"codeVoice","code":"value"},{"text":" changes from ","type":"text"},{"type":"codeVoice","code":"tick"},{"type":"text","text":" or if explicitly specified via "},{"code":"postValueChanged","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"When called, it will give the new value that "},{"type":"codeVoice","code":"value"},{"type":"text","text":" has animated to (since the last invocation)."},{"type":"text","text":" "},{"type":"text","text":"If youâ€™re animating "},{"type":"codeVoice","code":"CALayer"},{"text":" objects from the block, you may supply ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" for ","type":"text"},{"code":"disableActions","type":"codeVoice"},{"type":"text","text":" to automatically have this wrapped in a "},{"code":"CATransaction","type":"codeVoice"},{"text":" that disables implicit animations for the layer.","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"onValueChanged"},{"kind":"text","text":"("},{"text":"disableActions","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ValueAnimation","preciseIdentifier":"s:6Motion14ValueAnimationC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"ValueChangedCallback","preciseIdentifier":"s:6Motion14ValueAnimationC0B15ChangedCallbacka"},{"kind":"text","text":"?)"}],"type":"topic"},"doc://Motion/SQ":{"type":"unresolvable","identifier":"doc:\/\/Motion\/SQ","title":"Swift.Equatable"},"doc://Motion/documentation/Motion/SIMDRepresentable":{"kind":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/SIMDRepresentable","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SIMDRepresentable"}],"type":"topic","url":"\/documentation\/motion\/simdrepresentable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SIMDRepresentable","kind":"identifier"}],"abstract":[{"text":"A protocol that defines how something that can be represented \/ stored in a ","type":"text"},{"code":"SIMD","type":"codeVoice"},{"type":"text","text":" type as well as instantiated from said "},{"type":"codeVoice","code":"SIMD"},{"text":" type.","type":"text"}],"title":"SIMDRepresentable"},"doc://Motion/documentation/Motion/DecayAnimation":{"navigatorTitle":[{"text":"DecayAnimation","kind":"identifier"}],"type":"topic","url":"\/documentation\/motion\/decayanimation","kind":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/DecayAnimation","title":"DecayAnimation","role":"symbol","abstract":[{"type":"text","text":"This class provides the ability to animate types that conform to "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" based on decay functions."}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DecayAnimation"}]},"doc://Motion/documentation/Motion/BasicAnimation":{"url":"\/documentation\/motion\/basicanimation","title":"BasicAnimation","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/BasicAnimation","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"BasicAnimation","kind":"identifier"}],"navigatorTitle":[{"text":"BasicAnimation","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"This class provides the ability to animate types that conform to "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" based on basic curves (i.e. "},{"type":"codeVoice","code":"EasingFunction.easeIn"},{"text":", ","type":"text"},{"code":"EasingFunction.easeInOut","type":"codeVoice"},{"type":"text","text":", etc.)."}]},"doc://Motion/documentation/Motion/ValueAnimation/updateValue(to:postValueChanged:)":{"url":"\/documentation\/motion\/valueanimation\/updatevalue(to:postvaluechanged:)","title":"updateValue(to:postValueChanged:)","abstract":[{"text":"Updates ","type":"text"},{"type":"codeVoice","code":"value"},{"type":"text","text":" to the supplied value and optionally invokes "},{"type":"codeVoice","code":"onValueChanged"},{"type":"text","text":"."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/updateValue(to:postValueChanged:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"updateValue","kind":"identifier"},{"kind":"text","text":"("},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"text":"postValueChanged","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic"}}}