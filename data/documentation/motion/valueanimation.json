{"identifier":{"url":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/resolvingEpsilon","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/toValue","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/value","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/velocity"],"title":"Instance Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/stop(resolveImmediately:postValueChanged:)","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/updateValue(to:postValueChanged:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback"]},{"title":"Type Properties","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/supportsVelocity"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Equatable-Implementations","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Hashable-Implementations"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Motion\/documentation\/Motion"]]},"variants":[{"paths":["\/documentation\/motion\/valueanimation"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"abstract":[{"text":"This class provides the ability to animate changes to values (","type":"text"},{"type":"codeVoice","code":"Value"},{"type":"text","text":") over time."}],"relationshipsSections":[{"type":"inheritsFrom","identifiers":["doc:\/\/Motion\/documentation\/Motion\/Animation"],"kind":"relationships","title":"Inherits From"},{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/BasicAnimation","doc:\/\/Motion\/documentation\/Motion\/DecayAnimation","doc:\/\/Motion\/documentation\/Motion\/SpringAnimation"],"kind":"relationships","title":"Inherited By","type":"inheritedBy"},{"title":"Conforms To","identifiers":["doc:\/\/Motion\/SQ","doc:\/\/Motion\/SH"],"type":"conformsTo","kind":"relationships"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ValueAnimation"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"text":" : ","kind":"text"},{"text":"SIMDRepresentable","identifier":"doc:\/\/Motion\/documentation\/Motion\/SIMDRepresentable","kind":"typeIdentifier","preciseIdentifier":"s:6Motion17SIMDRepresentableP"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"inlineContent":[{"type":"text","text":"The interesting part of this is the ability to have animations on the value performed simultaneously using "},{"code":"simd","type":"codeVoice"},{"text":" registers.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"i.e. a ","type":"text"},{"type":"codeVoice","code":"CGRect"},{"type":"text","text":" thatâ€™s animating will have all of its values animated simultaneously (vs. each value being animated sequentially), which should be more performant."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This is normally accomplished by setting an initial state for the animation ("},{"type":"codeVoice","code":"value"},{"text":") and then setting a target (","type":"text"},{"type":"codeVoice","code":"toValue"},{"type":"text","text":") to animate to."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This class, when ticked, will change a value and emit changes to that value via "},{"type":"codeVoice","code":"onValueChanged"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If you wish to update the value manually, you may also do so via "},{"code":"updateValue(to:postValueChanged:)","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"When resolved, this class will optionally call the ","type":"text"},{"code":"completionBlock","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"aside","content":[{"inlineContent":[{"text":"The base implementation of this class is not meant to be used on its own, rather subclasses provided are to be used.","type":"text"}],"type":"paragraph"}],"name":"Note","style":"note"},{"type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"This class is "},{"inlineContent":[{"type":"text","text":"not"}],"type":"strong"},{"text":" thread-safe. It is meant to be run on the ","type":"text"},{"inlineContent":[{"type":"text","text":"main thread"}],"type":"strong"},{"text":" only (much like any AppKit \/ UIKit operations should be main threaded).","type":"text"}],"type":"paragraph"}],"name":"Note"},{"type":"aside","name":"See Also","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"BasicAnimation","type":"codeVoice"},{"text":", ","type":"text"},{"code":"DecayAnimation","type":"codeVoice"},{"text":", ","type":"text"},{"code":"SpringAnimation","type":"codeVoice"},{"type":"text","text":"."}]}]}]}],"metadata":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueAnimation"}],"externalID":"s:6Motion14ValueAnimationC","modules":[{"name":"Motion"}],"role":"symbol","symbolKind":"class","title":"ValueAnimation","roleHeading":"Class","navigatorTitle":[{"text":"ValueAnimation","kind":"identifier"}]},"references":{"doc://Motion/SH":{"title":"Swift.Hashable","type":"unresolvable","identifier":"doc:\/\/Motion\/SH"},"doc://Motion/documentation/Motion/ValueAnimation/Equatable-Implementations":{"type":"topic","url":"\/documentation\/motion\/valueanimation\/equatable-implementations","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Equatable-Implementations","role":"collectionGroup","abstract":[],"kind":"article","title":"Equatable Implementations"},"doc://Motion/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/Motion\/SQ"},"doc://Motion/documentation/Motion/ValueAnimation/updateValue(to:postValueChanged:)":{"type":"topic","url":"\/documentation\/motion\/valueanimation\/updatevalue(to:postvaluechanged:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"updateValue","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"postValueChanged","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/updateValue(to:postValueChanged:)","role":"symbol","abstract":[{"text":"Updates ","type":"text"},{"type":"codeVoice","code":"value"},{"type":"text","text":" to the supplied value and optionally invokes "},{"code":"onValueChanged","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","title":"updateValue(to:postValueChanged:)"},"doc://Motion/documentation/Motion/ValueAnimation/supportsVelocity":{"url":"\/documentation\/motion\/valueanimation\/supportsvelocity","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"supportsVelocity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/supportsVelocity","role":"symbol","abstract":[{"text":"Returns whether or not this class supports velocity.","type":"text"}],"kind":"symbol","title":"supportsVelocity"},"doc://Motion/documentation/Motion/BasicAnimation":{"abstract":[{"type":"text","text":"This class provides the ability to animate types that conform to "},{"code":"Value","type":"codeVoice"},{"text":" based on basic curves (i.e. ","type":"text"},{"code":"EasingFunction.easeIn","type":"codeVoice"},{"type":"text","text":", "},{"code":"EasingFunction.easeInOut","type":"codeVoice"},{"type":"text","text":", etc.)."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/BasicAnimation","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"BasicAnimation","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BasicAnimation"}],"kind":"symbol","url":"\/documentation\/motion\/basicanimation","title":"BasicAnimation","type":"topic"},"doc://Motion/documentation/Motion":{"title":"Motion","abstract":[{"type":"image","identifier":"Motion-Logo-Rendered"}],"url":"\/documentation\/motion","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/Motion\/documentation\/Motion"},"doc://Motion/documentation/Motion/DecayAnimation":{"type":"topic","kind":"symbol","url":"\/documentation\/motion\/decayanimation","identifier":"doc:\/\/Motion\/documentation\/Motion\/DecayAnimation","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"DecayAnimation","kind":"identifier"}],"abstract":[{"type":"text","text":"This class provides the ability to animate types that conform to "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" based on decay functions."}],"navigatorTitle":[{"kind":"identifier","text":"DecayAnimation"}],"title":"DecayAnimation"},"doc://Motion/documentation/Motion/ValueAnimation/onValueChanged(disableActions:_:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"onValueChanged","kind":"identifier"},{"kind":"text","text":"("},{"text":"disableActions","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"text":"ValueAnimation","preciseIdentifier":"s:6Motion14ValueAnimationC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Motion14ValueAnimationC0B15ChangedCallbacka","text":"ValueChangedCallback"},{"kind":"text","text":"?)"}],"url":"\/documentation\/motion\/valueanimation\/onvaluechanged(disableactions:_:)","kind":"symbol","role":"symbol","title":"onValueChanged(disableActions:_:)","type":"topic","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)","abstract":[{"text":"Call this to register a ","type":"text"},{"code":"ValueChangedCallback","type":"codeVoice"},{"text":" block that will be called anytime ","type":"text"},{"type":"codeVoice","code":"value"},{"text":" changes from ","type":"text"},{"code":"tick","type":"codeVoice"},{"type":"text","text":" or if explicitly specified via "},{"code":"postValueChanged","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"When called, it will give the new value that "},{"code":"value","type":"codeVoice"},{"text":" has animated to (since the last invocation).","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"If youâ€™re animating "},{"type":"codeVoice","code":"CALayer"},{"text":" objects from the block, you may supply ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" for "},{"type":"codeVoice","code":"disableActions"},{"text":" to automatically have this wrapped in a ","type":"text"},{"code":"CATransaction","type":"codeVoice"},{"type":"text","text":" that disables implicit animations for the layer."}]},"doc://Motion/documentation/Motion/ValueAnimation/resolvingEpsilon":{"title":"resolvingEpsilon","type":"topic","url":"\/documentation\/motion\/valueanimation\/resolvingepsilon","abstract":[{"text":"The default tolerance level for an animation to be considered finished.","type":"text"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/resolvingEpsilon","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"resolvingEpsilon"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"SIMDType","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"EpsilonType","kind":"typeIdentifier"}],"kind":"symbol"},"doc://Motion/documentation/Motion/SIMDRepresentable":{"type":"topic","abstract":[{"type":"text","text":"A protocol that defines how something that can be represented \/ stored in a "},{"code":"SIMD","type":"codeVoice"},{"type":"text","text":" type as well as instantiated from said "},{"type":"codeVoice","code":"SIMD"},{"type":"text","text":" type."}],"kind":"symbol","navigatorTitle":[{"text":"SIMDRepresentable","kind":"identifier"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/SIMDRepresentable","role":"symbol","title":"SIMDRepresentable","url":"\/documentation\/motion\/simdrepresentable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SIMDRepresentable","kind":"identifier"}]},"doc://Motion/documentation/Motion/ValueAnimation":{"type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueAnimation"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation","kind":"symbol","url":"\/documentation\/motion\/valueanimation","abstract":[{"type":"text","text":"This class provides the ability to animate changes to values ("},{"code":"Value","type":"codeVoice"},{"text":") over time.","type":"text"}],"title":"ValueAnimation","navigatorTitle":[{"text":"ValueAnimation","kind":"identifier"}]},"doc://Motion/documentation/Motion/Animation":{"type":"topic","url":"\/documentation\/motion\/animation","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Animation"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/Animation","role":"symbol","abstract":[{"type":"text","text":"This class acts as the base class for all animations within "},{"type":"codeVoice","code":"Motion"},{"type":"text","text":". It doesnâ€™t do much, other than serve as a base class for all animations to inherit from and implement."}],"kind":"symbol","title":"Animation","navigatorTitle":[{"kind":"identifier","text":"Animation"}]},"doc://Motion/documentation/Motion/ValueAnimation/Hashable-Implementations":{"type":"topic","url":"\/documentation\/motion\/valueanimation\/hashable-implementations","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Hashable-Implementations","role":"collectionGroup","abstract":[],"kind":"article","title":"Hashable Implementations"},"doc://Motion/documentation/Motion/ValueAnimation/toValue":{"url":"\/documentation\/motion\/valueanimation\/tovalue","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"toValue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/toValue","role":"symbol","abstract":[{"text":"The target value to animate towards.","type":"text"}],"kind":"symbol","title":"toValue"},"doc://Motion/documentation/Motion/SpringAnimation":{"title":"SpringAnimation","type":"topic","abstract":[{"text":"This class provides the ability to animate ","type":"text"},{"type":"codeVoice","code":"Value"},{"text":" using a physically-modeled spring.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SpringAnimation"}],"kind":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/SpringAnimation","navigatorTitle":[{"text":"SpringAnimation","kind":"identifier"}],"url":"\/documentation\/motion\/springanimation","role":"symbol"},"doc://Motion/documentation/Motion/ValueAnimation/stop(resolveImmediately:postValueChanged:)":{"type":"topic","url":"\/documentation\/motion\/valueanimation\/stop(resolveimmediately:postvaluechanged:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stop"},{"text":"(","kind":"text"},{"text":"resolveImmediately","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"postValueChanged"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/stop(resolveImmediately:postValueChanged:)","role":"symbol","abstract":[{"text":"Stops the animation immediately and preserves the last set ","type":"text"},{"type":"codeVoice","code":"value"},{"text":". This is unlike CoreAnimation where the model and presentation layers get get mismatched.","type":"text"}],"kind":"symbol","title":"stop(resolveImmediately:postValueChanged:)"},"doc://Motion/documentation/Motion/ValueAnimation/value":{"url":"\/documentation\/motion\/valueanimation\/value","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"value"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/value","role":"symbol","abstract":[],"kind":"symbol","title":"value"},"doc://Motion/documentation/Motion/ValueAnimation/ValueChangedCallback":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ValueChangedCallback"}],"navigatorTitle":[{"text":"ValueChangedCallback","kind":"identifier"}],"url":"\/documentation\/motion\/valueanimation\/valuechangedcallback","kind":"symbol","role":"symbol","title":"ValueAnimation.ValueChangedCallback","type":"topic","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback","abstract":[{"text":"A block to be called when ","type":"text"},{"code":"value","type":"codeVoice"},{"text":" changes.","type":"text"}]},"doc://Motion/documentation/Motion/ValueAnimation/velocity":{"type":"topic","url":"\/documentation\/motion\/valueanimation\/velocity","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"velocity","kind":"identifier"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/velocity","role":"symbol","abstract":[{"text":"The velocity of the animation. Setting this before calling ","type":"text"},{"code":"start","type":"codeVoice"},{"text":" will cause the animation to be seeded with that velocity, and then the velocity may change over time.","type":"text"}],"kind":"symbol","title":"velocity"}}}