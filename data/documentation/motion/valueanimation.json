{"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","identifier":{"url":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValueAnimation","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Motion17SIMDRepresentableP","identifier":"doc:\/\/Motion\/documentation\/Motion\/SIMDRepresentable","text":"SIMDRepresentable"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"The interesting part of this is the ability to have animations on the value performed simultaneously using ","type":"text"},{"type":"codeVoice","code":"simd"},{"type":"text","text":" registers."}]},{"inlineContent":[{"text":"i.e. a ","type":"text"},{"type":"codeVoice","code":"CGRect"},{"type":"text","text":" thatâ€™s animating will have all of its values animated simultaneously (vs. each value being animated sequentially), which should be more performant."}],"type":"paragraph"},{"inlineContent":[{"text":"This is normally accomplished by setting an initial state for the animation (","type":"text"},{"type":"codeVoice","code":"value"},{"type":"text","text":") and then setting a target ("},{"code":"toValue","type":"codeVoice"},{"text":") to animate to.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"This class, when ticked, will change a value and emit changes to that value via ","type":"text"},{"type":"codeVoice","code":"onValueChanged"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"If you wish to update the value manually, you may also do so via ","type":"text"},{"code":"updateValue(to:postValueChanged:)","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"When resolved, this class will optionally call the "},{"type":"codeVoice","code":"completionBlock"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"aside","content":[{"inlineContent":[{"text":"The base implementation of this class is not meant to be used on its own, rather subclasses provided are to be used.","type":"text"}],"type":"paragraph"}],"name":"Note","style":"note"},{"content":[{"type":"paragraph","inlineContent":[{"text":"This class is ","type":"text"},{"type":"strong","inlineContent":[{"text":"not","type":"text"}]},{"text":" thread-safe. It is meant to be run on the ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"main thread"}]},{"type":"text","text":" only (much like any AppKit \/ UIKit operations should be main threaded)."}]}],"type":"aside","style":"note","name":"Note"},{"name":"See Also","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"BasicAnimation","type":"codeVoice"},{"text":", ","type":"text"},{"code":"DecayAnimation","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"SpringAnimation"},{"text":".","type":"text"}]}]}]}],"abstract":[{"type":"text","text":"This class provides the ability to animate changes to values ("},{"type":"codeVoice","code":"Value"},{"type":"text","text":") over time."}],"metadata":{"title":"ValueAnimation","externalID":"s:6Motion14ValueAnimationC","symbolKind":"class","modules":[{"name":"Motion"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ValueAnimation"}],"roleHeading":"Class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ValueAnimation"}]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/resolvingEpsilon","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/toValue","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/value","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/velocity"]},{"title":"Instance Methods","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/stop(resolveImmediately:postValueChanged:)","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/updateValue(to:postValueChanged:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback"]},{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/supportsVelocity"],"title":"Type Properties"},{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Equatable-Implementations","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Hashable-Implementations"],"title":"Default Implementations","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/motion\/valueanimation"]}],"hierarchy":{"paths":[["doc:\/\/Motion\/documentation\/Motion"]]},"sections":[],"relationshipsSections":[{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/Animation"],"type":"inheritsFrom","title":"Inherits From","kind":"relationships"},{"kind":"relationships","title":"Inherited By","type":"inheritedBy","identifiers":["doc:\/\/Motion\/documentation\/Motion\/BasicAnimation","doc:\/\/Motion\/documentation\/Motion\/DecayAnimation","doc:\/\/Motion\/documentation\/Motion\/SpringAnimation"]},{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/Motion\/SQ","doc:\/\/Motion\/SH"],"type":"conformsTo"}],"references":{"doc://Motion/documentation/Motion/ValueAnimation/supportsVelocity":{"kind":"symbol","abstract":[{"text":"Returns whether or not this class supports velocity.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"supportsVelocity"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/motion\/valueanimation\/supportsvelocity","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/supportsVelocity","role":"symbol","title":"supportsVelocity"},"doc://Motion/documentation/Motion/SpringAnimation":{"type":"topic","navigatorTitle":[{"text":"SpringAnimation","kind":"identifier"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/SpringAnimation","title":"SpringAnimation","role":"symbol","url":"\/documentation\/motion\/springanimation","abstract":[{"text":"This class provides the ability to animate ","type":"text"},{"type":"codeVoice","code":"Value"},{"type":"text","text":" using a physically-modeled spring."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SpringAnimation","kind":"identifier"}]},"doc://Motion/documentation/Motion/ValueAnimation/Hashable-Implementations":{"url":"\/documentation\/motion\/valueanimation\/hashable-implementations","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Hashable-Implementations","title":"Hashable Implementations","type":"topic","abstract":[],"role":"collectionGroup","kind":"article"},"doc://Motion/documentation/Motion/ValueAnimation":{"type":"topic","abstract":[{"type":"text","text":"This class provides the ability to animate changes to values ("},{"type":"codeVoice","code":"Value"},{"type":"text","text":") over time."}],"navigatorTitle":[{"text":"ValueAnimation","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValueAnimation","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation","url":"\/documentation\/motion\/valueanimation","title":"ValueAnimation","role":"symbol"},"doc://Motion/documentation/Motion/ValueAnimation/updateValue(to:postValueChanged:)":{"type":"topic","url":"\/documentation\/motion\/valueanimation\/updatevalue(to:postvaluechanged:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateValue"},{"kind":"text","text":"("},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"postValueChanged"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/updateValue(to:postValueChanged:)","title":"updateValue(to:postValueChanged:)","abstract":[{"text":"Updates ","type":"text"},{"code":"value","type":"codeVoice"},{"text":" to the supplied value and optionally invokes ","type":"text"},{"type":"codeVoice","code":"onValueChanged"},{"type":"text","text":"."}],"kind":"symbol","role":"symbol"},"doc://Motion/SH":{"type":"unresolvable","identifier":"doc:\/\/Motion\/SH","title":"Swift.Hashable"},"doc://Motion/documentation/Motion/ValueAnimation/velocity":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"velocity","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/motion\/valueanimation\/velocity","abstract":[{"text":"The velocity of the animation. Setting this before calling ","type":"text"},{"code":"start","type":"codeVoice"},{"type":"text","text":" will cause the animation to be seeded with that velocity, and then the velocity may change over time."}],"title":"velocity","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/velocity","kind":"symbol","type":"topic"},"doc://Motion/documentation/Motion":{"role":"collection","title":"Motion","identifier":"doc:\/\/Motion\/documentation\/Motion","type":"topic","url":"\/documentation\/motion","abstract":[{"type":"image","identifier":"Motion-Logo-Rendered"}],"kind":"symbol"},"doc://Motion/documentation/Motion/ValueAnimation/stop(resolveImmediately:postValueChanged:)":{"type":"topic","abstract":[{"type":"text","text":"Stops the animation immediately and preserves the last set "},{"type":"codeVoice","code":"value"},{"text":". This is unlike CoreAnimation where the model and presentation layers get get mismatched.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"stop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"resolveImmediately","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"postValueChanged","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/stop(resolveImmediately:postValueChanged:)","url":"\/documentation\/motion\/valueanimation\/stop(resolveimmediately:postvaluechanged:)","title":"stop(resolveImmediately:postValueChanged:)","role":"symbol"},"doc://Motion/documentation/Motion/ValueAnimation/Equatable-Implementations":{"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Equatable-Implementations","kind":"article","type":"topic","role":"collectionGroup","title":"Equatable Implementations","url":"\/documentation\/motion\/valueanimation\/equatable-implementations","abstract":[]},"doc://Motion/documentation/Motion/BasicAnimation":{"title":"BasicAnimation","role":"symbol","url":"\/documentation\/motion\/basicanimation","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicAnimation"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/BasicAnimation","abstract":[{"type":"text","text":"This class provides the ability to animate types that conform to "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" based on basic curves (i.e. "},{"code":"EasingFunction.easeIn","type":"codeVoice"},{"type":"text","text":", "},{"code":"EasingFunction.easeInOut","type":"codeVoice"},{"text":", etc.).","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"BasicAnimation"}],"type":"topic","kind":"symbol"},"doc://Motion/documentation/Motion/ValueAnimation/ValueChangedCallback":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"ValueChangedCallback","kind":"identifier"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback","kind":"symbol","type":"topic","role":"symbol","title":"ValueAnimation.ValueChangedCallback","navigatorTitle":[{"kind":"identifier","text":"ValueChangedCallback"}],"url":"\/documentation\/motion\/valueanimation\/valuechangedcallback","abstract":[{"text":"A block to be called when ","type":"text"},{"code":"value","type":"codeVoice"},{"text":" changes.","type":"text"}]},"doc://Motion/documentation/Motion/SIMDRepresentable":{"type":"topic","role":"symbol","url":"\/documentation\/motion\/simdrepresentable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SIMDRepresentable"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/SIMDRepresentable","abstract":[{"type":"text","text":"A protocol that defines how something that can be represented \/ stored in a "},{"type":"codeVoice","code":"SIMD"},{"text":" type as well as instantiated from said ","type":"text"},{"type":"codeVoice","code":"SIMD"},{"type":"text","text":" type."}],"navigatorTitle":[{"kind":"identifier","text":"SIMDRepresentable"}],"title":"SIMDRepresentable","kind":"symbol"},"doc://Motion/documentation/Motion/ValueAnimation/toValue":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"toValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/toValue","kind":"symbol","type":"topic","role":"symbol","title":"toValue","url":"\/documentation\/motion\/valueanimation\/tovalue","abstract":[{"text":"The target value to animate towards.","type":"text"}]},"doc://Motion/documentation/Motion/ValueAnimation/resolvingEpsilon":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"resolvingEpsilon","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SIMDType","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"EpsilonType","kind":"typeIdentifier"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/resolvingEpsilon","kind":"symbol","type":"topic","role":"symbol","title":"resolvingEpsilon","url":"\/documentation\/motion\/valueanimation\/resolvingepsilon","abstract":[{"text":"The default tolerance level for an animation to be considered finished.","type":"text"}]},"doc://Motion/SQ":{"type":"unresolvable","identifier":"doc:\/\/Motion\/SQ","title":"Swift.Equatable"},"doc://Motion/documentation/Motion/DecayAnimation":{"title":"DecayAnimation","url":"\/documentation\/motion\/decayanimation","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DecayAnimation"}],"abstract":[{"type":"text","text":"This class provides the ability to animate types that conform to "},{"type":"codeVoice","code":"Value"},{"text":" based on decay functions.","type":"text"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/DecayAnimation","navigatorTitle":[{"kind":"identifier","text":"DecayAnimation"}],"kind":"symbol","type":"topic"},"doc://Motion/documentation/Motion/ValueAnimation/value":{"kind":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"value","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"url":"\/documentation\/motion\/valueanimation\/value","type":"topic","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/value","role":"symbol","title":"value"},"doc://Motion/documentation/Motion/ValueAnimation/onValueChanged(disableActions:_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"onValueChanged"},{"text":"(","kind":"text"},{"text":"disableActions","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":", ","kind":"text"},{"text":"ValueAnimation","kind":"typeIdentifier","preciseIdentifier":"s:6Motion14ValueAnimationC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:6Motion14ValueAnimationC0B15ChangedCallbacka","text":"ValueChangedCallback","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)","kind":"symbol","type":"topic","role":"symbol","title":"onValueChanged(disableActions:_:)","url":"\/documentation\/motion\/valueanimation\/onvaluechanged(disableactions:_:)","abstract":[{"text":"Call this to register a ","type":"text"},{"code":"ValueChangedCallback","type":"codeVoice"},{"text":" block that will be called anytime ","type":"text"},{"code":"value","type":"codeVoice"},{"text":" changes from ","type":"text"},{"type":"codeVoice","code":"tick"},{"text":" or if explicitly specified via ","type":"text"},{"type":"codeVoice","code":"postValueChanged"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"When called, it will give the new value that "},{"code":"value","type":"codeVoice"},{"text":" has animated to (since the last invocation).","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If youâ€™re animating "},{"code":"CALayer","type":"codeVoice"},{"type":"text","text":" objects from the block, you may supply "},{"type":"codeVoice","code":"true"},{"type":"text","text":" for "},{"type":"codeVoice","code":"disableActions"},{"text":" to automatically have this wrapped in a ","type":"text"},{"type":"codeVoice","code":"CATransaction"},{"type":"text","text":" that disables implicit animations for the layer."}]},"doc://Motion/documentation/Motion/Animation":{"type":"topic","abstract":[{"text":"This class acts as the base class for all animations within ","type":"text"},{"code":"Motion","type":"codeVoice"},{"text":". It doesnâ€™t do much, other than serve as a base class for all animations to inherit from and implement.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Animation"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Animation"}],"kind":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/Animation","url":"\/documentation\/motion\/animation","title":"Animation","role":"symbol"}}}