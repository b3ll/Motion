{"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ValueAnimation"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"SIMDRepresentable","identifier":"doc:\/\/Motion\/documentation\/Motion\/SIMDRepresentable","preciseIdentifier":"s:6Motion17SIMDRepresentableP","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"The interesting part of this is the ability to have animations on the value performed simultaneously using ","type":"text"},{"type":"codeVoice","code":"simd"},{"type":"text","text":" registers."}]},{"inlineContent":[{"text":"i.e. a ","type":"text"},{"code":"CGRect","type":"codeVoice"},{"text":" that’s animating will have all of its values animated simultaneously (vs. each value being animated sequentially), which should be more performant.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This is normally accomplished by setting an initial state for the animation ("},{"type":"codeVoice","code":"value"},{"type":"text","text":") and then setting a target ("},{"type":"codeVoice","code":"toValue"},{"text":") to animate to.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This class, when ticked, will change a value and emit changes to that value via "},{"code":"onValueChanged","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"If you wish to update the value manually, you may also do so via "},{"code":"updateValue(to:postValueChanged:)","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"When resolved, this class will optionally call the ","type":"text"},{"code":"completionBlock","type":"codeVoice"},{"text":".","type":"text"}]},{"content":[{"inlineContent":[{"type":"text","text":"The base implementation of this class is not meant to be used on its own, rather subclasses provided are to be used."}],"type":"paragraph"}],"type":"aside","style":"note","name":"Note"},{"style":"note","type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"This class is ","type":"text"},{"type":"strong","inlineContent":[{"text":"not","type":"text"}]},{"type":"text","text":" thread-safe. It is meant to be run on the "},{"type":"strong","inlineContent":[{"text":"main thread","type":"text"}]},{"text":" only (much like any AppKit \/ UIKit operations should be main threaded).","type":"text"}]}]},{"type":"aside","name":"See Also","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"BasicAnimation","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"DecayAnimation"},{"type":"text","text":", "},{"type":"codeVoice","code":"SpringAnimation"},{"text":".","type":"text"}]}]}],"kind":"content"}],"sections":[],"kind":"symbol","topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/resolvingEpsilon","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/toValue","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/value","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/velocity"]},{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/stop(resolveImmediately:postValueChanged:)","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/updateValue(to:postValueChanged:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback"],"title":"Type Aliases"},{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/supportsVelocity"],"title":"Type Properties"},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Equatable-Implementations","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Hashable-Implementations"]}],"hierarchy":{"paths":[["doc:\/\/Motion\/documentation\/Motion"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation"},"abstract":[{"type":"text","text":"This class provides the ability to animate changes to values ("},{"code":"Value","type":"codeVoice"},{"text":") over time.","type":"text"}],"relationshipsSections":[{"kind":"relationships","title":"Inherits From","identifiers":["doc:\/\/Motion\/documentation\/Motion\/Animation"],"type":"inheritsFrom"},{"title":"Inherited By","type":"inheritedBy","identifiers":["doc:\/\/Motion\/documentation\/Motion\/BasicAnimation","doc:\/\/Motion\/documentation\/Motion\/DecayAnimation","doc:\/\/Motion\/documentation\/Motion\/SpringAnimation"],"kind":"relationships"},{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/Motion\/SQ","doc:\/\/Motion\/SH"],"title":"Conforms To"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/motion\/valueanimation"]}],"metadata":{"externalID":"s:6Motion14ValueAnimationC","modules":[{"name":"Motion"}],"roleHeading":"Class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValueAnimation","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ValueAnimation"}],"symbolKind":"class","role":"symbol","title":"ValueAnimation"},"references":{"doc://Motion/documentation/Motion":{"identifier":"doc:\/\/Motion\/documentation\/Motion","title":"Motion","type":"topic","kind":"symbol","abstract":[{"identifier":"Motion-Logo-Rendered","type":"image"}],"role":"collection","url":"\/documentation\/motion"},"doc://Motion/documentation/Motion/ValueAnimation/velocity":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"velocity"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/velocity","url":"\/documentation\/motion\/valueanimation\/velocity","kind":"symbol","abstract":[{"text":"The velocity of the animation. Setting this before calling ","type":"text"},{"type":"codeVoice","code":"start"},{"type":"text","text":" will cause the animation to be seeded with that velocity, and then the velocity may change over time."}],"role":"symbol","type":"topic","title":"velocity"},"doc://Motion/documentation/Motion/BasicAnimation":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicAnimation","kind":"identifier"}],"title":"BasicAnimation","type":"topic","identifier":"doc:\/\/Motion\/documentation\/Motion\/BasicAnimation","abstract":[{"text":"This class provides the ability to animate types that conform to ","type":"text"},{"type":"codeVoice","code":"Value"},{"text":" based on basic curves (i.e. ","type":"text"},{"type":"codeVoice","code":"EasingFunction.easeIn"},{"type":"text","text":", "},{"type":"codeVoice","code":"EasingFunction.easeInOut"},{"type":"text","text":", etc.)."}],"kind":"symbol","url":"\/documentation\/motion\/basicanimation","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BasicAnimation"}]},"doc://Motion/documentation/Motion/ValueAnimation/onValueChanged(disableActions:_:)":{"abstract":[{"type":"text","text":"Call this to register a "},{"type":"codeVoice","code":"ValueChangedCallback"},{"type":"text","text":" block that will be called anytime "},{"code":"value","type":"codeVoice"},{"type":"text","text":" changes from "},{"type":"codeVoice","code":"tick"},{"text":" or if explicitly specified via ","type":"text"},{"type":"codeVoice","code":"postValueChanged"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"When called, it will give the new value that "},{"type":"codeVoice","code":"value"},{"text":" has animated to (since the last invocation).","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"If you’re animating "},{"type":"codeVoice","code":"CALayer"},{"type":"text","text":" objects from the block, you may supply "},{"code":"true","type":"codeVoice"},{"type":"text","text":" for "},{"code":"disableActions","type":"codeVoice"},{"text":" to automatically have this wrapped in a ","type":"text"},{"code":"CATransaction","type":"codeVoice"},{"type":"text","text":" that disables implicit animations for the layer."}],"title":"onValueChanged(disableActions:_:)","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"onValueChanged"},{"kind":"text","text":"("},{"text":"disableActions","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:6Motion14ValueAnimationC","kind":"typeIdentifier","text":"ValueAnimation"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Motion14ValueAnimationC0B15ChangedCallbacka","text":"ValueChangedCallback"},{"kind":"text","text":"?)"}],"url":"\/documentation\/motion\/valueanimation\/onvaluechanged(disableactions:_:)"},"doc://Motion/documentation/Motion/SIMDRepresentable":{"identifier":"doc:\/\/Motion\/documentation\/Motion\/SIMDRepresentable","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SIMDRepresentable"}],"url":"\/documentation\/motion\/simdrepresentable","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A protocol that defines how something that can be represented \/ stored in a "},{"code":"SIMD","type":"codeVoice"},{"type":"text","text":" type as well as instantiated from said "},{"type":"codeVoice","code":"SIMD"},{"text":" type.","type":"text"}],"title":"SIMDRepresentable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SIMDRepresentable"}]},"doc://Motion/SH":{"identifier":"doc:\/\/Motion\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://Motion/documentation/Motion/ValueAnimation/Equatable-Implementations":{"title":"Equatable Implementations","type":"topic","abstract":[],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Equatable-Implementations","url":"\/documentation\/motion\/valueanimation\/equatable-implementations","kind":"article","role":"collectionGroup"},"doc://Motion/documentation/Motion/SpringAnimation":{"abstract":[{"text":"This class provides the ability to animate ","type":"text"},{"code":"Value","type":"codeVoice"},{"text":" using a physically-modeled spring.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SpringAnimation","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/SpringAnimation","title":"SpringAnimation","navigatorTitle":[{"text":"SpringAnimation","kind":"identifier"}],"url":"\/documentation\/motion\/springanimation"},"doc://Motion/documentation/Motion/ValueAnimation/stop(resolveImmediately:postValueChanged:)":{"kind":"symbol","title":"stop(resolveImmediately:postValueChanged:)","abstract":[{"type":"text","text":"Stops the animation immediately and preserves the last set "},{"type":"codeVoice","code":"value"},{"text":". This is unlike CoreAnimation where the model and presentation layers get get mismatched.","type":"text"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/stop(resolveImmediately:postValueChanged:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"stop","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"resolveImmediately"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"postValueChanged","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")"}],"url":"\/documentation\/motion\/valueanimation\/stop(resolveimmediately:postvaluechanged:)"},"doc://Motion/documentation/Motion/ValueAnimation/resolvingEpsilon":{"abstract":[{"text":"The default tolerance level for an animation to be considered finished.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"resolvingEpsilon"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SIMDType","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"EpsilonType","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/resolvingEpsilon","title":"resolvingEpsilon","url":"\/documentation\/motion\/valueanimation\/resolvingepsilon"},"doc://Motion/documentation/Motion/Animation":{"identifier":"doc:\/\/Motion\/documentation\/Motion\/Animation","type":"topic","navigatorTitle":[{"text":"Animation","kind":"identifier"}],"url":"\/documentation\/motion\/animation","role":"symbol","kind":"symbol","abstract":[{"text":"This class acts as the base class for all animations within ","type":"text"},{"type":"codeVoice","code":"Motion"},{"text":". It doesn’t do much, other than serve as a base class for all animations to inherit from and implement.","type":"text"}],"title":"Animation","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Animation"}]},"doc://Motion/documentation/Motion/ValueAnimation/toValue":{"kind":"symbol","title":"toValue","abstract":[{"type":"text","text":"The target value to animate towards."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/toValue","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"toValue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}],"url":"\/documentation\/motion\/valueanimation\/tovalue"},"doc://Motion/documentation/Motion/ValueAnimation":{"navigatorTitle":[{"text":"ValueAnimation","kind":"identifier"}],"abstract":[{"type":"text","text":"This class provides the ability to animate changes to values ("},{"code":"Value","type":"codeVoice"},{"type":"text","text":") over time."}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ValueAnimation"}],"kind":"symbol","url":"\/documentation\/motion\/valueanimation","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation","title":"ValueAnimation","type":"topic"},"doc://Motion/documentation/Motion/ValueAnimation/ValueChangedCallback":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ValueChangedCallback"}],"url":"\/documentation\/motion\/valueanimation\/valuechangedcallback","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback","role":"symbol","type":"topic","title":"ValueAnimation.ValueChangedCallback","abstract":[{"type":"text","text":"A block to be called when "},{"type":"codeVoice","code":"value"},{"type":"text","text":" changes."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ValueChangedCallback"}]},"doc://Motion/documentation/Motion/ValueAnimation/updateValue(to:postValueChanged:)":{"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/updateValue(to:postValueChanged:)","abstract":[{"type":"text","text":"Updates "},{"type":"codeVoice","code":"value"},{"type":"text","text":" to the supplied value and optionally invokes "},{"code":"onValueChanged","type":"codeVoice"},{"text":".","type":"text"}],"title":"updateValue(to:postValueChanged:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"updateValue"},{"kind":"text","text":"("},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"postValueChanged"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":")"}],"url":"\/documentation\/motion\/valueanimation\/updatevalue(to:postvaluechanged:)","role":"symbol","kind":"symbol","type":"topic"},"doc://Motion/documentation/Motion/DecayAnimation":{"title":"DecayAnimation","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/DecayAnimation","abstract":[{"type":"text","text":"This class provides the ability to animate types that conform to "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" based on decay functions."}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DecayAnimation"}],"kind":"symbol","url":"\/documentation\/motion\/decayanimation","type":"topic","navigatorTitle":[{"text":"DecayAnimation","kind":"identifier"}]},"doc://Motion/documentation/Motion/ValueAnimation/value":{"url":"\/documentation\/motion\/valueanimation\/value","kind":"symbol","type":"topic","abstract":[],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/value","title":"value"},"doc://Motion/documentation/Motion/ValueAnimation/supportsVelocity":{"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/supportsVelocity","abstract":[{"text":"Returns whether or not this class supports velocity.","type":"text"}],"title":"supportsVelocity","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"supportsVelocity","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/motion\/valueanimation\/supportsvelocity","role":"symbol","kind":"symbol","type":"topic"},"doc://Motion/SQ":{"type":"unresolvable","identifier":"doc:\/\/Motion\/SQ","title":"Swift.Equatable"},"doc://Motion/documentation/Motion/ValueAnimation/Hashable-Implementations":{"title":"Hashable Implementations","type":"topic","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Hashable-Implementations","abstract":[],"url":"\/documentation\/motion\/valueanimation\/hashable-implementations","kind":"article","role":"collectionGroup"}}}