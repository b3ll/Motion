{"metadata":{"roleHeading":"Class","symbolKind":"class","modules":[{"name":"Motion"}],"externalID":"s:6Motion14ValueAnimationC","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ValueAnimation","kind":"identifier"}],"title":"ValueAnimation","navigatorTitle":[{"kind":"identifier","text":"ValueAnimation"}],"role":"symbol"},"topicSections":[{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/resolvingEpsilon","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/toValue","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/value","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/velocity"],"title":"Instance Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/stop(resolveImmediately:postValueChanged:)","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/updateValue(to:postValueChanged:)"]},{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback"],"title":"Type Aliases"},{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/supportsVelocity"],"title":"Type Properties"},{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Equatable-Implementations","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Hashable-Implementations"],"generated":true,"title":"Default Implementations"}],"hierarchy":{"paths":[["doc:\/\/Motion\/documentation\/Motion"]]},"sections":[],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/Motion\/documentation\/Motion\/Animation"],"title":"Inherits From","type":"inheritsFrom"},{"title":"Inherited By","identifiers":["doc:\/\/Motion\/documentation\/Motion\/BasicAnimation","doc:\/\/Motion\/documentation\/Motion\/DecayAnimation","doc:\/\/Motion\/documentation\/Motion\/SpringAnimation"],"type":"inheritedBy","kind":"relationships"},{"kind":"relationships","identifiers":["doc:\/\/Motion\/SQ","doc:\/\/Motion\/SH"],"title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueAnimation"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:6Motion17SIMDRepresentableP","identifier":"doc:\/\/Motion\/documentation\/Motion\/SIMDRepresentable","kind":"typeIdentifier","text":"SIMDRepresentable"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"The interesting part of this is the ability to have animations on the value performed simultaneously using "},{"type":"codeVoice","code":"simd"},{"type":"text","text":" registers."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"i.e. a "},{"type":"codeVoice","code":"CGRect"},{"type":"text","text":" thatâ€™s animating will have all of its values animated simultaneously (vs. each value being animated sequentially), which should be more performant."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This is normally accomplished by setting an initial state for the animation ("},{"code":"value","type":"codeVoice"},{"type":"text","text":") and then setting a target ("},{"type":"codeVoice","code":"toValue"},{"text":") to animate to.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"This class, when ticked, will change a value and emit changes to that value via ","type":"text"},{"type":"codeVoice","code":"onValueChanged"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"If you wish to update the value manually, you may also do so via "},{"type":"codeVoice","code":"updateValue(to:postValueChanged:)"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"When resolved, this class will optionally call the ","type":"text"},{"code":"completionBlock","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"aside","name":"Note","content":[{"inlineContent":[{"text":"The base implementation of this class is not meant to be used on its own, rather subclasses provided are to be used.","type":"text"}],"type":"paragraph"}],"style":"note"},{"type":"aside","style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"This class is ","type":"text"},{"type":"strong","inlineContent":[{"text":"not","type":"text"}]},{"type":"text","text":" thread-safe. It is meant to be run on the "},{"inlineContent":[{"text":"main thread","type":"text"}],"type":"strong"},{"type":"text","text":" only (much like any AppKit \/ UIKit operations should be main threaded)."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"BasicAnimation","type":"codeVoice"},{"text":", ","type":"text"},{"code":"DecayAnimation","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"SpringAnimation"},{"text":".","type":"text"}]}],"style":"note","type":"aside","name":"See Also"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/motion\/valueanimation"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","abstract":[{"type":"text","text":"This class provides the ability to animate changes to values ("},{"code":"Value","type":"codeVoice"},{"text":") over time.","type":"text"}],"references":{"doc://Motion/documentation/Motion/ValueAnimation/Equatable-Implementations":{"abstract":[],"title":"Equatable Implementations","type":"topic","url":"\/documentation\/motion\/valueanimation\/equatable-implementations","role":"collectionGroup","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Equatable-Implementations","kind":"article"},"doc://Motion/documentation/Motion/DecayAnimation":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"This class provides the ability to animate types that conform to "},{"code":"Value","type":"codeVoice"},{"text":" based on decay functions.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"DecayAnimation"}],"title":"DecayAnimation","identifier":"doc:\/\/Motion\/documentation\/Motion\/DecayAnimation","kind":"symbol","url":"\/documentation\/motion\/decayanimation","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DecayAnimation"}]},"doc://Motion/documentation/Motion/ValueAnimation/Hashable-Implementations":{"role":"collectionGroup","kind":"article","title":"Hashable Implementations","abstract":[],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Hashable-Implementations","type":"topic","url":"\/documentation\/motion\/valueanimation\/hashable-implementations"},"doc://Motion/SH":{"type":"unresolvable","identifier":"doc:\/\/Motion\/SH","title":"Swift.Hashable"},"doc://Motion/documentation/Motion":{"kind":"symbol","role":"collection","identifier":"doc:\/\/Motion\/documentation\/Motion","url":"\/documentation\/motion","title":"Motion","type":"topic","abstract":[{"type":"image","identifier":"Motion-Logo-Rendered"}]},"doc://Motion/documentation/Motion/BasicAnimation":{"navigatorTitle":[{"text":"BasicAnimation","kind":"identifier"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/BasicAnimation","role":"symbol","kind":"symbol","url":"\/documentation\/motion\/basicanimation","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"BasicAnimation","kind":"identifier"}],"abstract":[{"type":"text","text":"This class provides the ability to animate types that conform to "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" based on basic curves (i.e. "},{"type":"codeVoice","code":"EasingFunction.easeIn"},{"type":"text","text":", "},{"type":"codeVoice","code":"EasingFunction.easeInOut"},{"text":", etc.).","type":"text"}],"title":"BasicAnimation"},"doc://Motion/documentation/Motion/ValueAnimation/updateValue(to:postValueChanged:)":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"updateValue","kind":"identifier"},{"kind":"text","text":"("},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"postValueChanged","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"title":"updateValue(to:postValueChanged:)","abstract":[{"type":"text","text":"Updates "},{"code":"value","type":"codeVoice"},{"type":"text","text":" to the supplied value and optionally invokes "},{"code":"onValueChanged","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/updateValue(to:postValueChanged:)","type":"topic","url":"\/documentation\/motion\/valueanimation\/updatevalue(to:postvaluechanged:)"},"doc://Motion/documentation/Motion/ValueAnimation/toValue":{"type":"topic","url":"\/documentation\/motion\/valueanimation\/tovalue","kind":"symbol","abstract":[{"type":"text","text":"The target value to animate towards."}],"title":"toValue","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/toValue","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"toValue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}]},"doc://Motion/documentation/Motion/ValueAnimation/value":{"role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"value","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"}],"title":"value","abstract":[],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/value","type":"topic","url":"\/documentation\/motion\/valueanimation\/value"},"doc://Motion/documentation/Motion/ValueAnimation":{"abstract":[{"type":"text","text":"This class provides the ability to animate changes to values ("},{"type":"codeVoice","code":"Value"},{"type":"text","text":") over time."}],"title":"ValueAnimation","type":"topic","url":"\/documentation\/motion\/valueanimation","role":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ValueAnimation","kind":"identifier"}],"navigatorTitle":[{"text":"ValueAnimation","kind":"identifier"}],"kind":"symbol"},"doc://Motion/documentation/Motion/ValueAnimation/velocity":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"velocity","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}],"title":"velocity","abstract":[{"type":"text","text":"The velocity of the animation. Setting this before calling "},{"code":"start","type":"codeVoice"},{"type":"text","text":" will cause the animation to be seeded with that velocity, and then the velocity may change over time."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/velocity","type":"topic","url":"\/documentation\/motion\/valueanimation\/velocity"},"doc://Motion/documentation/Motion/SIMDRepresentable":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SIMDRepresentable","kind":"identifier"}],"navigatorTitle":[{"text":"SIMDRepresentable","kind":"identifier"}],"kind":"symbol","title":"SIMDRepresentable","url":"\/documentation\/motion\/simdrepresentable","type":"topic","identifier":"doc:\/\/Motion\/documentation\/Motion\/SIMDRepresentable","abstract":[{"text":"A protocol that defines how something that can be represented \/ stored in a ","type":"text"},{"code":"SIMD","type":"codeVoice"},{"text":" type as well as instantiated from said ","type":"text"},{"code":"SIMD","type":"codeVoice"},{"type":"text","text":" type."}]},"doc://Motion/documentation/Motion/SpringAnimation":{"title":"SpringAnimation","abstract":[{"text":"This class provides the ability to animate ","type":"text"},{"code":"Value","type":"codeVoice"},{"text":" using a physically-modeled spring.","type":"text"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/SpringAnimation","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SpringAnimation"}],"navigatorTitle":[{"kind":"identifier","text":"SpringAnimation"}],"url":"\/documentation\/motion\/springanimation"},"doc://Motion/documentation/Motion/ValueAnimation/stop(resolveImmediately:postValueChanged:)":{"abstract":[{"type":"text","text":"Stops the animation immediately and preserves the last set "},{"code":"value","type":"codeVoice"},{"text":". This is unlike CoreAnimation where the model and presentation layers get get mismatched.","type":"text"}],"role":"symbol","kind":"symbol","title":"stop(resolveImmediately:postValueChanged:)","url":"\/documentation\/motion\/valueanimation\/stop(resolveimmediately:postvaluechanged:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"stop"},{"kind":"text","text":"("},{"text":"resolveImmediately","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"text":"postValueChanged","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"type":"topic","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/stop(resolveImmediately:postValueChanged:)"},"doc://Motion/documentation/Motion/ValueAnimation/resolvingEpsilon":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolvingEpsilon"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SIMDType"},{"text":".","kind":"text"},{"text":"EpsilonType","kind":"typeIdentifier"}],"title":"resolvingEpsilon","abstract":[{"type":"text","text":"The default tolerance level for an animation to be considered finished."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/resolvingEpsilon","type":"topic","url":"\/documentation\/motion\/valueanimation\/resolvingepsilon"},"doc://Motion/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/Motion\/SQ"},"doc://Motion/documentation/Motion/ValueAnimation/onValueChanged(disableActions:_:)":{"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"onValueChanged"},{"kind":"text","text":"("},{"kind":"externalParam","text":"disableActions"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"text":"ValueAnimation","preciseIdentifier":"s:6Motion14ValueAnimationC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">."},{"kind":"typeIdentifier","preciseIdentifier":"s:6Motion14ValueAnimationC0B15ChangedCallbacka","text":"ValueChangedCallback"},{"kind":"text","text":"?)"}],"title":"onValueChanged(disableActions:_:)","abstract":[{"type":"text","text":"Call this to register a "},{"code":"ValueChangedCallback","type":"codeVoice"},{"text":" block that will be called anytime ","type":"text"},{"code":"value","type":"codeVoice"},{"type":"text","text":" changes from "},{"code":"tick","type":"codeVoice"},{"type":"text","text":" or if explicitly specified via "},{"code":"postValueChanged","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"When called, it will give the new value that ","type":"text"},{"code":"value","type":"codeVoice"},{"text":" has animated to (since the last invocation).","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"If youâ€™re animating "},{"code":"CALayer","type":"codeVoice"},{"type":"text","text":" objects from the block, you may supply "},{"type":"codeVoice","code":"true"},{"type":"text","text":" for "},{"type":"codeVoice","code":"disableActions"},{"text":" to automatically have this wrapped in a ","type":"text"},{"code":"CATransaction","type":"codeVoice"},{"type":"text","text":" that disables implicit animations for the layer."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)","type":"topic","url":"\/documentation\/motion\/valueanimation\/onvaluechanged(disableactions:_:)"},"doc://Motion/documentation/Motion/Animation":{"navigatorTitle":[{"text":"Animation","kind":"identifier"}],"type":"topic","url":"\/documentation\/motion\/animation","kind":"symbol","abstract":[{"type":"text","text":"This class acts as the base class for all animations within "},{"type":"codeVoice","code":"Motion"},{"text":". It doesnâ€™t do much, other than serve as a base class for all animations to inherit from and implement.","type":"text"}],"title":"Animation","identifier":"doc:\/\/Motion\/documentation\/Motion\/Animation","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Animation","kind":"identifier"}]},"doc://Motion/documentation/Motion/ValueAnimation/supportsVelocity":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"supportsVelocity"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Returns whether or not this class supports velocity."}],"type":"topic","role":"symbol","kind":"symbol","title":"supportsVelocity","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/supportsVelocity","url":"\/documentation\/motion\/valueanimation\/supportsvelocity"},"doc://Motion/documentation/Motion/ValueAnimation/ValueChangedCallback":{"role":"symbol","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValueChangedCallback","kind":"identifier"}],"title":"ValueAnimation.ValueChangedCallback","abstract":[{"type":"text","text":"A block to be called when "},{"code":"value","type":"codeVoice"},{"text":" changes.","type":"text"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback","navigatorTitle":[{"kind":"identifier","text":"ValueChangedCallback"}],"type":"topic","url":"\/documentation\/motion\/valueanimation\/valuechangedcallback"}}}