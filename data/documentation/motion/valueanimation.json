{"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"navigatorTitle":[{"text":"ValueAnimation","kind":"identifier"}],"title":"ValueAnimation","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueAnimation"}],"role":"symbol","symbolKind":"class","externalID":"s:6Motion14ValueAnimationC","roleHeading":"Class","modules":[{"name":"Motion"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/motion\/valueanimation"]}],"sections":[],"identifier":{"url":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Motion\/documentation\/Motion"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/resolvingEpsilon","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/toValue","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/value","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/velocity"]},{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/stop(resolveImmediately:postValueChanged:)","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/updateValue(to:postValueChanged:)"],"title":"Instance Methods"},{"title":"Type Aliases","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback"]},{"title":"Type Properties","identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/supportsVelocity"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Equatable-Implementations","doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Hashable-Implementations"]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValueAnimation","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Value","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Motion\/documentation\/Motion\/SIMDRepresentable","kind":"typeIdentifier","preciseIdentifier":"s:6Motion17SIMDRepresentableP","text":"SIMDRepresentable"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"inlineContent":[{"text":"The interesting part of this is the ability to have animations on the value performed simultaneously using ","type":"text"},{"code":"simd","type":"codeVoice"},{"text":" registers.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"i.e. a ","type":"text"},{"type":"codeVoice","code":"CGRect"},{"type":"text","text":" thatâ€™s animating will have all of its values animated simultaneously (vs. each value being animated sequentially), which should be more performant."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"This is normally accomplished by setting an initial state for the animation (","type":"text"},{"code":"value","type":"codeVoice"},{"text":") and then setting a target (","type":"text"},{"type":"codeVoice","code":"toValue"},{"type":"text","text":") to animate to."}]},{"type":"paragraph","inlineContent":[{"text":"This class, when ticked, will change a value and emit changes to that value via ","type":"text"},{"type":"codeVoice","code":"onValueChanged"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"If you wish to update the value manually, you may also do so via ","type":"text"},{"type":"codeVoice","code":"updateValue(to:postValueChanged:)"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"When resolved, this class will optionally call the ","type":"text"},{"type":"codeVoice","code":"completionBlock"},{"type":"text","text":"."}]},{"name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The base implementation of this class is not meant to be used on its own, rather subclasses provided are to be used."}]}],"style":"note"},{"type":"aside","style":"note","name":"Note","content":[{"inlineContent":[{"text":"This class is ","type":"text"},{"inlineContent":[{"type":"text","text":"not"}],"type":"strong"},{"text":" thread-safe. It is meant to be run on the ","type":"text"},{"inlineContent":[{"type":"text","text":"main thread"}],"type":"strong"},{"type":"text","text":" only (much like any AppKit \/ UIKit operations should be main threaded)."}],"type":"paragraph"}]},{"name":"See Also","type":"aside","content":[{"inlineContent":[{"type":"text","text":""},{"code":"BasicAnimation","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"DecayAnimation"},{"text":", ","type":"text"},{"code":"SpringAnimation","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"style":"note"}]}],"abstract":[{"type":"text","text":"This class provides the ability to animate changes to values ("},{"code":"Value","type":"codeVoice"},{"text":") over time.","type":"text"}],"relationshipsSections":[{"kind":"relationships","title":"Inherits From","identifiers":["doc:\/\/Motion\/documentation\/Motion\/Animation"],"type":"inheritsFrom"},{"identifiers":["doc:\/\/Motion\/documentation\/Motion\/BasicAnimation","doc:\/\/Motion\/documentation\/Motion\/DecayAnimation","doc:\/\/Motion\/documentation\/Motion\/SpringAnimation"],"title":"Inherited By","kind":"relationships","type":"inheritedBy"},{"kind":"relationships","identifiers":["doc:\/\/Motion\/SQ","doc:\/\/Motion\/SH"],"title":"Conforms To","type":"conformsTo"}],"kind":"symbol","references":{"doc://Motion/documentation/Motion/SIMDRepresentable":{"navigatorTitle":[{"kind":"identifier","text":"SIMDRepresentable"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/SIMDRepresentable","title":"SIMDRepresentable","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A protocol that defines how something that can be represented \/ stored in a "},{"code":"SIMD","type":"codeVoice"},{"type":"text","text":" type as well as instantiated from said "},{"code":"SIMD","type":"codeVoice"},{"text":" type.","type":"text"}],"url":"\/documentation\/motion\/simdrepresentable","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SIMDRepresentable"}]},"doc://Motion/documentation/Motion/BasicAnimation":{"navigatorTitle":[{"text":"BasicAnimation","kind":"identifier"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/BasicAnimation","title":"BasicAnimation","type":"topic","role":"symbol","abstract":[{"text":"This class provides the ability to animate types that conform to ","type":"text"},{"type":"codeVoice","code":"Value"},{"type":"text","text":" based on basic curves (i.e. "},{"code":"EasingFunction.easeIn","type":"codeVoice"},{"type":"text","text":", "},{"code":"EasingFunction.easeInOut","type":"codeVoice"},{"text":", etc.).","type":"text"}],"url":"\/documentation\/motion\/basicanimation","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"BasicAnimation","kind":"identifier"}]},"doc://Motion/documentation/Motion/ValueAnimation/ValueChangedCallback":{"navigatorTitle":[{"text":"ValueChangedCallback","kind":"identifier"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/ValueChangedCallback","title":"ValueAnimation.ValueChangedCallback","type":"topic","role":"symbol","abstract":[{"text":"A block to be called when ","type":"text"},{"type":"codeVoice","code":"value"},{"type":"text","text":" changes."}],"url":"\/documentation\/motion\/valueanimation\/valuechangedcallback","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ValueChangedCallback"}]},"doc://Motion/documentation/Motion/DecayAnimation":{"navigatorTitle":[{"text":"DecayAnimation","kind":"identifier"}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/DecayAnimation","title":"DecayAnimation","type":"topic","role":"symbol","abstract":[{"type":"text","text":"This class provides the ability to animate types that conform to "},{"code":"Value","type":"codeVoice"},{"text":" based on decay functions.","type":"text"}],"url":"\/documentation\/motion\/decayanimation","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"DecayAnimation","kind":"identifier"}]},"doc://Motion/documentation/Motion/ValueAnimation/Hashable-Implementations":{"url":"\/documentation\/motion\/valueanimation\/hashable-implementations","role":"collectionGroup","kind":"article","type":"topic","abstract":[],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Hashable-Implementations","title":"Hashable Implementations"},"doc://Motion/documentation/Motion/ValueAnimation/onValueChanged(disableActions:_:)":{"title":"onValueChanged(disableActions:_:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"onValueChanged","kind":"identifier"},{"text":"(","kind":"text"},{"text":"disableActions","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:6Motion14ValueAnimationC","text":"ValueAnimation"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:6Motion14ValueAnimationC0B15ChangedCallbacka","text":"ValueChangedCallback","kind":"typeIdentifier"},{"kind":"text","text":"?)"}],"url":"\/documentation\/motion\/valueanimation\/onvaluechanged(disableactions:_:)","abstract":[{"text":"Call this to register a ","type":"text"},{"type":"codeVoice","code":"ValueChangedCallback"},{"type":"text","text":" block that will be called anytime "},{"code":"value","type":"codeVoice"},{"type":"text","text":" changes from "},{"code":"tick","type":"codeVoice"},{"text":" or if explicitly specified via ","type":"text"},{"type":"codeVoice","code":"postValueChanged"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"When called, it will give the new value that "},{"type":"codeVoice","code":"value"},{"type":"text","text":" has animated to (since the last invocation)."},{"text":" ","type":"text"},{"text":"If youâ€™re animating ","type":"text"},{"type":"codeVoice","code":"CALayer"},{"text":" objects from the block, you may supply ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" for ","type":"text"},{"code":"disableActions","type":"codeVoice"},{"text":" to automatically have this wrapped in a ","type":"text"},{"code":"CATransaction","type":"codeVoice"},{"text":" that disables implicit animations for the layer.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/onValueChanged(disableActions:_:)"},"doc://Motion/documentation/Motion/Animation":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Animation"}],"abstract":[{"type":"text","text":"This class acts as the base class for all animations within "},{"type":"codeVoice","code":"Motion"},{"type":"text","text":". It doesnâ€™t do much, other than serve as a base class for all animations to inherit from and implement."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Animation","kind":"identifier"}],"url":"\/documentation\/motion\/animation","type":"topic","identifier":"doc:\/\/Motion\/documentation\/Motion\/Animation","title":"Animation","kind":"symbol"},"doc://Motion/SQ":{"identifier":"doc:\/\/Motion\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://Motion/documentation/Motion/ValueAnimation/Equatable-Implementations":{"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/Equatable-Implementations","title":"Equatable Implementations","type":"topic","role":"collectionGroup","abstract":[],"url":"\/documentation\/motion\/valueanimation\/equatable-implementations","kind":"article"},"doc://Motion/documentation/Motion/ValueAnimation/stop(resolveImmediately:postValueChanged:)":{"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/stop(resolveImmediately:postValueChanged:)","title":"stop(resolveImmediately:postValueChanged:)","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Stops the animation immediately and preserves the last set "},{"code":"value","type":"codeVoice"},{"text":". This is unlike CoreAnimation where the model and presentation layers get get mismatched.","type":"text"}],"url":"\/documentation\/motion\/valueanimation\/stop(resolveimmediately:postvaluechanged:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stop"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"resolveImmediately"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"text":"postValueChanged","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":")","kind":"text"}]},"doc://Motion/documentation/Motion/ValueAnimation/value":{"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/value","title":"value","type":"topic","role":"symbol","abstract":[],"url":"\/documentation\/motion\/valueanimation\/value","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"value"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}]},"doc://Motion/documentation/Motion":{"url":"\/documentation\/motion","type":"topic","abstract":[{"identifier":"Motion-Logo-Rendered","type":"image"}],"title":"Motion","role":"collection","identifier":"doc:\/\/Motion\/documentation\/Motion","kind":"symbol"},"doc://Motion/documentation/Motion/ValueAnimation/velocity":{"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/velocity","title":"velocity","type":"topic","role":"symbol","abstract":[{"type":"text","text":"The velocity of the animation. Setting this before calling "},{"type":"codeVoice","code":"start"},{"type":"text","text":" will cause the animation to be seeded with that velocity, and then the velocity may change over time."}],"url":"\/documentation\/motion\/valueanimation\/velocity","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"velocity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"}]},"doc://Motion/SH":{"title":"Swift.Hashable","identifier":"doc:\/\/Motion\/SH","type":"unresolvable"},"doc://Motion/documentation/Motion/ValueAnimation/resolvingEpsilon":{"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/resolvingEpsilon","title":"resolvingEpsilon","type":"topic","role":"symbol","abstract":[{"type":"text","text":"The default tolerance level for an animation to be considered finished."}],"url":"\/documentation\/motion\/valueanimation\/resolvingepsilon","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"resolvingEpsilon","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SIMDType"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"EpsilonType"}]},"doc://Motion/documentation/Motion/ValueAnimation":{"url":"\/documentation\/motion\/valueanimation","role":"symbol","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"This class provides the ability to animate changes to values ("},{"type":"codeVoice","code":"Value"},{"type":"text","text":") over time."}],"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation","title":"ValueAnimation","navigatorTitle":[{"kind":"identifier","text":"ValueAnimation"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueAnimation"}]},"doc://Motion/documentation/Motion/ValueAnimation/supportsVelocity":{"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/supportsVelocity","title":"supportsVelocity","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Returns whether or not this class supports velocity."}],"url":"\/documentation\/motion\/valueanimation\/supportsvelocity","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"supportsVelocity"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://Motion/documentation/Motion/SpringAnimation":{"kind":"symbol","url":"\/documentation\/motion\/springanimation","title":"SpringAnimation","identifier":"doc:\/\/Motion\/documentation\/Motion\/SpringAnimation","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SpringAnimation","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"text":"This class provides the ability to animate ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" using a physically-modeled spring."}],"navigatorTitle":[{"kind":"identifier","text":"SpringAnimation"}]},"doc://Motion/documentation/Motion/ValueAnimation/updateValue(to:postValueChanged:)":{"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/updateValue(to:postValueChanged:)","title":"updateValue(to:postValueChanged:)","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Updates "},{"type":"codeVoice","code":"value"},{"type":"text","text":" to the supplied value and optionally invokes "},{"type":"codeVoice","code":"onValueChanged"},{"type":"text","text":"."}],"url":"\/documentation\/motion\/valueanimation\/updatevalue(to:postvaluechanged:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"updateValue"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"postValueChanged"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"doc://Motion/documentation/Motion/ValueAnimation/toValue":{"identifier":"doc:\/\/Motion\/documentation\/Motion\/ValueAnimation\/toValue","title":"toValue","type":"topic","role":"symbol","abstract":[{"type":"text","text":"The target value to animate towards."}],"url":"\/documentation\/motion\/valueanimation\/tovalue","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"toValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"}]}}}